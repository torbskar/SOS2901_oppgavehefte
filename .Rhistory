pkgs <- c("tidyverse", "haven", "tidyr",
"sf",
"ggforce", "ggthemes",,
"gganimate", "ggrepel",
"randomforest", "rpart", "rpart.plot")
install.packages(pkgs)
pkgs <- c("tidyverse", "haven", "tidyr",
"sf",
"ggforce", "ggthemes",,
"gganimate", "ggrepel",
"randomforest", "rpart", "rpart.plot")
pkgs <- c("tidyverse", "haven", "tidyr",
"sf",
"ggforce", "ggthemes",
"gganimate", "ggrepel",
"randomforest", "rpart", "rpart.plot")
install.packages(pkgs)
pkgs <- c("tidyverse", "haven", "tidyr",
"sf",
"ggforce", "ggthemes",
"gganimate", "ggrepel",
"randomforest", "rpart", "rpart.plot",
"caret", "e1071", "xgboost",
"rsample", "gbm", "fairness", "gtsummary", "fairmodels",
"skimr", "ipred",
"pROC",
"modelsummary")
install.packages(pkgs)
install.packages("downloadthis")
#| echo: false
#| warning:false
#| message: false
diabetic %>%
download_this(
output_name = "diabetic dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
#| echo: false
#| message: false
library(tidyverse)
library(downloadthis)
credit <- read.csv("data/credit.csv", stringsAsFactors = TRUE)
glimpse(credit)
#| echo: false
credit <- read.csv("data/credit.csv", stringsAsFactors = TRUE)
credit %>%
download_this(
output_name = "credit dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
attrition <- readRDS("data/attrition.rds")
glimpse(attrition)
#| echo: false
attrition %>%
download_this(
output_name = "attrition dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
kommune <- readRDS("data/kommunedata.rds")
glimpse(kommune)
#| echo: false
kommune %>%
download_this(
output_name = "kommune dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
churn <- read.csv("data/WA_Fn-UseC_-Telco-Customer-Churn.csv", stringsAsFactors = TRUE)
glimpse(churn)
#| echo: false
churn %>%
download_this(
output_name = "churn dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
recidivism <- read.csv("data/3-Year_Recidivism_for_Offenders_Released_from_Prison_in_Iowa_elaborated.csv", stringsAsFactors = TRUE)
glimpse(recidivism)
#| echo: false
recidivism %>%
download_this(
output_name = "recidivism dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
compas <- readRDS("data/compas.rds")
glimpse(compas)
#| echo: false
compas %>%
download_this(
output_name = "recidivism dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
diabetic <- read.csv("data/diabetic_data.csv", stringsAsFactors = TRUE)
glimpse(diabetic)
#| echo: false
#| warning:false
#| message: false
diabetic %>%
download_this(
output_name = "diabetic dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
#| echo: false
#| message: false
library(tidyverse)
library(downloadthis)
credit <- read.csv("data/credit.csv", stringsAsFactors = TRUE)
glimpse(credit)
#| echo: false
credit <- read.csv("data/credit.csv", stringsAsFactors = TRUE)
credit %>%
download_this(
output_name = "credit dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
attrition <- readRDS("data/attrition.rds")
glimpse(attrition)
#| echo: false
attrition %>%
download_this(
output_name = "attrition dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
kommune <- readRDS("data/kommunedata.rds")
glimpse(kommune)
#| echo: false
kommune %>%
download_this(
output_name = "kommune dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
churn <- read.csv("data/WA_Fn-UseC_-Telco-Customer-Churn.csv", stringsAsFactors = TRUE)
glimpse(churn)
#| echo: false
churn %>%
download_this(
output_name = "churn dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
recidivism <- read.csv("data/3-Year_Recidivism_for_Offenders_Released_from_Prison_in_Iowa_elaborated.csv", stringsAsFactors = TRUE)
glimpse(recidivism)
#| echo: false
recidivism %>%
download_this(
output_name = "recidivism dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
compas <- readRDS("data/compas.rds")
glimpse(compas)
#| echo: false
compas %>%
download_this(
output_name = "recidivism dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
diabetic <- read.csv("data/diabetic_data.csv", stringsAsFactors = TRUE)
glimpse(diabetic)
#| echo: false
#| warning:false
#| message: false
diabetic %>%
download_this(
output_name = "diabetic dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
absenteeism <- read.csv("data/MFGEmployees4.csv", stringsAsFactors = TRUE)
glimpse(absenteeism)
#| echo: false
absenteeism %>%
download_this(
output_name = "absenteeism dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
hr <- read.csv("data/HRDataset_v14.csv", stringsAsFactors = TRUE)
glimpse(hr)
#| echo: false
hr %>%
download_this(
output_name = "hr dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
load("data/networkExample.RData")
glimpse(dataset)
#| echo: false
dataset %>%
download_this(
output_name = "nettverk dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
oes <- readRDS("data/oes.rds")
class(oes)
glimpse(oes)
#| echo: false
oes %>%
download_this(
output_name = "oes dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
voters <- read.csv("data/voters.csv", stringsAsFactors = TRUE)
glimpse(voters)
#| echo: false
voters %>%
download_this(
output_name = "voters dataset",
output_extension = ".rds",
button_label = "Download data as rds",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save"
)
install.packages("equatiomatic")
#| eval: true
#| code-fold: false
#| echo: true
#| warning: false
#| message: false
library(tidyverse)   # datahåndtering, grafikk og glimpse()
library(skimr)       # funksjonen skim() for å se på data
library(rsample)     # for å dele data i training og testing
kommune <- readRDS( "data/kommunedata.rds")
glimpse(kommune)
skim(kommune)
#| echo: false
#| warning: false
#| message: false
library(skimr)
library(tidyverse)
invisible(Sys.setlocale(locale='no_NB.utf8'))
skim(kommune)
library(rsample)
set.seed(42)
kommune_split <- initial_split(kommune, prop = .7)
kommune_train <- training(kommune_split)
kommune_test <- testing(kommune_split)
#| warning: false
#| message: false
kommune_train <- kommune_train %>%
mutate(prop_unge_menn = (menn_18_25 + menn_26_35)/bef_totalt*100)
ggplot(kommune_train, aes(x = prop_unge_menn,
y = voldskriminalitet)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
est <- lm(voldskriminalitet ~ prop_unge_menn, data = kommune_train)
summary(est)
#| code-fold: false
summary(est)$r.squared
library(gtsummary)
tbl_regression(est, intercept = TRUE)
library(tidyverse)   # datahåndtering, grafikk og glimpse()
library(skimr)       # funksjonen skim() for å se på data
library(rsample)     # for å dele data i training og testing
library(pROC)        # Beregne ROC-curve
library(gtsummary)   # Pent formatert regresjonstabell
library(caret)       # Funksjonen confusionMatrix()
invisible(Sys.setlocale(locale='no_NB.utf8'))
library(tidyverse)   # datahåndtering, grafikk og glimpse()
library(skimr)       # funksjonen skim() for å se på data
library(rsample)     # for å dele data i training og testing
library(pROC)        # Beregne ROC-curve
library(gtsummary)   # Pent formatert regresjonstabell
library(caret)       # Funksjonen confusionMatrix()
attrition <- readRDS("data/attrition.rds")
skim(attrition)
set.seed(426)
attrition_split <- initial_split(attrition)
training <- training(attrition_split)
testing  <- testing(attrition_split)
nrow(attrition)
nrow(training)
nrow(testing)
training$Attrition <- as.numeric(training$Attrition == "Yes")
head(training$Attrition)
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()
lm_est <- lm(Attrition ~ Age , data = training)
summary(lm_est)
#| echo: false
library(equatiomatic)
n_data <- data.frame(Age = seq(18, 65))
n_data$pred <- predict(lm_est, newdata = n_data)
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()+
geom_line(data =n_data, aes(x = Age, y = pred))
est_logit <- glm(Attrition ~ Age, data = training, family = "binomial")
summary(est_logit)
tbl_regression(est_logit)
ggplot(training, aes(x=Age, y=Attrition))+
geom_point(alpha=.3)+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
ggplot(training, aes(x=Age, y=Attrition))+
geom_jitter(height = .02, alpha=.3)+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
attrition_pred <- training %>%
mutate(prob = predict(est_logit, type = "response"))
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
est_multlogit <- glm(Attrition ~ ., data = training, family = "binomial")
summary(est_multlogit)
attrition_pred <- training %>%
mutate(prob = predict(est_multlogit, type = "response"))
ROC <- roc(attrition_pred, Attrition, prob)
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC)
attrition_test <- testing %>%
mutate(prob = predict(est_multlogit, newdata = testing, type = "response"))
ROC_test <- roc(attrition_test, Attrition, prob)
df <- data.frame(Sensitivity = ROC_test$sensitivities,
Specificity = ROC_test$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC_test)
ggplot(attrition_test, aes(x = prob)) +
geom_histogram()
attrition_test <- attrition_test %>%
mutate(attrition_class = as.factor(ifelse(prob < .5, "No", "Yes")))
tab <- attrition_test %>%
select(attrition_class, Attrition) %>%
table()
tab
confusionMatrix(reference = attrition_test$Attrition, attrition_test$attrition_class, positive = "Yes")
confusionMatrix(tab, positive = "Yes")
