mutate(prob = predict(est_multlogit, type = "response"))
ROC <- roc(attrition_pred, Attrition, prob)
attrition_pred <- attrition %>%
mutate(prob = predict(est_multlogit, type = "response"))
ROC <- roc(attrition_pred, Attrition, prob)
attrition_pred
roc
ROC <- roc(attrition_pred, Attrition, prob)
library(pROC)
ROC <- roc(attrition_pred, Attrition, prob)
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC)
attrition_pred <- training %>%
mutate(prob = predict(est_logit, type = "response"))
attrition_pred <- training %>%
mutate(prob = predict(est_logit, newdata = . , type = "response"))
est_logit <- glm(Attrition ~ Age, data = training, family = "binomial")
summary(est_logit)
library(gtsummary)
tbl_regression(est_logit)
#| echo: false
library(equatiomatic)
extract_eq(est_logit, use_coefs = TRUE, coef_digits = 3)
#| warning: false
#| message: false
ggplot(training, aes(x=Age, y=Attrition))+
geom_point(alpha=.3)+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
#| warning: false
#| message: false
ggplot(training, aes(x=Age, y=Attrition))+
geom_jitter(height = .02, alpha=.3)+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
attrition_pred <- training %>%
mutate(prob = predict(est_logit, newdata = . , type = "response"))
attrition_pred <- training %>%
mutate(prob = predict(est_logit, type = "response"))
attrition_pred <- training %>%
mutate(prob = predict(est_logit, type = "response"))
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
est_multlogit <- glm(Attrition ~ ., data = training, family = "binomial")
summary(est_multlogit)
attrition_pred <- training %>%
mutate(prob = predict(est_multlogit, type = "response"))
ROC <- roc(attrition_pred, Attrition, prob)
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC)
attrition_pred <- testing %>%
mutate(prob = predict(est_multlogit, newdata = ., type = "response"))
attrition_pred <- testing %>%
mutate(prob = predict(est_multlogit, newdata = testing, type = "response"))
attrition_pred <- testing %>%
mutate(prob = predict(est_multlogit, newdata = testing, type = "response"))
ROC <- roc(attrition_pred, Attrition, prob)
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC)
ROC <- roc(attrition_pred, Attrition, prob)
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
attrition_pred <- training %>%
mutate(prob = predict(est_multlogit, type = "response"))
ROC <- roc(attrition_pred, Attrition, prob)
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC)
attrition_test <- testing %>%
mutate(prob = predict(est_multlogit, newdata = testing, type = "response"))
ROC <- roc(attrition_test, Attrition, prob)
ROC_test <- roc(attrition_test, Attrition, prob)
df <- data.frame(Sensitivity = ROC_test$sensitivities,
Specificity = ROC_test$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC_test)
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
attrition_pred <- training %>%
mutate(prob = predict(est_multlogit, type = "response"))
ROC <- roc(attrition_pred, Attrition, prob)
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC)
attrition_test <- testing %>%
mutate(prob = predict(est_multlogit, newdata = testing, type = "response"))
ROC_test <- roc(attrition_test, Attrition, prob)
df <- data.frame(Sensitivity = ROC_test$sensitivities,
Specificity = ROC_test$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC_test)
hist(attrition_test$prob)
attrition_test <- attrition_test %>%
mutate(attrition_class = as.numeric(prob > .5))
ggplot(attrition_test, aes(x = prob)) +
geom_histogram()
#| message: false
#| warning: false
ggplot(attrition_test, aes(x = prob)) +
geom_histogram()
attrition_test %>%
select(attrition_class, prob) %>%
table()
attrition_test %>%
select(attrition_class, Attrition) %>%
table()
attrition_test %>%
select(Attrition, attrition_class) %>%
table()
attrition_test <- attrition_test %>%
mutate(attrition_class = ifelse(prob > .5, "yes", "No"))
attrition_test %>%
select(Attrition, attrition_class) %>%
table()
?confusionMatrix
library(caret)
?confusionMatrix
confusionMatrix(attrition_test, Attrition, attrition_class)
confusionMatrix(data = attrition_test, Attrition, attrition_class)
confusionMatrix(data = attrition_test, reference=Attrition, attrition_class)
confusionMatrix(attrition_test$Attrition, attrition_test$attrition_class)
attrition_test <- attrition_test %>%
mutate(attrition_class = as.factor(ifelse(prob > .5, "yes", "No")))
attrition_test %>%
select(Attrition, attrition_class) %>%
table()
confusionMatrix(attrition_test$Attrition, attrition_test$attrition_class)
attrition_test <- attrition_test %>%
mutate(attrition_class = as.factor(ifelse(prob > .5, "yes", "No")))
attrition_test <- attrition_test %>%
mutate(attrition_class = as.factor(ifelse(prob < .5, "No", "Yes")))
attrition_test %>%
select(Attrition, attrition_class) %>%
table()
confusionMatrix(attrition_test$Attrition, attrition_test$attrition_class)
confusionMatrix(attrition_test$Attrition, attrition_test$attrition_class, positive = "Yes")
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
attrition_pred <- training %>%
mutate(prob = predict(est_logit, type = "response"))
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
#| warning: false
#| message: false
set.seed(42)
attrition_split <- initial_split(attrition)
training <- training(attrition_split)
testing  <- testing(attrition_split)
str(training$Attrition)
head(training$Attrition)
levels(training$Attrition)
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
attrition_pred <- training %>%
mutate(prob = predict(est_logit, type = "response"))
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
table(training$Attrition)
table(testing$Attrition)
table(testing$Attrition)
table(training$Attrition)
set.seed(426)
attrition_split <- initial_split(attrition)
training <- training(attrition_split)
testing  <- testing(attrition_split)
table(testing$Attrition)
table(training$Attrition)
nrow(attrition)
nrow(training)
nrow(testing)
str(training$Attrition)
head(training$Attrition)
levels(training$Attrition)
training$Attrition <- as.numeric(training$Attrition == "Yes")
head(training$Attrition)
mean(training$Attrition)
#| warning: false
#| message: false
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()
lm_est <- lm(Attrition ~ Age , data = training)
summary(lm_est)
#| echo: false
library(equatiomatic)
extract_eq(lm_est, use_coefs = TRUE, coef_digits = 3)
#| warning: false
#| message: false
n_data <- data.frame(Age = seq(18, 65))
n_data$pred <- predict(lm_est, newdata = n_data)
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()+
geom_line(data =n_data, aes(x = Age, y = pred))
est_logit <- glm(Attrition ~ Age, data = training, family = "binomial")
summary(est_logit)
library(gtsummary)
tbl_regression(est_logit)
#| echo: false
library(equatiomatic)
extract_eq(est_logit, use_coefs = TRUE, coef_digits = 3)
#| warning: false
#| message: false
ggplot(training, aes(x=Age, y=Attrition))+
geom_point(alpha=.3)+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
#| warning: false
#| message: false
ggplot(training, aes(x=Age, y=Attrition))+
geom_jitter(height = .02, alpha=.3)+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
#| warning: false
#| message: false
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
attrition_pred <- training %>%
mutate(prob = predict(est_logit, type = "response"))
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
est_multlogit <- glm(Attrition ~ ., data = training, family = "binomial")
summary(est_multlogit)
attrition_pred <- training %>%
mutate(prob = predict(est_multlogit, type = "response"))
ROC <- roc(attrition_pred, Attrition, prob)
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC)
attrition_test <- testing %>%
mutate(prob = predict(est_multlogit, newdata = testing, type = "response"))
ROC_test <- roc(attrition_test, Attrition, prob)
df <- data.frame(Sensitivity = ROC_test$sensitivities,
Specificity = ROC_test$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC_test)
#| message: false
#| warning: false
ggplot(attrition_test, aes(x = prob)) +
geom_histogram()
attrition_test <- attrition_test %>%
mutate(attrition_class = as.factor(ifelse(prob < .5, "No", "Yes")))
attrition_test %>%
select(Attrition, attrition_class) %>%
table()
library(caret)
confusionMatrix(attrition_test$Attrition, attrition_test$attrition_class, positive = "Yes")
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
attrition_pred <- training %>%
mutate(prob = predict(est_logit, type = "response"))
table(attrition_pred$Attrition)
est_logit <- glm(Attrition ~ Age, data = training, family = "binomial")
summary(est_logit)
tbl_regression(est_logit)
mean(training$Attrition)
#| warning: false
#| message: false
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()
#| eval: true
#| code-fold: false
#| echo: true
#| warning: false
#| message: false
library(tidyverse)   # datahåndtering, grafikk og glimpse()
library(skimr)       # funksjonen skim() for å se på data
library(rsample)     # for å dele data i training og testing
library(pROC)        # Beregne ROC-curve
library(AUC)         # For å beregne AUC
library(gtsummary)   # Pent formatert regresjonstabell
library(caret)       # Funksjonen confusionMatrix()
#| warning: false
#| message: false
attrition <- attrition %>%
select(- Over18, - EmployeeCount, -StandardHours)
#| warning: false
#| message: false
attrition <-read.csv("data/Attrition.csv", stringsAsFactors = TRUE)
skim(attrition)
#| warning: false
#| message: false
attrition <- attrition %>%
select(- Over18, - EmployeeCount, -StandardHours)
glimpse(attrition)
#| warning: false
#| message: false
set.seed(426)
attrition_split <- initial_split(attrition)
training <- training(attrition_split)
testing  <- testing(attrition_split)
nrow(attrition)
nrow(training)
nrow(testing)
str(training$Attrition)
head(training$Attrition)
levels(training$Attrition)
training$Attrition <- as.numeric(training$Attrition == "Yes")
head(training$Attrition)
mean(training$Attrition)
#| warning: false
#| message: false
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()
lm_est <- lm(Attrition ~ Age , data = training)
summary(lm_est)
#| echo: false
library(equatiomatic)
extract_eq(lm_est, use_coefs = TRUE, coef_digits = 3)
#| warning: false
#| message: false
n_data <- data.frame(Age = seq(18, 65))
n_data$pred <- predict(lm_est, newdata = n_data)
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()+
geom_line(data =n_data, aes(x = Age, y = pred))
est_logit <- glm(Attrition ~ Age, data = training, family = "binomial")
summary(est_logit)
tbl_regression(est_logit)
#| echo: false
library(equatiomatic)
extract_eq(est_logit, use_coefs = TRUE, coef_digits = 3)
#| warning: false
#| message: false
ggplot(training, aes(x=Age, y=Attrition))+
geom_point(alpha=.3)+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
#| warning: false
#| message: false
ggplot(training, aes(x=Age, y=Attrition))+
geom_jitter(height = .02, alpha=.3)+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
#| warning: false
#| message: false
training_p <- training %>%
group_by(Age) %>%
summarise(Attrition = mean(Attrition == 1))
ggplot(training_p, aes(x=Age, y=Attrition))+
geom_point()+
stat_smooth(method="glm", method.args=list(family="binomial"), se=FALSE, col="red")
attrition_pred <- training %>%
mutate(prob = predict(est_logit, type = "response"))
ROC <- roc( attrition_pred$Attrition, attrition_pred$prob )
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
est_multlogit <- glm(Attrition ~ ., data = training, family = "binomial")
summary(est_multlogit)
attrition_pred <- training %>%
mutate(prob = predict(est_multlogit, type = "response"))
ROC <- roc(attrition_pred, Attrition, prob)
df <- data.frame(Sensitivity = ROC$sensitivities,
Specificity = ROC$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
```{r}
auc(ROC)
attrition_test <- testing %>%
mutate(prob = predict(est_multlogit, newdata = testing, type = "response"))
ROC_test <- roc(attrition_test, Attrition, prob)
df <- data.frame(Sensitivity = ROC_test$sensitivities,
Specificity = ROC_test$specificities)
ggplot(df, aes(y = Sensitivity, x= (1-Specificity))) +
geom_line() +
geom_abline(intercept = 0, slope = 1, col = "gray")+
coord_equal()
auc(ROC_test)
#| message: false
#| warning: false
ggplot(attrition_test, aes(x = prob)) +
geom_histogram()
attrition_test <- attrition_test %>%
mutate(attrition_class = as.factor(ifelse(prob < .5, "No", "Yes")))
attrition_test %>%
select(Attrition, attrition_class) %>%
table()
library(caret)
confusionMatrix(attrition_test$Attrition, attrition_test$attrition_class, positive = "Yes")
?roc
ROC <- pRoc::roc( attrition_pred$Attrition, attrition_pred$prob )
ROC <-AUC::roc( attrition_pred$Attrition, attrition_pred$prob )
?roc
ROC <- pROC::roc( attrition_pred$Attrition, attrition_pred$prob )
?auc
pROC::auc(ROC)
attrition <- readRDS("data/attrition.rds")
glimpse(attrition)
attrition <- readRDS("data/attrition.rds")
skim(attrition)
attrition <- readRDS("data/attrition.rds")
skim(attrition)
glimpse(attrition)
attrition <- attrition %>%
select(- EmployeeNumber)
glimpse(attrition)
attrition <- readRDS("data/attrition.rds")
skim(attrition)
