# "classInt",
#"rgdal","maptools",
#"cshapes","fields",
"spatstat","rgeos","raster",
"sf",
## Regression modeling
"mgcv","plm","pglm",
"survminer", "survival",
"AUC",
#"sqldf",
# "XLConnect","XLConnectJars",
#"zoo", "Zelig",
# import
#"xlsx" ,"openxlsx" ,
#"readstata13",
# "forecast",
#  "XML",
# "Matrix",
# "Grid2Polygons",
#"tabulizer",
## Machine learning
"randomForest",
"caret",
"rpart", "rpart.plot", "pdp",
#"RANN",
"fairmodels", "fairness",
# pedagogisk
"gradethis", "learnr",
## Diverse
#"httr", "caTools", "bitops", "knitr",
#"downloadr",
"caTools",
"rlang", "plogr",
"DescTools", #"reshape", "tables",
#"PresenceAbsence", "ROCR",
"devtools",
"V8",
#"tableone",
#"plotROC",
#"praise",
#"PxWebApiData" , "rjstat" , # SSB-API
"synthpop",
#"gtools", "scholar",
#"swirl", "swirlify",
#"arsenal", "flextable", "officer",
"bookdown",
## Annet
"gapminder",
"nettskjemar",
"norgeo"
)
#install.packages("animation")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
#new.packages <- list.of.packages[!(list.of.packages %in% installed.packages(.Library)[,"Package"])]
new.packages[order(new.packages)]
if(length(new.packages)) install.packages(new.packages)
library(ipred)       #for fitting bagged decision trees
library(e1071)       #for calculating variable importance
list.of.packages <-
c("tidyverse", "lubridate",
"data.table" ,
"arrow", "qs",
"cutpointr",
"extrafont",
"sjlabelled", "labelled", "haven", "sjmisc",
"forcats",
"skimr",
"memisc",
"openxlsx", "xlsx",
"log4r",
# graphics
"ggplot2", "ggmap",
"gganimate", "gifski", "ggforce",
"animation",
"ggpubr",
"ggROC",
"RColorBrewer", "ggthemes", "magick",
# Maps and GIS
#"leaflet",
"sf",
"rsample",
"mosaic", "arsenal",
#"rattle",
"pROC", "reportROC",
"dendextend", "directlabels",
#"foreign",
"htmltools",
## Network
"igraph", #"threejs",
"statnet", "intergraph",
# output / tables
"kableExtra","stargazer", "tables",
"corrplot",
#"arsenal",
#"radix",    #markdowngreier
"bookdown", "tinytex",
"gt", "gtsummary",
"flextable",
### GIS / spatial
#"osmar", "sp","OpenStreetMap", "splancs","spdep","lgcp",
# "gridExtra", "SPODT","SDMTools",
# "classInt",
#"rgdal","maptools",
#"cshapes","fields",
"spatstat","rgeos","raster",
"sf",
## Regression modeling
"mgcv","plm","pglm",
"survminer", "survival",
"AUC",
#"sqldf",
# "XLConnect","XLConnectJars",
#"zoo", "Zelig",
# import
#"xlsx" ,"openxlsx" ,
#"readstata13",
# "forecast",
#  "XML",
# "Matrix",
# "Grid2Polygons",
#"tabulizer",
## Machine learning
"randomForest",
"caret",
"Adaboost", "gbm",
"rpart", "rpart.plot", "pdp",
#"RANN",
"fairmodels", "fairness",
# pedagogisk
"gradethis", "learnr",
## Diverse
#"httr", "caTools", "bitops", "knitr",
#"downloadr",
"caTools",
"rlang", "plogr",
"DescTools", #"reshape", "tables",
#"PresenceAbsence", "ROCR",
"devtools",
"V8",
#"tableone",
#"plotROC",
#"praise",
#"PxWebApiData" , "rjstat" , # SSB-API
"synthpop",
#"gtools", "scholar",
#"swirl", "swirlify",
#"arsenal", "flextable", "officer",
"bookdown",
## Annet
"gapminder",
"nettskjemar",
"norgeo"
)
#install.packages("animation")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
#new.packages <- list.of.packages[!(list.of.packages %in% installed.packages(.Library)[,"Package"])]
new.packages[order(new.packages)]
if(length(new.packages)) install.packages(new.packages)
list.of.packages <-
c("tidyverse", "lubridate",
"data.table" ,
"arrow", "qs",
"cutpointr",
"extrafont",
"sjlabelled", "labelled", "haven", "sjmisc",
"forcats",
"skimr",
"memisc",
"openxlsx", "xlsx",
"log4r",
# graphics
"ggplot2", "ggmap",
"gganimate", "gifski", "ggforce",
"animation",
"ggpubr",
"ggROC",
"RColorBrewer", "ggthemes", "magick",
# Maps and GIS
#"leaflet",
"sf",
"rsample",
"mosaic", "arsenal",
#"rattle",
"pROC", "reportROC",
"dendextend", "directlabels",
#"foreign",
"htmltools",
## Network
"igraph", #"threejs",
"statnet", "intergraph",
# output / tables
"kableExtra","stargazer", "tables",
"corrplot",
#"arsenal",
#"radix",    #markdowngreier
"bookdown", "tinytex",
"gt", "gtsummary",
"flextable",
### GIS / spatial
#"osmar", "sp","OpenStreetMap", "splancs","spdep","lgcp",
# "gridExtra", "SPODT","SDMTools",
# "classInt",
#"rgdal","maptools",
#"cshapes","fields",
"spatstat","rgeos","raster",
"sf",
## Regression modeling
"mgcv","plm","pglm",
"survminer", "survival",
"AUC",
#"sqldf",
# "XLConnect","XLConnectJars",
#"zoo", "Zelig",
# import
#"xlsx" ,"openxlsx" ,
#"readstata13",
# "forecast",
#  "XML",
# "Matrix",
# "Grid2Polygons",
#"tabulizer",
## Machine learning
"randomForest",
"caret",
"adabag", "gbm",
"rpart", "rpart.plot", "pdp",
#"RANN",
"fairmodels", "fairness",
# pedagogisk
"gradethis", "learnr",
## Diverse
#"httr", "caTools", "bitops", "knitr",
#"downloadr",
"caTools",
"rlang", "plogr",
"DescTools", #"reshape", "tables",
#"PresenceAbsence", "ROCR",
"devtools",
"V8",
#"tableone",
#"plotROC",
#"praise",
#"PxWebApiData" , "rjstat" , # SSB-API
"synthpop",
#"gtools", "scholar",
#"swirl", "swirlify",
#"arsenal", "flextable", "officer",
"bookdown",
## Annet
"gapminder",
"nettskjemar",
"norgeo"
)
#install.packages("animation")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(tidyverse)
library(rsample)
library(fairmodels)
library(randomForest)
library(caret)
compas <- readRDS("../data/compas.rds")
glimpse(compas)
set.seed(4356)
rf <- randomForest(Two_yr_Recidivism ~ . ,
data = compas)
rf
plot(rf)
?plot.randomForest
confusionMatrix(compas_p$pred_rf,
compas_p$Two_yr_Recidivism, positive="1")
compas_p <- compas %>%
mutate(pred_rf = predict(rf))
table(compas_p$pred_rf, compas_p$Two_yr_Recidivism)
confusionMatrix(compas_p$pred_rf,
compas_p$Two_yr_Recidivism, positive="1")
set.seed(4356)
rf1 <- randomForest(Two_yr_Recidivism ~ . ,
ntree = 1500,
data = compas)
plot(rf1)
rf1
plot(rf1)
abline(a=500)
plot(rf1)
abline(a=500)
plot(rf1)
abline(v=500)
plot(rf1)
abline(v=500)
plot(rf1)
abline(v=500, col = "gray")
set.seed(4356)
rf1 <- randomForest(Two_yr_Recidivism ~ . ,
ntree = 3000,
data = compas)
plot(rf1)
rf1
plot(rf1)
abline(v=500, col = "gray")
rf1
set.seed(4356)
rf2 <- randomForest(Two_yr_Recidivism ~ . ,
mtry=4,
data = compas)
rf2
plot(rf2)
rf2
dim(compas)
table(compas$Two_yr_Recidivism)
table(compas$Two_yr_Recidivism)*.7
set.seed(4356)
rf3 <- randomForest(Two_yr_Recidivism ~ . ,
sampsize = c(1900, 1900),
data = compas)
rf3
set.seed(4356)
rf3 <- randomForest(Two_yr_Recidivism ~ . ,
sampsize = c(1500, 2500),
data = compas)
rf3
set.seed(4356)
rf3 <- randomForest(Two_yr_Recidivism ~ . ,
sampsize = c(1200, 1900),
data = compas)
rf3
set.seed(4356)
rf3 <- randomForest(Two_yr_Recidivism ~ . ,
sampsize = c(1000, 1900),
data = compas)
rf3
compas_p <- compas %>%
mutate(pred_rf = predict(rf))
confusionMatrix(compas_p$pred_rf,
compas_p$Two_yr_Recidivism, positive="1")
compas_1 <- compas_p %>%
filter(Sex == "Male")
confusionMatrix(compas_1$pred_rf,
compas_1$Two_yr_Recidivism, positive="1")
compas_2 <- compas_p %>%
filter(Sex == "Female")
confusionMatrix(compas_2$pred_rf,
compas_2$Two_yr_Recidivism, positive="1")
varImpPlot(rf2)
varImpPlot(rf2, type = 2)
varImpPlot(rf2, type = 1)
set.seed(4356)
rf <- randomForest(Two_yr_Recidivism ~ . ,
importance = TRUE,
data = compas)
rf
varImpPlot(rf)
varImpPlot(rf, type = 1)
?partialPlot
partialPlot(rf, "Number_of_priors")
partialPlot(rf, x.var = "Number_of_priors")
partialPlot(rf, pred.data = compas,
x.var = Number_of_Priors,
which.class = "1")
update.packages(ask=FALSE)
update.packages(ask=FALSE)
# https://stackoverflow.com/questions/15217758/remove-a-library-from-libpaths-permanently-without-rprofile-site
set_lib_paths <- function(lib_vec) {
lib_vec <- normalizePath(lib_vec, mustWork = TRUE)
shim_fun <- .libPaths
shim_env <- new.env(parent = environment(shim_fun))
shim_env$.Library <- character()
shim_env$.Library.site <- character()
environment(shim_fun) <- shim_env
shim_fun(lib_vec)
}
#path <- "C:/Users/torbskar/OneDrive - Universitetet i Oslo/Dokumenter/R/win-library/4.1"
path <- "C:/Users/torbskar/OneDrive - Universitetet i Oslo/Dokumenter/R/win-library/4.2"
set_lib_paths(path)
update.packages(ask=FALSE)
library(rlang)
.libPaths()
update.packages(ask=FALSE)
list.of.packages <-
c("tidyverse", "lubridate",
"data.table" ,
"arrow", "qs",
"cutpointr",
"extrafont",
"sjlabelled", "labelled", "haven", "sjmisc",
"forcats",
"skimr",
"memisc",
"openxlsx", "xlsx",
"log4r",
# graphics
"ggplot2", "ggmap",
"gganimate", "gifski", "ggforce",
"animation",
"ggpubr",
"ggROC",
"RColorBrewer", "ggthemes", "magick",
# Maps and GIS
#"leaflet",
"sf",
"rsample",
"mosaic", "arsenal",
#"rattle",
"pROC", "reportROC",
"dendextend", "directlabels",
#"foreign",
"htmltools",
## Network
"igraph", #"threejs",
"statnet", "intergraph",
# output / tables
"kableExtra","stargazer", "tables",
"corrplot",
#"arsenal",
#"radix",    #markdowngreier
"bookdown", "tinytex",
"gt", "gtsummary",
"flextable",
### GIS / spatial
#"osmar", "sp","OpenStreetMap", "splancs","spdep","lgcp",
# "gridExtra", "SPODT","SDMTools",
# "classInt",
#"rgdal","maptools",
#"cshapes","fields",
"spatstat","rgeos","raster",
"sf",
## Regression modeling
"mgcv","plm","pglm",
"survminer", "survival",
"AUC",
#"sqldf",
# "XLConnect","XLConnectJars",
#"zoo", "Zelig",
# import
#"xlsx" ,"openxlsx" ,
#"readstata13",
# "forecast",
#  "XML",
# "Matrix",
# "Grid2Polygons",
#"tabulizer",
## Machine learning
"randomForest",
"caret",
"adabag", "gbm",
"rpart", "rpart.plot", "pdp",
#"RANN",
"fairmodels", "fairness",
# pedagogisk
"gradethis", "learnr",
## Diverse
#"httr", "caTools", "bitops", "knitr",
#"downloadr",
"caTools",
"rlang", "plogr",
"DescTools", #"reshape", "tables",
#"PresenceAbsence", "ROCR",
"devtools",
"V8",
#"tableone",
#"plotROC",
#"praise",
#"PxWebApiData" , "rjstat" , # SSB-API
"synthpop",
#"gtools", "scholar",
#"swirl", "swirlify",
#"arsenal", "flextable", "officer",
"bookdown",
## Annet
"gapminder",
"nettskjemar",
"norgeo"
)
#install.packages("animation")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
new.packages[order(new.packages)]
if(length(new.packages)) install.packages(new.packages)
if(length(new.packages)) install.packages(new.packages)
remove.packages("rlang")
library(tidyverse)
library(rsample)
library(fairmodels)
library(randomForest)
library(caret)
compas <- readRDS("../data/compas.rds")
glimpse(compas)
ggplot(kom_2016, aes(x = prop_unge_menn,
y = Vold)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
?rpart
credit_tree <- rpart(default ~ age + amount + percent_of_income + purpose + employment_duration + housing,
data=training, method="class")
library(tidyverse)
library(rpart)      # funksjoner for CART
library(rpart.plot) # funksjon for å plotte CART
library(caret)      # inneholder funksjon for confusion matrix
library(skimr)      # funksjonen skim()
credit_tree <- rpart(default ~ age + amount + percent_of_income + purpose + employment_duration + housing,
data=training, method="class")
credit <- read.csv("../data/credit.csv", stringsAsFactors = TRUE)
credit_tree <- rpart(default ~ age + amount + percent_of_income + purpose + employment_duration + housing,
data=training, method="class")
rpart.plot(credit_tree)
grense <- 0.7
lottery <- runif(n = nrow(credit))
training <- filter(credit, lottery < grense)
testing  <- filter(credit, lottery >= grense)
credit_tree <- rpart(default ~ age + amount + percent_of_income + purpose + employment_duration + housing,
data=training, method="class")
rpart.plot(credit_tree)
rpart.rules(credit_tree, extra=4)
