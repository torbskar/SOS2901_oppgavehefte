credit_tree <- rpart(default ~ age + amount + percent_of_income + purpose + employment_duration + housing,
data=training, method="class")
credit <- read.csv("../data/credit.csv", stringsAsFactors = TRUE)
credit_tree <- rpart(default ~ age + amount + percent_of_income + purpose + employment_duration + housing,
data=training, method="class")
rpart.plot(credit_tree)
grense <- 0.7
lottery <- runif(n = nrow(credit))
training <- filter(credit, lottery < grense)
testing  <- filter(credit, lottery >= grense)
credit_tree <- rpart(default ~ age + amount + percent_of_income + purpose + employment_duration + housing,
data=training, method="class")
rpart.plot(credit_tree)
rpart.rules(credit_tree, extra=4)
n <- 100
beta <- .5
x <- 1 + rnorm(n)*beta
x <- rnorm(n)*10
x
x <- 20 + rnorm(n)*10
x
y <- 1 + rnorm(n)*beta
plot(x, y)
ggplot(df, aes(x = x, y = y)) +
geom_point()
library(tidyverse)
library(tidyverse)
n <- 100
beta <- .5
df <- data.frame(x = 20 + rnorm(n)*10,
y = 1 + rnorm(n)*beta)
ggplot(df, aes(x = x, y = y)) +
geom_point()
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_smooth()
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_smooth() +
geom_smooth(method = lm)
n <- 1000
beta <- .5
df <- data.frame(x = 20 + rnorm(n)*10,
y = 1 + rnorm(n)*beta)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_smooth() +
geom_smooth(method = lm)
df <- data.frame(x = 20 + rnorm(n)*10,
y = 1 + beta*x + rnorm(n))
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_smooth() +
geom_smooth(method = lm)
beta <- 1
df <- data.frame(x = 20 + rnorm(n)*10,
y = 1 + beta*x + rnorm(n))
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_smooth() +
geom_smooth(method = lm)
df <- data.frame(x = 20 + rnorm(n)*10,
y = 1 + beta*x + rnorm(n)*2)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_smooth() +
geom_smooth(method = lm)
n <- 100
beta <- 1
df <- data.frame(x = 20 + rnorm(n)*10,
y = 1 + beta*x + rnorm(n)*2)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_smooth() +
geom_smooth(method = lm)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_smooth(se = FALSE) +
geom_smooth(method = lm, se = FALSE)
lm(y~x, data = df)
est1 <- lm(y~x, data = df)
est1 <- lm(y ~ I(x^4), data = df)
summary(est1)
summary(est1)$r.squared
est2 <- lm(y ~ x, data = df)
summary(est2)$r.squared
est1 <- lm(y ~ I(x^5), data = df)
summary(est1)$r.squared
est2 <- lm(y ~ x, data = df)
summary(est2)$r.squared
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^5))+
geom_smooth(method = lm, se = FALSE)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^5), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^4), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^3), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
df <- data.frame(x = 20 + runif(n)*10,
y = 1 + beta*x + rnorm(n)*2)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^3), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
n <- 50
beta <- 1
df <- data.frame(x = 20 + runif(n)*10,
y = 1 + beta*x + rnorm(n)*2)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^3), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
n <- 10
beta <- 1
df <- data.frame(x = 20 + runif(n)*10,
y = 1 + beta*x + rnorm(n)*2)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^3), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
n <- 20
beta <- 1
df <- data.frame(x = 20 + runif(n)*10,
y = 1 + beta*x + rnorm(n)*2)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^3), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
df <- data.frame(x = 20 + runif(n)*5,
y = 1 + beta*x + rnorm(n)*2)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^3), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
n <- 100
beta <- 1
df <- data.frame(x = 20 + runif(n)*5,
y = 1 + beta*x + rnorm(n)*2)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
stat_smooth(method='lm', formula = y ~ I(x^3), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
df2 <- data.frame(x = 20 + runif(n)*5,
y = 1 + beta*x + rnorm(n)*2)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
g1 +
geom_point(data = df2, col = "blue")
n <- 10
beta <- 1
df <- data.frame(x = 20 + runif(n)*5,
y = 1 + beta*x + rnorm(n)*2)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
stat_smooth(method='lm', formula = y ~ I(x^3), se = FALSE, col = "red")+
geom_smooth(method = lm, se = FALSE)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
df2 <- data.frame(x = 20 + runif(n)*5,
y = 1 + beta*x + rnorm(n)*2)
g1 +
geom_point(data = df2, col = "blue")
g1
df$x
df <- data.frame(x = 20 + runif(n)*50,
y = 1 + beta*x + rnorm(n)*2)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
df <- data.frame(x = 20 + runif(n)*50,
y = 1 + beta*x + rnorm(n)*2)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
set.seed(42)
df <- data.frame(x = 20 + runif(n)*50,
y = 1 + beta*x + rnorm(n)*2)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
df <- data.frame(x = round(20 + runif(n)*50, digits = 1),
y = 1 + beta*x + rnorm(n)*2)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
set.seed(42)
df <- data.frame(x = round(20 + runif(n)*50, digits = 1),
y = 1 + beta*x + rnorm(n)*2)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
df2 <- data.frame(x = 20 + runif(n)*5,
y = 1 + beta*x + rnorm(n)*2)
g1 +
geom_point(data = df2, col = "blue")
df2 <- data.frame(x = round(20 + runif(n)*50, digits = 1),
y = 1 + beta*x + rnorm(n)*2)
g1 +
geom_point(data = df2, col = "blue")
df <- data.frame(x = round(20 + runif(n)*50, digits = 1),
y = 1 + beta*x + rnorm(n)*10)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
head(df)
hist(df)
hist(df$x)
table(df$x)
dim(df)
round(20 + runif(n)*50, digits = 1)
1 + beta*x + rnorm(n)*10
1 + beta*x + rnorm(n)
rnorm(n)
beta*x
y <- 1 + beta*x + rnorm(n)
df <- data.frame(x = x, y = y)
dim(df)
x <- round(20 + runif(n)*50, digits = 1)
y <- 1 + beta*x + rnorm(n)
df <- data.frame(x = x, y = y)
dim(df)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
df2 <- data.frame(x = round(20 + runif(n)*50, digits = 1),
y = 1 + beta*x + rnorm(n)*2)
g1 +
geom_point(data = df2, col = "blue")
x <- round(20 + runif(n)*50, digits = 1)
y <- 1 + beta*x + rnorm(n)
df2 <- data.frame(x = x, y = y)
g1 +
geom_point(data = df2, col = "blue")
est1 <- lm(y ~ I(x^5), data = df)
summary(est1)$r.squared
est2 <- lm(y ~ x, data = df)
summary(est2)$r.squared
n <- 100
beta <- 1
set.seed(42)
x <- round(20 + runif(n)*50, digits = 1)
y <- 1 + beta*x + rnorm(n)
df <- data.frame(x = x, y = y)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
x <- round(20 + runif(n)*50, digits = 1)
y <- 1 + beta*x + rnorm(n)
df2 <- data.frame(x = x, y = y)
g1 +
geom_point(data = df2, col = "blue")
y <- 1 + beta*x + rnorm(n)*10
df <- data.frame(x = x, y = y)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
x <- round(20 + runif(n)*50, digits = 1)
y <- 1 + beta*x + rnorm(n)
df2 <- data.frame(x = x, y = y)
g1 +
geom_point(data = df2, col = "blue")
y <- 1 + beta*x + rnorm(n)*10
df2 <- data.frame(x = x, y = y)
g1 +
geom_point(data = df2, col = "blue")
est1 <- lm(y ~ I(x^5), data = df)
summary(est1)$r.squared
est2 <- lm(y ~ x, data = df)
summary(est2)$r.squared
est1 <- lm(y ~ I(x^4), data = df)
summary(est1)$r.squared
est2 <- lm(y ~ x, data = df)
summary(est2)$r.squared
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
x <- round(20 + runif(n)*50, digits = 1)
y <- 1 + beta*x + rnorm(n)*10
df2 <- data.frame(x = x, y = y)
g1 +
geom_point(data = df2, col = "blue")
g1 +
geom_point(data = df2, col = "blue") +
geom_smooth(method = lm, se = F)
g1 +
geom_point(data = df2, col = "blue") +
geom_smooth(method = lm, se = F, col = "red")
n <- 10
beta <- 1
set.seed(42)
x <- round(20 + runif(n)*50, digits = 1)
y <- 1 + beta*x + rnorm(n)*10
df <- data.frame(x = x, y = y)
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_line()
g1
x <- round(20 + runif(n)*50, digits = 1)
y <- 1 + beta*x + rnorm(n)*10
df2 <- data.frame(x = x, y = y)
g1 +
geom_point(data = df2, col = "blue") +
geom_smooth(method = lm, se = F, col = "red")
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point() +
g1
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point()
g1
g1 +
geom_point(data = df2, col = "blue") +
stat_smooth(method='lm', formula = y~poly(x,2))
g1 +
stat_smooth(method='lm', formula = y~poly(x,2), se = F)
g1 +
stat_smooth(method='lm', formula = y~poly(x,5), se = F)
g1 +
stat_smooth(method='lm', formula = y~poly(x,7), se = F)
g1 +
stat_smooth(method='lm', formula = y~poly(x,6), se = F)
g1 +
stat_smooth(method='lm', formula = y~poly(x,6), se = F, alpha = .3)
g1 +
stat_smooth(method='lm', formula = y~poly(x,6), se = F)
g1 +
stat_smooth(method='lm', formula = y~poly(x,5), se = F)
lm(y ~ poly(x,5), data = df) %>%  summary()
lm(y ~ x, data = df) %>%  summary()
lm(y ~ x, data = df) %>%  summary()$r.squared
summary(est1)$r.squared
summary(est2)$r.squared
g1 +
stat_smooth(method='lm', formula = y~poly(x,5), se = F)
g1 +
stat_smooth(method='lm', formula = y~poly(x,5), se = F) +
stat_smooth(method='lm', formula = y~poly(x,1), se = F)
summary(est1)
est1 <- lm(y ~ I(x,5), data = df)
est1 <- lm(y ~ I(x^5), data = df)
summary(est1)
summary(est2)
g1 +
stat_smooth(method='lm', formula = y~poly(x,5), se = F) +
stat_smooth(method='lm', formula = y~poly(x,1), se = F, col = "blue")
g1 +
stat_smooth(method='lm', formula = y~poly(x,5), se = F, col = "red") +
stat_smooth(method='lm', formula = y~poly(x,1), se = F, col = "blue")
summary(est1)$r.squared
summary(est2)$r.squared
sqrt(mean(est1$res^2))
sqrt(mean(est2$res^2))
g1 +
stat_smooth(method='lm', formula = y ~ I(x^5), se = F, col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
g1 +
stat_smooth(method='lm', formula = y ~ I(x^3), se = F, col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
g1 +
stat_smooth(method='lm', formula = y ~ I(x^6), se = F, col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
g1 +
stat_smooth(method='lm', formula = y ~ I(x^7), se = F, col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
g1 +
stat_smooth(method='lm', formula = y ~ I(x^-1), se = F, col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
g1 +
stat_smooth(method='lm', formula = y ~ I(x^1), se = F, col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
g1 +
stat_smooth(method='lm', formula = y ~ I(x^3), se = F, col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
est1 <- lm(y ~ I(x^3), data = df)
sqrt(mean(est1$res^2))
sqrt(mean(est2$res^2))
g1 +
geom_point(data = df2, col = "blue") +
geom_smooth(method = lm, se = F, col = "red")
g1
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point()
g1
df <- data.frame(x = x, y = y) %>%
mutate(d = case_when(x < 50 ~ 0,
x < 56 ~ 1,
TRUE ~2) %>% as_factor())
df
est1 <- lm(y ~ x + d + x*d, data = df)
summary(est1)
summary(est1)$r.squared
summary(est2)$r.squared
g1 +
stat_smooth(method='lm', formula = y ~ x + d + x*d, se = F, col = "red")
g1 <- ggplot(df, aes(x = x, y = y), group = d) +
geom_point(col = "black") +
stat_smooth(method='lm', formula = y ~ x + d + x*d, se = F, col = "red")
g1
ggplot(df, aes(x = x, y = y), group = d) +
geom_point(col = "black") +
stat_smooth(method='lm', formula = y ~ x + d + x*d, se = F, col = "red")
ggplot(df, aes(x = x, y = y), group = d) +
geom_point(col = "black") +
stat_smooth(method='lm', formula = y ~ x + x*d, se = F, col = "red")
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
stat_smooth(data = df, method='lm', formula = y ~ x + x*d, se = F, col = "red")
?stat_smooth
df_p1 <- df %>%
mutate(pred = predict(est1))
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1)
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1, aes(y = pred))
n <- 10
beta <- 1
set.seed(42)
x <- round(20 + runif(n)*50, digits = 1)
y <- 1 + beta*x + rnorm(n)*10
df <- data.frame(x = x, y = y) %>%
mutate(d = case_when(x < 50 ~ 0,
x < 56 ~ 1,
TRUE ~2) %>% as_factor())
g1 <- ggplot(df, aes(x = x, y = y)) +
geom_point()
g1
est1 <- lm(y ~ x + d + x*d, data = df)
est2 <- lm(y ~ x, data = df)
df_p1 <- df %>%
mutate(pred = predict(est1))
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1, aes(y = pred))
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1, aes(y = pred)) +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
sqrt(mean(est1$res^2))
sqrt(mean(est2$res^2))
summary(est1)$r.squared
summary(est2)$r.squared
est1 <- lm(y ~ x + x*d, data = df)
summary(est1)$r.squared
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1, aes(y = pred)) +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1, aes(y = pred), col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue")
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1, aes(y = pred), col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue", linewidth = .5)
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1, aes(y = pred), col = "red") +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue", linewidth = .7)
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1, aes(y = pred), col = "red", linewidth = .7) +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue", linewidth = .7)
est1 <- lm(y ~ x + x*d, data = df)
est1 <- lm(y ~ x + x*d, data = df)
est1
summary(est1)
ggplot(df, aes(x = x, y = y)) +
geom_point(col = "black") +
geom_line(data = df_p1, aes(y = pred), col = "red", linewidth = .7) +
stat_smooth(method='lm', formula = y ~ x, se = F, col = "blue", linewidth = .7)
summary(est1)$r.squared
summary(est2)$r.squared
df_p1 <- df %>%
mutate(pred = predict(est1)) +
mutate(res_pred = y - pred,
res_y = y - mean(y))
df_p1 <- df %>%
mutate(pred = predict(est1))  %>%
mutate(res_pred = y - pred,
res_y = y - mean(y))
df_p1 %>%
summarise(res_pred = sum(res_pred^2),
res_y = sum(res_y^2)) %>%
mutate(1 - res_pred/res_y)
summary(est1)$r.squared
