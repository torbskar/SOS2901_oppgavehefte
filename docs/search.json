[
  {
    "objectID": "linear_regresjon.html#lese-inn-data",
    "href": "linear_regresjon.html#lese-inn-data",
    "title": "2  Lineær regresjon",
    "section": "2.1 Lese inn data",
    "text": "2.1 Lese inn data\nVi illustrerer lineær regresjon med et empirisk eksempel. Her skal vi bruke data for norske kommuner i 2016. La oss si at vi er interessert i hvordan antall voldshendelser per 1000 innbyggere vil endre seg i en kommune. Dette kunne være relevant for langtidsplanlegging av forebygging, politibemanning, helsetjenester osv. Det kan være et område som er i stor endring slik at befolkningssammensetningen forventes å endre seg og/eller det er endrede lokale økonomiske utsikter.\nFørst leser vi inn dataene og tar en titt på variabellisten.\n\nkommune &lt;- readRDS( \"data/kommunedata.rds\")\nglimpse(kommune)\n\nRows: 1,529\nColumns: 28\n$ kommune_nr             &lt;chr&gt; \"0101\", \"0101\", \"0101\", \"0101\", \"0104\", \"0104\",…\n$ kommune                &lt;chr&gt; \"Halden (-2019)\", \"Halden (-2019)\", \"Halden (-2…\n$ year                   &lt;dbl&gt; 2015, 2016, 2017, 2018, 2015, 2016, 2017, 2018,…\n$ bef_18min              &lt;int&gt; 3556, 3503, 3505, 3544, 3594, 3652, 3704, 3655,…\n$ bef_18_25              &lt;int&gt; 3575, 3585, 3432, 3438, 3405, 3404, 3355, 3370,…\n$ bef_26_35              &lt;int&gt; 3728, 3804, 3985, 4035, 4057, 4071, 4124, 4110,…\n$ bef_totalt             &lt;int&gt; 30328, 30544, 30790, 31037, 31802, 32182, 32407…\n$ menn_18_25             &lt;int&gt; 1847, 1865, 1813, 1819, 1789, 1802, 1789, 1810,…\n$ menn_26_35             &lt;int&gt; 1880, 1919, 2005, 2062, 2063, 2083, 2113, 2134,…\n$ menn_36_67             &lt;int&gt; 7067, 7051, 7085, 7057, 7418, 7453, 7408, 7407,…\n$ menn_67plus            &lt;int&gt; 2496, 2624, 2697, 2806, 2671, 2777, 2856, 2895,…\n$ menn_18min             &lt;int&gt; 1880, 1847, 1873, 1876, 1842, 1885, 1919, 1878,…\n$ kvinner_18_25          &lt;int&gt; 1728, 1720, 1619, 1619, 1616, 1602, 1566, 1560,…\n$ kvinner_26_35          &lt;int&gt; 1848, 1885, 1980, 1973, 1994, 1988, 2011, 1976,…\n$ kvinner_36_67          &lt;int&gt; 6880, 6832, 6844, 6848, 7479, 7519, 7537, 7596,…\n$ kvinner_67plus         &lt;int&gt; 3026, 3145, 3242, 3309, 3178, 3306, 3423, 3555,…\n$ kvinner_18min          &lt;int&gt; 1676, 1656, 1632, 1668, 1752, 1767, 1785, 1777,…\n$ inntekt_totalt_median  &lt;int&gt; 555000, 562000, 580000, 591000, 561000, 568000,…\n$ inntekt_eskatt_median  &lt;int&gt; 451000, 453000, 470000, 480000, 449000, 456000,…\n$ ant_husholdninger      &lt;int&gt; 13890, 14124, 14281, 14454, 15046, 15132, 15313…\n$ shj_klienter           &lt;int&gt; 1183, 1137, 1099, 1128, 1155, 1129, 1152, 1137,…\n$ shj_unge               &lt;int&gt; 262, 247, 248, 242, 267, 263, 238, 222, 307, 28…\n$ vinningskriminalitet   &lt;dbl&gt; 19.7, 18.7, 16.5, 14.5, 24.5, 21.5, 18.0, 18.0,…\n$ voldskriminalitet      &lt;dbl&gt; 11.2, 12.6, 12.3, 11.2, 7.8, 8.3, 8.7, 9.7, 6.8…\n$ nark_alko_kriminalitet &lt;dbl&gt; 21.0, 21.9, 21.0, 20.3, 12.0, 10.2, 10.9, 10.1,…\n$ ordenslovbrudd         &lt;dbl&gt; 18.5, 16.5, 14.9, 13.7, 8.9, 9.0, 9.1, 9.2, 8.2…\n$ trafikklovbrudd        &lt;dbl&gt; 15.5, 16.3, 16.7, 19.2, 7.4, 6.3, 6.9, 8.0, 9.6…\n$ andre_lovbrudd         &lt;dbl&gt; 25.5, 26.5, 26.1, 25.2, 12.1, 12.2, 11.9, 12.4,…\n\n\nEn annen måte å få oversikt over dataene på er å bruke funksjonen skim(), som gir noe mer informasjon om fordelingen av hver enkelt variabel.\n\nskim(kommune)\n\n\nData summary\n\n\nName\nkommune\n\n\nNumber of rows\n1529\n\n\nNumber of columns\n28\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n26\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nkommune_nr\n0\n1\n4\n4\n0\n561\n0\n\n\nkommune\n0\n1\n2\n46\n0\n561\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1\n2017.17\n1.70\n2015.0\n2016.0\n2017.0\n2018.0\n2020.0\n▇▃▃▁▃\n\n\nbef_18min\n0\n1\n2051.72\n5134.84\n82.0\n478.0\n843.0\n1912.0\n71566.0\n▇▁▁▁▁\n\n\nbef_18_25\n0\n1\n2010.07\n5876.07\n90.0\n423.0\n772.0\n1723.0\n80730.0\n▇▁▁▁▁\n\n\nbef_26_35\n0\n1\n2637.60\n10179.34\n80.0\n466.0\n873.0\n2013.0\n156988.0\n▇▁▁▁▁\n\n\nbef_totalt\n0\n1\n17351.92\n48195.14\n934.0\n4062.0\n6952.0\n15656.0\n693494.0\n▇▁▁▁▁\n\n\nmenn_18_25\n0\n1\n1033.97\n2872.20\n45.0\n224.0\n404.0\n904.0\n38847.0\n▇▁▁▁▁\n\n\nmenn_26_35\n0\n1\n1348.18\n5122.76\n44.0\n240.0\n456.0\n1017.0\n78059.0\n▇▁▁▁▁\n\n\nmenn_36_67\n0\n1\n3940.48\n10521.30\n234.0\n939.0\n1630.0\n3650.0\n150390.0\n▇▁▁▁▁\n\n\nmenn_67plus\n0\n1\n1361.18\n3039.57\n56.0\n383.0\n639.0\n1330.0\n42590.0\n▇▁▁▁▁\n\n\nmenn_18min\n0\n1\n1050.44\n2618.78\n44.0\n244.0\n434.0\n974.0\n36298.0\n▇▁▁▁▁\n\n\nkvinner_18_25\n0\n1\n976.11\n3006.75\n38.0\n201.0\n365.0\n813.0\n41945.0\n▇▁▁▁▁\n\n\nkvinner_26_35\n0\n1\n1289.42\n5058.28\n35.0\n224.0\n420.0\n989.0\n78929.0\n▇▁▁▁▁\n\n\nkvinner_36_67\n0\n1\n3770.34\n9932.02\n200.0\n862.0\n1561.0\n3487.0\n140473.0\n▇▁▁▁▁\n\n\nkvinner_67plus\n0\n1\n1580.52\n3696.66\n64.0\n428.0\n729.0\n1488.0\n50757.0\n▇▁▁▁▁\n\n\nkvinner_18min\n0\n1\n1001.28\n2516.27\n38.0\n232.0\n405.0\n933.0\n35268.0\n▇▁▁▁▁\n\n\ninntekt_totalt_median\n0\n1\n654721.39\n75785.29\n463000.0\n601000.0\n646000.0\n697000.0\n898000.0\n▁▇▇▃▁\n\n\ninntekt_eskatt_median\n0\n1\n519417.92\n52786.68\n376000.0\n482000.0\n514000.0\n550000.0\n675000.0\n▁▆▇▃▁\n\n\nant_husholdninger\n0\n1\n7873.76\n23631.34\n426.0\n1831.0\n3137.0\n6896.0\n348864.0\n▇▁▁▁▁\n\n\nshj_klienter\n0\n1\n449.81\n1383.19\n11.0\n98.0\n179.0\n376.0\n20401.0\n▇▁▁▁▁\n\n\nshj_unge\n0\n1\n89.36\n197.02\n0.0\n20.0\n39.0\n89.0\n2488.0\n▇▁▁▁▁\n\n\nvinningskriminalitet\n0\n1\n9.19\n7.05\n1.5\n4.8\n7.2\n11.5\n91.2\n▇▁▁▁▁\n\n\nvoldskriminalitet\n0\n1\n5.61\n2.28\n1.3\n3.9\n5.2\n6.8\n18.8\n▇▇▂▁▁\n\n\nnark_alko_kriminalitet\n0\n1\n6.91\n4.60\n1.1\n3.9\n5.9\n8.9\n55.5\n▇▁▁▁▁\n\n\nordenslovbrudd\n0\n1\n4.91\n3.23\n1.1\n3.0\n4.1\n5.9\n34.9\n▇▁▁▁▁\n\n\ntrafikklovbrudd\n0\n1\n10.49\n11.36\n2.1\n6.0\n8.1\n11.7\n219.7\n▇▁▁▁▁\n\n\nandre_lovbrudd\n0\n1\n9.59\n4.34\n2.3\n7.1\n8.8\n10.8\n52.5\n▇▁▁▁▁\n\n\n\n\n\n\n2.1.1 Training og testing data\nVi starter med å dele datasettet i training og testing. Her kan vi bruke pakken ‘rsample’ og funksjonen initial_split() etterfulgt av funksjonene training() og testing(). Forhåndsvalget for splitten er 0.75, så dermed brukes 75% til training og resten til testing. Du kan også legge til argumentet prop = og sette en annen andel, f.eks. 0.7 for 70%.\nMerk bruken av set.seed(). For å splitte genererer R tilfeldige tall, og seed styrer hvor den algoritmen starter. Når seed er satt vil du få nøyaktig samme resultatet som gjort her. Dette vil du trenge på eksamen for at sensor skal kunne sjekke resultatene dine, så begynn å bruke det med en gang. Tallet inni parentesen betyr ingenting1 og bare sørger for reproduserbarhet der hvor det er tilfeldige tall involvert.\n\nlibrary(rsample)\n\nset.seed(42)\nkommune_split &lt;- initial_split(kommune, prop = .7)\n\nkommune_train &lt;- training(kommune_split)\nkommune_test &lt;- testing(kommune_split)\n\n\n\n2.1.2 Enkel lineær regresjon i R\nI dette kapittelt skal vi bruke følgende pakker:\n\nlibrary(tidyverse)   # datahåndtering, grafikk og glimpse()\nlibrary(skimr)       # funksjonen skim() for å se på data\nlibrary(rsample)     # for å dele data i training og testing\nlibrary(gtsummary)   # Pent formatert regresjonstabell\nlibrary(caret)       # Funksjonen confusionMatrix()\n\nEn ganske åpenbar faktor som forklarer forekomsten av vold er andel unge menn i kommunen. Rett og slett fordi dette er den demografiske gruppen som begår mest vold - og kriminalitet generelt, faktisk. Hvis befolkningssammensetningen forventes å bli yngre vil det medføre flere unge menn, og da kan vi kanskje forvente at det blir flere voldshendelser bare av den grunn? Sammenhengen mellom unge menn og voldsrate kan estimeres med helt vanlig lineær regresjon.\nEn god start på de fleste empiriske analyser er å beskrive sammenhengen med et plot. Her legger vi på en lineær regresjonslinje med geom_smooth() der vi presiserer lineær modell med method = \"lm\" og lar være å ta med konfidensintervallet se = FALSE.\n\nkommune_train &lt;- kommune_train %&gt;% \n  mutate(prop_unge_menn = (menn_18_25 + menn_26_35)/bef_totalt*100) \n\nggplot(kommune_train, aes(x = prop_unge_menn, \n                     y = voldskriminalitet)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) \n\n\n\n\nLineær regresjon estimeres med lm() og du kan få en enkel output med bruk av summary().\n\nest &lt;- lm(voldskriminalitet ~ prop_unge_menn, data = kommune_train)\nsummary(est)\n\n\nCall:\nlm(formula = voldskriminalitet ~ prop_unge_menn, data = kommune_train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.0302 -1.5764 -0.3951  1.1826 11.3367 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)     0.50954    0.63482   0.803    0.422    \nprop_unge_menn  0.41329    0.05097   8.109  1.4e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.248 on 1068 degrees of freedom\nMultiple R-squared:  0.05799,   Adjusted R-squared:  0.05711 \nF-statistic: 65.75 on 1 and 1068 DF,  p-value: 1.395e-15\n\n\nMan kan også hente ut kun \\(r^2\\) med følgende kode:\n\nsummary(est)$r.squared\n\n[1] 0.05799176\n\n\nFor ordens skyld: I tidligere metodekurs har du kanskje lært å få ut en penere regresjonstabell med f.eks. gtsummary-pakken. (Det finnes andre pakker også som gjør tilsvarende). Da vil de samme resultatene se ut som følger. Hvordan output er formatert spiller ingen rolle. I denne sammenhengen har vi lite bruk for en pen regresjonstabell da \\(\\beta\\) ikke er av primær interesse.\n\nlibrary(gtsummary)\n\ntbl_regression(est, intercept = TRUE)\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n0.51\n-0.74, 1.8\n0.4\n    prop_unge_menn\n0.41\n0.31, 0.51\n&lt;0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nMed andre ord kan voldsraten beskrives som:\n\\[\n\\operatorname{\\widehat{voldskriminalitet}} = 0.51 + 0.41(\\operatorname{prop\\_unge\\_menn})\n\\]\nMen vi har også sett at \\(r^2\\) er ganske lav, bare 0.058. Denne koeffisienten kalles også “coefficient of determination” og sier noe om i hvor stor grad modellen fanger opp variasjoenen i dataene. En lav \\(r^2\\) betyr at modellen i liten grad gjør det. Vi må altså forvente at modellen vil bomme ganske kraftig i sine prediksjoner. Vi kan velge å ta modellen seriøst likevel, men ikke ha for store forventninger for prediksjonene!\nEt annet mål på hvor godt modellen treffer er “Root mean square error”, RMSE. Dette kan skrives som:\n\\[ rmse = \\sqrt{ \\frac{ \\sum{(O_i-P_i)^2} }{N} }  \\]\nder \\(O\\) er de observerte verdiene og \\(P\\) er de predikerte verdiene for observasjon \\(i\\). Merk at \\((O_i-P_i)\\) er residualene. I R kan vi hente ut residualene fra regresjons-objektet med dollartegnet ...$res etter objektnavnet. Da kan du regne ut RMSE som følger:\n\nrmse &lt;- sqrt(mean(est$res^2))\nrmse\n\n[1] 2.245685\n\n\nRMSE sier altså omtrentlig hvor mye modellen i gjennomsnitt bommer på de observerte verdiene. 2. Hvorvidt det er presist nok eller ikke vil vel strengt tatt komme an på behovet for presisjon, altså: hva man skal bruke det til.\nFor å få litt bedre tak på hva RMSE betyr kan vi se på et plot av de predikerte og observerte verdiene. Vi kan predikere vold for hver enkelt kommune basert på denne modellen, som altså er den forventede voldsraten hvis modellen er sann. Funksjonen predict() gir oss hva vi trenger.\n\nkom &lt;- kommune_train %&gt;% \n  mutate(pred = predict(est))\n\nMerk at koden her lagde en kopi av datasettet der vi har alle de opprinnelige variablene pluss en variabel med de predikerte verdiene. Vi kan nå sammenlignet prediksjonene med de observerte utfallene.\n\nggplot(kom, aes(x = voldskriminalitet, y = pred)) +\n  geom_point(alpha = .3) +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n\n\nHvis prediksjonen hadde vært perfekt ville disse punktene ligget på linja, noe den jo ikke gjør. Modellen bommer altså ganske mye.\nHva hvis vi vil vite forventet voldsrate for en kommune for en gitt andel unge menn? Løsningen er å lage et nytt datasett med de verdiene vi er interessert i og så predikere for dette datasettet med å spesifisere newdata = dt. Her er et eksempel der vi ønsker å vite voldsraten hvis andelen unge menn er 15%.[^](OBS! I en tidligere versjon stod det 0.15 i koden under, men merk at variabelen er på skalaen prosentpoeng og ikke anderl. Hivs du stusset på dette, så var det altså riktig tenkt.)\n\ndt &lt;- data.frame(prop_unge_menn = 15)\np &lt;- predict(est, newdata = dt)\np\n\n       1 \n6.708919 \n\n\nI følge modellen vil altså en kommune der 15% av populasjonen er unge menn ha en 6.709 voldshendelser per 1000 innbyggere. Fra tradisjonell statistikk vet vi jo at det er usikkerhet knyttet til dette estimatet og vi kan også ta det med i beregningen her. Vanligvis vil man estimere med et konfidensintervall, som gjelder hvis man estimerer et gjennomsnitt i en gruppe. Her skal vi derimot predikere for en enkelt kommune, som da har større usikkerhet enn om man estimerer for en enkelt observasjon. Dette kalles prediksjonsintervall og må spesifiseres i koden. Hvis det ikke er gitt vil R gi konfidensintervallet.\n\np_ki &lt;- predict(est, newdata = dt, interval = \"prediction\")\np_ki\n\n       fit      lwr      upr\n1 6.708919 2.288514 11.12932\n\n\nTolkningen er ellers tilsvarende som for konfidensintervall: vi forventer med “95% sannsynlighet”3 at voldsraten vil være mellom 2.3 og 11.1 per 1000 innbyggere.\n\n\n2.1.3 Multippel regresjon\nEnkel regresjon er nettopp enkel og prediksjonen blir ikke så god. Men vi kan komplisere vesentlig ved å inkludere flere variable og bruke alle triksene man evt. har lært om multippel regresjon tidligere, primært interaksjonsledd, polynomer og transformasjoner osv. (Det er ok om du ikke har lært alt dette tidligere).\nI R vil vi da bare legge til flere variabelnavn i formelen. Ellers er det meste likt som for enkel lineær regresjon.\n\nest_m &lt;- lm(voldskriminalitet ~ prop_unge_menn + inntekt_totalt_median + shj_unge + \n                   ant_husholdninger , \n            data = kommune_train)\nsummary(est_m)\n\n\nCall:\nlm(formula = voldskriminalitet ~ prop_unge_menn + inntekt_totalt_median + \n    shj_unge + ant_husholdninger, data = kommune_train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.6862 -1.3599 -0.2042  1.0689 12.4822 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)            7.421e+00  7.333e-01  10.121  &lt; 2e-16 ***\nprop_unge_menn         4.177e-01  5.328e-02   7.840 1.09e-14 ***\ninntekt_totalt_median -1.099e-05  8.539e-07 -12.871  &lt; 2e-16 ***\nshj_unge               4.461e-03  1.016e-03   4.392 1.23e-05 ***\nant_husholdninger     -2.163e-05  8.361e-06  -2.587  0.00983 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.037 on 1065 degrees of freedom\nMultiple R-squared:  0.2288,    Adjusted R-squared:  0.2259 \nF-statistic:    79 on 4 and 1065 DF,  p-value: &lt; 2.2e-16\n\n\nMerk at \\(r^2\\) nå har gått betraktelig opp, til ca 0.23. Gitt at vi tolker dette som i hvor stor grad vi kan predikere utfallet fra datasettet, så er det kanskje likevel ikke imponerende høyt: vi vil fremdeles forvente mye feil prediksjon.\nHer er et scatterplot av observert mot forventet voldsrater:\n\nkom_pred &lt;- kommune_train %&gt;% \n  mutate(pred = predict(est_m))\n\nggplot(kom_pred, aes(x = voldskriminalitet, y = pred)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n\n\nLa oss inkludere alle aktuelle variable i datasettet. Et lite triks her er å fjerne alle variable vi ikke er interessert i og lagre det i et nytt datasett. I lm() kan vi da presisere formelen som Vold ~ . som i denne sammenhengen betyr å ta med alle variabelene i stedet for å liste opp hver enkelt variabel.\n\nkom_s &lt;- kommune_train %&gt;% \n  select(-c(kommune, kommune_nr, ordenslovbrudd,  \n            nark_alko_kriminalitet, trafikklovbrudd, andre_lovbrudd, \n            prop_unge_menn))\n\nfull_mod &lt;- lm(voldskriminalitet ~ . , data = kom_s)\nsummary(full_mod)\n\n\nCall:\nlm(formula = voldskriminalitet ~ ., data = kom_s)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.9650 -1.2333 -0.1813  0.8919 12.2114 \n\nCoefficients: (4 not defined because of singularities)\n                        Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           -1.198e+02  9.309e+01  -1.287  0.19851    \nyear                   6.234e-02  4.646e-02   1.342  0.17998    \nbef_18min              3.156e-03  1.839e-03   1.716  0.08637 .  \nbef_18_25             -1.885e-05  1.513e-03  -0.012  0.99006    \nbef_26_35              1.180e-03  1.006e-03   1.173  0.24109    \nbef_totalt            -2.272e-03  7.130e-04  -3.187  0.00148 ** \nmenn_18_25             3.698e-03  2.136e-03   1.731  0.08373 .  \nmenn_26_35            -1.481e-03  2.013e-03  -0.736  0.46197    \nmenn_36_67             2.710e-03  9.461e-04   2.865  0.00425 ** \nmenn_67plus            1.654e-03  1.339e-03   1.236  0.21676    \nmenn_18min             2.461e-03  2.875e-03   0.856  0.39223    \nkvinner_18_25                 NA         NA      NA       NA    \nkvinner_26_35                 NA         NA      NA       NA    \nkvinner_36_67         -1.269e-04  9.021e-04  -0.141  0.88816    \nkvinner_67plus                NA         NA      NA       NA    \nkvinner_18min                 NA         NA      NA       NA    \ninntekt_totalt_median -4.693e-05  7.600e-06  -6.176 9.40e-10 ***\ninntekt_eskatt_median  5.580e-05  1.108e-05   5.037 5.55e-07 ***\nant_husholdninger      1.555e-03  3.169e-04   4.908 1.07e-06 ***\nshj_klienter           2.170e-03  9.967e-04   2.177  0.02968 *  \nshj_unge               2.191e-03  3.054e-03   0.718  0.47322    \nvinningskriminalitet   1.066e-01  1.014e-02  10.513  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.891 on 1052 degrees of freedom\nMultiple R-squared:  0.343, Adjusted R-squared:  0.3324 \nF-statistic:  32.3 on 17 and 1052 DF,  p-value: &lt; 2.2e-16\n\n\n\\(r^2\\) gikk noe opp, til 0.343.\nMen vi kan gjøre modellen ekstra komplisert ved inkludere alle mulige interaksjonsledd. En åpenbar ulempe med dette er at hver enkelt koeffisent blir svært mye vanskeligere å tolke. Vi fokuserer derfor kun på \\(r^2\\) som kan hentes ut uten å ta med resten av output.\n\nfull_mod2 &lt;- lm( voldskriminalitet ~ .^2, data = kom_s)\nsummary(full_mod2)$r.squared\n\n[1] 0.5224374\n\n\n\\(r^2\\) gikk vesentlig opp. Men når vi først driver med kompliserte modellspesifikasjoner som uansett er vanskelige å tolke - hvorfor begrense seg til 2-veis interaksjoner? Her er en versjon med alle 3-veis interaksjoner, og nå begynner \\(r^2\\) virkelig å bli høy!\n\nfull_mod3 &lt;- lm( voldskriminalitet ~ .^3, data = kom_s)\nsummary(full_mod3)$r.squared\n\n[1] 0.8145801\n\n\nVi kan trimme modellen så den ikke har med så voldsomt mange parametre. En mulighet er å overlate dette til datamaskinen ved å la den gjøre en trinnvis test av hvorvidt modellene blir signifikant bedre av å legge til hver av de parametrene, og stopper når modellen ikke blir bedre. Så beholdes den “beste” av disse modellene, ikke nødvendigvis den som er mest komplisert.\nOBS! Merk at dette er en rent mekanisk seleksjon, og frarådes i de fleste samfunnsvitenskapelige sammenhenger. Tolkning av parametre og statistisk usikkerhet er nå på svært tynn is. Men det kan gi god prediksjon likevel.\n\nstep_mod &lt;- MASS::stepAIC(full_mod3, direction=\"forward\", \n                          trace = FALSE)\nsummary(step_mod)$r.squared\n\n[1] 0.8145801\n\n\nHvis vi nå predikerer for hver enkelt kommune og plotter forventet mot observert, så får vi et svært mye bedre sammenfall enn tidligere.\n\nkom_pred &lt;- kom_s %&gt;% \n  mutate(pred = predict(step_mod))\n\nggplot(kom_pred, aes(x = voldskriminalitet, y = pred)) +\n  geom_point(alpha = .3) +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n\n\nNå kan vi også regne ut RMSE, som altså er “root mean squared error”. Med andre ord: regn ut residualene (dvs. “error”), og kvadrer denne, og så ta kvadratroten av gjennomsnittet av denne. Her er en kode skrevet litt omstendelig så den er litt lettere å forstå:\n\nrmse &lt;- kom_s %&gt;% \n  mutate(pred = predict(step_mod), \n         residual = pred - voldskriminalitet) %&gt;% \n  mutate(sq.resid = residual^2) %&gt;% \n  summarise(sqrt(mean(sq.resid)))\n\nrmse  \n\n  sqrt(mean(sq.resid))\n1            0.9963221\n\n\nDette betyr omtrentlig at modellen i gjennomsnitt vil bomme med 0.996 prosentpoeng på voldsraten i kommunen. 4 Hvorvidt det er presist nok eller ikke vil vel strengt tatt komme an på behovet for presisjon, altså: hva man skal bruke det til.\n\n\n2.1.4 Predikere for nye data\nMen nå har vi bare sett på hvordan prediksjonen fungerer på training-datasettet. Vi må sjekke med testing-datasettet. Det lagde vi i begynnelsen, så nå henter vi det frem og gjør det samme som over. I ‘predict()’ må vi nå angi ‘newdata =’.\n\nkom_pred2 &lt;- kommune_test %&gt;% \n  mutate(pred = predict(step_mod, newdata = .), \n         residual = pred - voldskriminalitet)\n\nggplot(kom_pred2, aes(x = voldskriminalitet, y = pred)) +\n  geom_point(alpha = .3) +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n\n\nSer dette rart ut? Det er to observasjoner som har pedikert skyhøy voldsrate! Disse to prediksjonene bommer voldsomt, og med litt erfaring vil man se at dette her går aldri bra for \\(r^2\\), som regnes ut slik:\n\nkom_pred2  %&gt;% \n  mutate(residual_total = voldskriminalitet - mean(voldskriminalitet)) %&gt;% \n  summarise(SSres = sum(residual^2), \n            SStot = sum(residual_total^2)) %&gt;% \n  mutate(r_squared = 1 - (SSres/SStot))\n\n        SSres    SStot r_squared\n1 23202558409 2238.179 -10366712\n\n\nGanske riktig! Dette ble bare tull. Kvadratsummen til residualene ble mye høyere enn total kvadratsum. Dermed blir \\(r^2\\) helt fjerne.\nDette er en ganske ekstrem variant av overfitting. Ved å formulere en veldig komplisert modell som passer veldig godt til training-dataene kan vi ende opp med en modell som passer veldig, veldig dårlig til nye data. Hvis man skulle utforme f.eks. politikktiltak på grunnlag av en slik prediksjon vil det kunne gå riktig så dårlig.\nDet er i dette tilfellet kanskje ikke så rart: modellen ble formulert kun for å maksimere \\(r^2\\) og uten så mye andre tanker bak.\nDet er nok bedre med en enklere modell. Vi prøver heller å bruke modellen der alle prediktorene er med, men uten alle de kompliserende interaksjonene:\n\nkom_pred3 &lt;- kommune_test %&gt;% \n  mutate(pred = predict(full_mod, newdata = .), \n         residual = pred - voldskriminalitet)\n\nggplot(kom_pred3, aes(x = voldskriminalitet, y = pred)) +\n  geom_point(alpha = .3) +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n\n\n\nkom_pred3  %&gt;% \n  mutate(residual_total = voldskriminalitet - mean(voldskriminalitet)) %&gt;% \n  summarise(SSres = sum(residual^2), \n            SStot = sum(residual_total^2)) %&gt;% \n  mutate(r_squared = 1 - (SSres/SStot))\n\n     SSres    SStot r_squared\n1 1507.998 2238.179 0.3262389\n\n\nSammenlignet med \\(r^2\\) på trainingdata, ‘r summary(full_mod)$r.squared’, er dette ikke så værst. Litt dårligere tilpassning må man regne med.\nRMSE regnes ut slik:\n\nkom_pred3 %&gt;% \n  mutate(sq.resid = residual^2) %&gt;% \n  summarise(sqrt(mean(sq.resid)))\n\n  sqrt(mean(sq.resid))\n1             1.812567\n\n\nDet er altså slik at en enklere modell kan passe til nye data langt bedre enn en veldig komplisert modell. Grunnen er overfitting: modellen fanger opp vel så mye tilfeldig støy som det underliggende mønsteret. Støyen vil jo være annerledes i de nye dataene.\n\n\n2.1.5 Oppsummerende kommentar\nDette gjelder generelt: mer komplisert regresjonsmodell vil gi tilsynelatende bedre tilpassning til data enten man måler med \\(r^2\\) eller RMSE. Man kan riktignok bruke mål på tilpassning som justerer for antall parametre etc (f.eks. justert \\(r^2\\), AIC eller BIC), som kanskje kan bedre dette noe, men det vil ofte lede til overfitting likevel.\nDet er derfor veldig viktig å teste modellen mot nye data. I praksis testing-dataene man lagde til å begynne med.\nI resten av kurset skal vi unngå å bruke latterlige kompliserte modeller som ble demonstret ovenfor. Man kan godt bruke interaksjonsledd, polynomer, splines og andre fancy ting. Men med måte."
  },
  {
    "objectID": "linear_regresjon.html#oppgaver",
    "href": "linear_regresjon.html#oppgaver",
    "title": "2  Lineær regresjon",
    "section": "2.2 Oppgaver",
    "text": "2.2 Oppgaver\n\nExercise 2.1 Gå gjennom eksempelet over og repliker disse analysene slik at du ser at du skjønner hvordan det fungerer.\n\n\nExercise 2.2 Velg et datasettet og formuler hva en prediksjonsmodell kan kunne brukes til. Se for deg at tiltak du foreslår vil altså ha faktiske konsekvenser, så gjør en vurdering av hvorvidt feilprediksjoner vil være problematiske og i så fall på hvilken måte. Vurder mulighetene for feil opp mot gevinst ved riktig prediksjon.\nMerk: det er ikke viktig at anvendelsen skal være realistisk, men du må alltid ta konsekvensen i vurderingene.\n\n\nExercise 2.3 Last inn valgte datasett og splitt i et training og et testing datasett. Sett splitten ved .70. Bruk training-data til å gjøre deg kjent med dataene og estimere modellene. Ikke bruk testing-dataene inntil du får beskjed om det.\n\n\nExercise 2.4 Gjør deg kjent med innholdet i disse training-dataene. Du kan gjøre f.eks. følgende:\n\nBruk glimpse() og skim() til å få oversikt over innholdet i datasettet\nHvis det er noen variable du ikke kommer til å bruke, slett gjerne disse med en gang\nLag noen tabeller og plot som viser hvordan utfallsvariabelen er fordelt etter andre variable\n\n\n\nExercise 2.5 Estimer flere lineær regresjonsmodeller med et fåtall prediktorer. Gjør et utvalg av de variablene du mener er mest relevant for å forklare utfallet. Estimer flere lineære regresjonsmodeller for å predikere utfallet, og sammenlign hvor gode prediksjoner disse gir. Mest relevante statistikker er \\(r^2\\) og RMSE.\n\nVelg ut tre forklaringsvariable og estimer en regresjonsmodell\nEstimer en ny modell med alle variable i datasettet\nEstimer en ny modell og inkluder noen få polynomer og/eller interaksjonsledd\nGjør et automatisk modellsøk\n\nPlot også predikert verdi mot observert verdi og gjør en vurdering av RMSE.\n\n\nExercise 2.6 I forrige oppgave brukte du testing-datasettet til både å estimere modellene og vurdere resultatet. Nå skal du bruke testing-datasettet til å vurdere de samme resultatene. Dette gjør du ved å predikere på testing-datasettet og regne ut \\(r^2\\) og RMSE for disse dataene. For hver modell i forrige oppgave, gjør som følger:\n\nPrediker utfallet på testing-datasettet\nRegn ut \\(r^2\\) og RMSE\nHvor stor er endringen i \\(r^2\\) og RMSE fra resultatene når du brukte training-datasettet?\n\nVurdering: En mer komplisert modell beskriver dataene bedre. Men er det like stor endring i \\(r^2\\) og RMSE for enkle og mer kompliserte modeller? Beskriv hva du ser og gi en forklaring."
  },
  {
    "objectID": "linear_regresjon.html#footnotes",
    "href": "linear_regresjon.html#footnotes",
    "title": "2  Lineær regresjon",
    "section": "",
    "text": "Bortsett fra for dem som mener det er svaret på “the Ultimate Question of Life, the Universe, and Everything”↩︎\nDenne formuleringen er ganske omtrentlig. RMSE er egentlig kvadratroten av gjennomsnittet til de kvadrerte residualene, som er noe litt annet enn gjennomsnittet av de absolutte verdiene av residualene. Det gir bl.a. litt mer vekt til store residualer enn et vanlig gjennomsnitt.↩︎\nDette er en omtrentelig formulering. Alle sannsynligheter gjelder i det lange løp: altså hvis man gjør undersøkelsen veldig mange ganger.↩︎\nDenne formuleringen er ganske omtrentlig. RMSE er egentlig kvadratroten av gjennomsnittet til de kvadrerte residualene, som er noe litt annet enn gjennomsnittet av de absolutte verdiene av residualene. Det gir bl.a. litt mer vekt til store residualer enn et vanlig gjennomsnitt↩︎"
  },
  {
    "objectID": "datasets.html#credit",
    "href": "datasets.html#credit",
    "title": "Appendix A — Datasett",
    "section": "A.1 Credit",
    "text": "A.1 Credit\nUtfallsvariabel: “default” (misligholdelse av lån) Data er hentet fra datacamp.com, men du kan laste de ned fra denne lenken.\nDataene inneholder følgende variable:\n\ncredit &lt;- read.csv(\"data/credit.csv\", stringsAsFactors = TRUE)\n\nglimpse(credit)\n\nRows: 1,000\nColumns: 17\n$ checking_balance     &lt;fct&gt; &lt; 0 DM, 1 - 200 DM, unknown, &lt; 0 DM, &lt; 0 DM, unkn…\n$ months_loan_duration &lt;int&gt; 6, 48, 12, 42, 24, 36, 24, 36, 12, 30, 12, 48, 12…\n$ credit_history       &lt;fct&gt; critical, good, critical, good, poor, good, good,…\n$ purpose              &lt;fct&gt; furniture/appliances, furniture/appliances, educa…\n$ amount               &lt;int&gt; 1169, 5951, 2096, 7882, 4870, 9055, 2835, 6948, 3…\n$ savings_balance      &lt;fct&gt; unknown, &lt; 100 DM, &lt; 100 DM, &lt; 100 DM, &lt; 100 DM, …\n$ employment_duration  &lt;fct&gt; &gt; 7 years, 1 - 4 years, 4 - 7 years, 4 - 7 years,…\n$ percent_of_income    &lt;int&gt; 4, 2, 2, 2, 3, 2, 3, 2, 2, 4, 3, 3, 1, 4, 2, 4, 4…\n$ years_at_residence   &lt;int&gt; 4, 2, 3, 4, 4, 4, 4, 2, 4, 2, 1, 4, 1, 4, 4, 2, 4…\n$ age                  &lt;int&gt; 67, 22, 49, 45, 53, 35, 53, 35, 61, 28, 25, 24, 2…\n$ other_credit         &lt;fct&gt; none, none, none, none, none, none, none, none, n…\n$ housing              &lt;fct&gt; own, own, own, other, other, other, own, rent, ow…\n$ existing_loans_count &lt;int&gt; 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2…\n$ job                  &lt;fct&gt; skilled, skilled, unskilled, skilled, skilled, un…\n$ dependents           &lt;int&gt; 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ phone                &lt;fct&gt; yes, no, no, no, no, yes, no, yes, no, no, no, no…\n$ default              &lt;fct&gt; no, yes, no, no, yes, no, no, no, no, yes, yes, y…\n\n\n:::"
  },
  {
    "objectID": "datasets.html#attrition",
    "href": "datasets.html#attrition",
    "title": "Appendix A — Datasett",
    "section": "A.2 Attrition",
    "text": "A.2 Attrition\nUtfallsvariabel: “Attrition”, dvs om en arbeidstaker slutter i jobben.\nDatasettet er tilgjengelig fra Kaggle, men du kan laste de ned fra denne lenken\n\nattrition &lt;- readRDS(\"data/Attrition.rds\")\nglimpse(attrition)\n\nRows: 1,470\nColumns: 32\n$ Age                      &lt;int&gt; 41, 49, 37, 33, 27, 32, 59, 30, 38, 36, 35, 2…\n$ Attrition                &lt;fct&gt; Yes, No, Yes, No, No, No, No, No, No, No, No,…\n$ BusinessTravel           &lt;fct&gt; Travel_Rarely, Travel_Frequently, Travel_Rare…\n$ DailyRate                &lt;int&gt; 1102, 279, 1373, 1392, 591, 1005, 1324, 1358,…\n$ Department               &lt;fct&gt; Sales, Research & Development, Research & Dev…\n$ DistanceFromHome         &lt;int&gt; 1, 8, 2, 3, 2, 2, 3, 24, 23, 27, 16, 15, 26, …\n$ Education                &lt;int&gt; 2, 1, 2, 4, 1, 2, 3, 1, 3, 3, 3, 2, 1, 2, 3, …\n$ EducationField           &lt;fct&gt; Life Sciences, Life Sciences, Other, Life Sci…\n$ EmployeeNumber           &lt;int&gt; 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16,…\n$ EnvironmentSatisfaction  &lt;int&gt; 2, 3, 4, 4, 1, 4, 3, 4, 4, 3, 1, 4, 1, 2, 3, …\n$ Gender                   &lt;fct&gt; Female, Male, Male, Female, Male, Male, Femal…\n$ HourlyRate               &lt;int&gt; 94, 61, 92, 56, 40, 79, 81, 67, 44, 94, 84, 4…\n$ JobInvolvement           &lt;int&gt; 3, 2, 2, 3, 3, 3, 4, 3, 2, 3, 4, 2, 3, 3, 2, …\n$ JobLevel                 &lt;int&gt; 2, 2, 1, 1, 1, 1, 1, 1, 3, 2, 1, 2, 1, 1, 1, …\n$ JobRole                  &lt;fct&gt; Sales Executive, Research Scientist, Laborato…\n$ JobSatisfaction          &lt;int&gt; 4, 2, 3, 3, 2, 4, 1, 3, 3, 3, 2, 3, 3, 4, 3, …\n$ MaritalStatus            &lt;fct&gt; Single, Married, Single, Married, Married, Si…\n$ MonthlyIncome            &lt;int&gt; 5993, 5130, 2090, 2909, 3468, 3068, 2670, 269…\n$ MonthlyRate              &lt;int&gt; 19479, 24907, 2396, 23159, 16632, 11864, 9964…\n$ NumCompaniesWorked       &lt;int&gt; 8, 1, 6, 1, 9, 0, 4, 1, 0, 6, 0, 0, 1, 0, 5, …\n$ OverTime                 &lt;fct&gt; Yes, No, Yes, Yes, No, No, Yes, No, No, No, N…\n$ PercentSalaryHike        &lt;int&gt; 11, 23, 15, 11, 12, 13, 20, 22, 21, 13, 13, 1…\n$ PerformanceRating        &lt;int&gt; 3, 4, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, …\n$ RelationshipSatisfaction &lt;int&gt; 1, 4, 2, 3, 4, 3, 1, 2, 2, 2, 3, 4, 4, 3, 2, …\n$ StockOptionLevel         &lt;int&gt; 0, 1, 0, 0, 1, 0, 3, 1, 0, 2, 1, 0, 1, 1, 0, …\n$ TotalWorkingYears        &lt;int&gt; 8, 10, 7, 8, 6, 8, 12, 1, 10, 17, 6, 10, 5, 3…\n$ TrainingTimesLastYear    &lt;int&gt; 0, 3, 3, 3, 3, 2, 3, 2, 2, 3, 5, 3, 1, 2, 4, …\n$ WorkLifeBalance          &lt;int&gt; 1, 3, 3, 3, 3, 2, 2, 3, 3, 2, 3, 3, 2, 3, 3, …\n$ YearsAtCompany           &lt;int&gt; 6, 10, 0, 8, 2, 7, 1, 1, 9, 7, 5, 9, 5, 2, 4,…\n$ YearsInCurrentRole       &lt;int&gt; 4, 7, 0, 7, 2, 7, 0, 0, 7, 7, 4, 5, 2, 2, 2, …\n$ YearsSinceLastPromotion  &lt;int&gt; 0, 1, 0, 3, 2, 3, 0, 0, 1, 7, 0, 0, 4, 1, 0, …\n$ YearsWithCurrManager     &lt;int&gt; 5, 7, 0, 0, 2, 6, 0, 0, 8, 7, 3, 8, 3, 2, 3, …"
  },
  {
    "objectID": "datasets.html#kommunedata",
    "href": "datasets.html#kommunedata",
    "title": "Appendix A — Datasett",
    "section": "A.3 Kommunedata",
    "text": "A.3 Kommunedata\nDisse dataene er hentet fra SSBs offisielle statistikk og koblet sammen på kommunenummer. Fra statistikkbanken tabeller nr. 06944 (inntekt), 12210 (sosialhjelp/KOSTRA), 07459 (befolkning), 08487 (anmeldte lovbrudd). Flere variable kan kobles på. Merk: det er flere endringer i kommunestruktur, særlig i 2020. Kommunene er altså ikke helt det samme over tid. Du kan laste de ned fra denne lenken\nAktuelle utfallsvariable: Flere variable kan være aktuell som utfallsvariable. Prediktorer må nok omarbeides noe etter egne vurderinger (f.eks. omregne til per 1000 eller prosent, summere totaltall etc).\n\nkommune &lt;- readRDS(\"data/kommunedata.rds\")\nglimpse(kommune)\n\nRows: 1,529\nColumns: 28\n$ kommune_nr             &lt;chr&gt; \"0101\", \"0101\", \"0101\", \"0101\", \"0104\", \"0104\",…\n$ kommune                &lt;chr&gt; \"Halden (-2019)\", \"Halden (-2019)\", \"Halden (-2…\n$ year                   &lt;dbl&gt; 2015, 2016, 2017, 2018, 2015, 2016, 2017, 2018,…\n$ bef_18min              &lt;int&gt; 3556, 3503, 3505, 3544, 3594, 3652, 3704, 3655,…\n$ bef_18_25              &lt;int&gt; 3575, 3585, 3432, 3438, 3405, 3404, 3355, 3370,…\n$ bef_26_35              &lt;int&gt; 3728, 3804, 3985, 4035, 4057, 4071, 4124, 4110,…\n$ bef_totalt             &lt;int&gt; 30328, 30544, 30790, 31037, 31802, 32182, 32407…\n$ menn_18_25             &lt;int&gt; 1847, 1865, 1813, 1819, 1789, 1802, 1789, 1810,…\n$ menn_26_35             &lt;int&gt; 1880, 1919, 2005, 2062, 2063, 2083, 2113, 2134,…\n$ menn_36_67             &lt;int&gt; 7067, 7051, 7085, 7057, 7418, 7453, 7408, 7407,…\n$ menn_67plus            &lt;int&gt; 2496, 2624, 2697, 2806, 2671, 2777, 2856, 2895,…\n$ menn_18min             &lt;int&gt; 1880, 1847, 1873, 1876, 1842, 1885, 1919, 1878,…\n$ kvinner_18_25          &lt;int&gt; 1728, 1720, 1619, 1619, 1616, 1602, 1566, 1560,…\n$ kvinner_26_35          &lt;int&gt; 1848, 1885, 1980, 1973, 1994, 1988, 2011, 1976,…\n$ kvinner_36_67          &lt;int&gt; 6880, 6832, 6844, 6848, 7479, 7519, 7537, 7596,…\n$ kvinner_67plus         &lt;int&gt; 3026, 3145, 3242, 3309, 3178, 3306, 3423, 3555,…\n$ kvinner_18min          &lt;int&gt; 1676, 1656, 1632, 1668, 1752, 1767, 1785, 1777,…\n$ inntekt_totalt_median  &lt;int&gt; 555000, 562000, 580000, 591000, 561000, 568000,…\n$ inntekt_eskatt_median  &lt;int&gt; 451000, 453000, 470000, 480000, 449000, 456000,…\n$ ant_husholdninger      &lt;int&gt; 13890, 14124, 14281, 14454, 15046, 15132, 15313…\n$ shj_klienter           &lt;int&gt; 1183, 1137, 1099, 1128, 1155, 1129, 1152, 1137,…\n$ shj_unge               &lt;int&gt; 262, 247, 248, 242, 267, 263, 238, 222, 307, 28…\n$ vinningskriminalitet   &lt;dbl&gt; 19.7, 18.7, 16.5, 14.5, 24.5, 21.5, 18.0, 18.0,…\n$ voldskriminalitet      &lt;dbl&gt; 11.2, 12.6, 12.3, 11.2, 7.8, 8.3, 8.7, 9.7, 6.8…\n$ nark_alko_kriminalitet &lt;dbl&gt; 21.0, 21.9, 21.0, 20.3, 12.0, 10.2, 10.9, 10.1,…\n$ ordenslovbrudd         &lt;dbl&gt; 18.5, 16.5, 14.9, 13.7, 8.9, 9.0, 9.1, 9.2, 8.2…\n$ trafikklovbrudd        &lt;dbl&gt; 15.5, 16.3, 16.7, 19.2, 7.4, 6.3, 6.9, 8.0, 9.6…\n$ andre_lovbrudd         &lt;dbl&gt; 25.5, 26.5, 26.1, 25.2, 12.1, 12.2, 11.9, 12.4,…"
  },
  {
    "objectID": "datasets.html#churn",
    "href": "datasets.html#churn",
    "title": "Appendix A — Datasett",
    "section": "A.4 Churn",
    "text": "A.4 Churn\nDisse dataene er simulerte, men omhandler kunder i et teleselskap og hvorvidt de går over til annen tilbyder. Du kan laste de ned i csv-format fra denne lenken\n\nchurn &lt;- read.csv(\"data/WA_Fn-UseC_-Telco-Customer-Churn.csv\", stringsAsFactors = TRUE)\nglimpse(churn)\n\nRows: 7,043\nColumns: 21\n$ customerID       &lt;fct&gt; 7590-VHVEG, 5575-GNVDE, 3668-QPYBK, 7795-CFOCW, 9237-…\n$ gender           &lt;fct&gt; Female, Male, Male, Male, Female, Female, Male, Femal…\n$ SeniorCitizen    &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Partner          &lt;fct&gt; Yes, No, No, No, No, No, No, No, Yes, No, Yes, No, Ye…\n$ Dependents       &lt;fct&gt; No, No, No, No, No, No, Yes, No, No, Yes, Yes, No, No…\n$ tenure           &lt;int&gt; 1, 34, 2, 45, 2, 8, 22, 10, 28, 62, 13, 16, 58, 49, 2…\n$ PhoneService     &lt;fct&gt; No, Yes, Yes, No, Yes, Yes, Yes, No, Yes, Yes, Yes, Y…\n$ MultipleLines    &lt;fct&gt; No phone service, No, No, No phone service, No, Yes, …\n$ InternetService  &lt;fct&gt; DSL, DSL, DSL, DSL, Fiber optic, Fiber optic, Fiber o…\n$ OnlineSecurity   &lt;fct&gt; No, Yes, Yes, Yes, No, No, No, Yes, No, Yes, Yes, No …\n$ OnlineBackup     &lt;fct&gt; Yes, No, Yes, No, No, No, Yes, No, No, Yes, No, No in…\n$ DeviceProtection &lt;fct&gt; No, Yes, No, Yes, No, Yes, No, No, Yes, No, No, No in…\n$ TechSupport      &lt;fct&gt; No, No, No, Yes, No, No, No, No, Yes, No, No, No inte…\n$ StreamingTV      &lt;fct&gt; No, No, No, No, No, Yes, Yes, No, Yes, No, No, No int…\n$ StreamingMovies  &lt;fct&gt; No, No, No, No, No, Yes, No, No, Yes, No, No, No inte…\n$ Contract         &lt;fct&gt; Month-to-month, One year, Month-to-month, One year, M…\n$ PaperlessBilling &lt;fct&gt; Yes, No, Yes, No, Yes, Yes, Yes, No, Yes, No, Yes, No…\n$ PaymentMethod    &lt;fct&gt; Electronic check, Mailed check, Mailed check, Bank tr…\n$ MonthlyCharges   &lt;dbl&gt; 29.85, 56.95, 53.85, 42.30, 70.70, 99.65, 89.10, 29.7…\n$ TotalCharges     &lt;dbl&gt; 29.85, 1889.50, 108.15, 1840.75, 151.65, 820.50, 1949…\n$ Churn            &lt;fct&gt; No, No, Yes, No, Yes, Yes, No, No, Yes, No, No, No, N…"
  },
  {
    "objectID": "datasets.html#recidivism-from-iowa-prisons",
    "href": "datasets.html#recidivism-from-iowa-prisons",
    "title": "Appendix A — Datasett",
    "section": "A.5 Recidivism from Iowa prisons",
    "text": "A.5 Recidivism from Iowa prisons\nDatasettet inneholder data på 26020 personer løslatt fra fengsel i staten Iowa, USA mellom 2010 og 2015. For hver person er det informasjon om hvorvidt de har blitt fengslet på nytt innen 3 år (dvs. fulgt til mellom 2013 og 2018).\nAktuell utfallsvariabel: “Recidivism…Return.to.Prison.numeric” Endre gjerne variabelnavn til noe kortere.\nDatasettet er tilgjengelig fra Kaggle og er nærmere omtalt der. Du kan laste de ned i csv-format fra denne lenken.\n\nrecidivism &lt;- read.csv(\"data/3-Year_Recidivism_for_Offenders_Released_from_Prison_in_Iowa_elaborated.csv\", stringsAsFactors = TRUE)\n\nglimpse(recidivism)\n\nRows: 26,020\nColumns: 12\n$ Fiscal.Year.Released                      &lt;int&gt; 2010, 2010, 2010, 2010, 2010…\n$ Recidivism.Reporting.Year                 &lt;int&gt; 2013, 2013, 2013, 2013, 2013…\n$ Race...Ethnicity                          &lt;fct&gt; White - Non-Hispanic, White …\n$ Age.At.Release                            &lt;fct&gt; Under 25, 55 and Older, 25-3…\n$ Convicting.Offense.Classification         &lt;fct&gt; D Felony, D Felony, D Felony…\n$ Convicting.Offense.Type                   &lt;fct&gt; Violent, Public Order, Prope…\n$ Convicting.Offense.Subtype                &lt;fct&gt; Assault, OWI, Burglary, Traf…\n$ Main.Supervising.District                 &lt;fct&gt; 4JD, 7JD, 5JD, 8JD, 3JD, , 3…\n$ Release.Type                              &lt;fct&gt; Parole, Parole, Parole, Paro…\n$ Release.type..Paroled.to.Detainder.united &lt;fct&gt; Parole, Parole, Parole, Paro…\n$ Part.of.Target.Population                 &lt;fct&gt; Yes, Yes, Yes, Yes, Yes, No,…\n$ Recidivism...Return.to.Prison.numeric     &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…"
  },
  {
    "objectID": "datasets.html#compas",
    "href": "datasets.html#compas",
    "title": "Appendix A — Datasett",
    "section": "A.6 Compas",
    "text": "A.6 Compas\nUtfallsvariabel: “Two_yr_Revidvism”\nData er hentet fra R-pakken fairmodels, modifisert datsett fra ProPublica, men du kan laste de ned i rds-format fra denne lenken.\n\ncompas &lt;- readRDS(\"data/compas.rds\")\nglimpse(compas)\n\nRows: 6,172\nColumns: 7\n$ Two_yr_Recidivism    &lt;fct&gt; 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1…\n$ Number_of_Priors     &lt;int&gt; 0, 0, 4, 0, 14, 3, 0, 0, 3, 0, 0, 1, 7, 0, 3, 6, …\n$ Age_Above_FourtyFive &lt;fct&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ Age_Below_TwentyFive &lt;fct&gt; 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Misdemeanor          &lt;fct&gt; 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0…\n$ Ethnicity            &lt;fct&gt; Other, African_American, African_American, Other,…\n$ Sex                  &lt;fct&gt; Male, Male, Male, Male, Male, Male, Female, Male,…"
  },
  {
    "objectID": "datasets.html#diabetes-rehospitalization",
    "href": "datasets.html#diabetes-rehospitalization",
    "title": "Appendix A — Datasett",
    "section": "A.7 Diabetes rehospitalization",
    "text": "A.7 Diabetes rehospitalization\nData er beskrevet nærmere i Strack et al (2014) (se særlig tabell 1) og er tilgjengelig fra UCI machine learning repository. Du kan laste ned datasettet fra denne lenken.\nUtfallsvariabelen av interesse er readmitted, altså om pasienten blir lagt inn på nytt på et eller annet tidspunkt etter utskrivning.\n\ndiabetic &lt;- read.csv(\"data/diabetic_data.csv\", stringsAsFactors = TRUE)\nglimpse(diabetic)\n\nRows: 101,766\nColumns: 50\n$ encounter_id             &lt;int&gt; 2278392, 149190, 64410, 500364, 16680, 35754,…\n$ patient_nbr              &lt;int&gt; 8222157, 55629189, 86047875, 82442376, 425192…\n$ race                     &lt;fct&gt; Caucasian, Caucasian, AfricanAmerican, Caucas…\n$ gender                   &lt;fct&gt; Female, Female, Female, Male, Male, Male, Mal…\n$ age                      &lt;fct&gt; [0-10), [10-20), [20-30), [30-40), [40-50), […\n$ weight                   &lt;fct&gt; ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, …\n$ admission_type_id        &lt;int&gt; 6, 1, 1, 1, 1, 2, 3, 1, 2, 3, 1, 2, 1, 1, 3, …\n$ discharge_disposition_id &lt;int&gt; 25, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 3, 6, 1,…\n$ admission_source_id      &lt;int&gt; 1, 7, 7, 7, 7, 2, 2, 7, 4, 4, 7, 4, 7, 7, 2, …\n$ time_in_hospital         &lt;int&gt; 1, 3, 2, 2, 1, 3, 4, 5, 13, 12, 9, 7, 7, 10, …\n$ payer_code               &lt;fct&gt; ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, …\n$ medical_specialty        &lt;fct&gt; Pediatrics-Endocrinology, ?, ?, ?, ?, ?, ?, ?…\n$ num_lab_procedures       &lt;int&gt; 41, 59, 11, 44, 51, 31, 70, 73, 68, 33, 47, 6…\n$ num_procedures           &lt;int&gt; 0, 0, 5, 1, 0, 6, 1, 0, 2, 3, 2, 0, 0, 1, 5, …\n$ num_medications          &lt;int&gt; 1, 18, 13, 16, 8, 16, 21, 12, 28, 18, 17, 11,…\n$ number_outpatient        &lt;int&gt; 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ number_emergency         &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ number_inpatient         &lt;int&gt; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ diag_1                   &lt;fct&gt; 250.83, 276, 648, 8, 197, 414, 414, 428, 398,…\n$ diag_2                   &lt;fct&gt; ?, 250.01, 250, 250.43, 157, 411, 411, 492, 4…\n$ diag_3                   &lt;fct&gt; ?, 255, V27, 403, 250, 250, V45, 250, 38, 486…\n$ number_diagnoses         &lt;int&gt; 1, 9, 6, 7, 5, 9, 7, 8, 8, 8, 9, 7, 8, 8, 8, …\n$ max_glu_serum            &lt;fct&gt; None, None, None, None, None, None, None, Non…\n$ A1Cresult                &lt;fct&gt; None, None, None, None, None, None, None, Non…\n$ metformin                &lt;fct&gt; No, No, No, No, No, No, Steady, No, No, No, N…\n$ repaglinide              &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ nateglinide              &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ chlorpropamide           &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ glimepiride              &lt;fct&gt; No, No, No, No, No, No, Steady, No, No, No, N…\n$ acetohexamide            &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ glipizide                &lt;fct&gt; No, No, Steady, No, Steady, No, No, No, Stead…\n$ glyburide                &lt;fct&gt; No, No, No, No, No, No, No, Steady, No, No, N…\n$ tolbutamide              &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ pioglitazone             &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ rosiglitazone            &lt;fct&gt; No, No, No, No, No, No, No, No, No, Steady, N…\n$ acarbose                 &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ miglitol                 &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ troglitazone             &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ tolazamide               &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ examide                  &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ citoglipton              &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ insulin                  &lt;fct&gt; No, Up, No, Up, Steady, Steady, Steady, No, S…\n$ glyburide.metformin      &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ glipizide.metformin      &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ glimepiride.pioglitazone &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ metformin.rosiglitazone  &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ metformin.pioglitazone   &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, No, N…\n$ change                   &lt;fct&gt; No, Ch, No, Ch, Ch, No, Ch, No, Ch, Ch, No, C…\n$ diabetesMed              &lt;fct&gt; No, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Y…\n$ readmitted               &lt;fct&gt; NO, &gt;30, NO, NO, NO, &gt;30, NO, &gt;30, NO, NO, &gt;3…"
  },
  {
    "objectID": "datasets.html#absenteeism",
    "href": "datasets.html#absenteeism",
    "title": "Appendix A — Datasett",
    "section": "A.8 Absenteeism",
    "text": "A.8 Absenteeism\nDette er et syntetisk datasett som inneholder 8336 personer i en tenkt bedrift og hvor mange timer hver person har fravær fra jobben.\nData er tilgjengelig fra Kaggle, men du kan laste ned datasettet fra denne lenken.\n\nabsenteeism &lt;- read.csv(\"data/MFGEmployees4.csv\", stringsAsFactors = TRUE)\nglimpse(absenteeism)\n\nRows: 8,336\nColumns: 13\n$ EmployeeNumber &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ Surname        &lt;fct&gt; Gutierrez, Hardwick, Delgado, Simon, Delvalle, Jones, B…\n$ GivenName      &lt;fct&gt; Molly, Stephen, Chester, Irene, Edward, Ernie, Ralph, G…\n$ Gender         &lt;fct&gt; F, M, M, F, M, M, M, M, M, M, M, M, M, F, M, M, F, F, F…\n$ City           &lt;fct&gt; Burnaby, Courtenay, Richmond, Victoria, New Westminster…\n$ JobTitle       &lt;fct&gt; \"Baker\", \"Baker\", \"Baker\", \"Baker\", \"Baker\", \"Baker\", \"…\n$ DepartmentName &lt;fct&gt; Bakery, Bakery, Bakery, Bakery, Bakery, Bakery, Account…\n$ StoreLocation  &lt;fct&gt; Burnaby, Nanaimo, Richmond, Victoria, New Westminster, …\n$ Division       &lt;fct&gt; Stores, Stores, Stores, Stores, Stores, Stores, Finance…\n$ Age            &lt;dbl&gt; 32.02882, 40.32090, 48.82205, 44.59936, 35.69788, 48.44…\n$ LengthService  &lt;dbl&gt; 6.018478, 5.532445, 4.389973, 3.081736, 3.619091, 2.717…\n$ AbsentHours    &lt;dbl&gt; 36.57731, 30.16507, 83.80780, 70.02017, 0.00000, 81.830…\n$ BusinessUnit   &lt;fct&gt; Stores, Stores, Stores, Stores, Stores, Stores, HeadOff…"
  },
  {
    "objectID": "datasets.html#human-resources-hr",
    "href": "datasets.html#human-resources-hr",
    "title": "Appendix A — Datasett",
    "section": "A.9 Human resources (HR)",
    "text": "A.9 Human resources (HR)\nData er tilgjengelig fra Kaggle og variable er beskrevet nærmere på denne lenken. Du kan laste ned datasettet fra denne lenken.\n\nhr &lt;- read.csv(\"data/HRDataset_v14.csv\", stringsAsFactors = TRUE)\nglimpse(hr)\n\nRows: 311\nColumns: 36\n$ Employee_Name              &lt;fct&gt; \"Adinolfi, Wilson  K\", \"Ait Sidi, Karthikey…\n$ EmpID                      &lt;int&gt; 10026, 10084, 10196, 10088, 10069, 10002, 1…\n$ MarriedID                  &lt;int&gt; 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0…\n$ MaritalStatusID            &lt;int&gt; 0, 1, 1, 1, 2, 0, 0, 4, 0, 2, 1, 1, 2, 0, 2…\n$ GenderID                   &lt;int&gt; 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1…\n$ EmpStatusID                &lt;int&gt; 1, 5, 5, 1, 5, 1, 1, 1, 3, 1, 5, 5, 1, 1, 5…\n$ DeptID                     &lt;int&gt; 5, 3, 5, 5, 5, 5, 4, 5, 5, 3, 5, 5, 3, 5, 5…\n$ PerfScoreID                &lt;int&gt; 4, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 4, 3, 3…\n$ FromDiversityJobFairID     &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0…\n$ Salary                     &lt;int&gt; 62506, 104437, 64955, 64991, 50825, 57568, …\n$ Termd                      &lt;int&gt; 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1…\n$ PositionID                 &lt;int&gt; 19, 27, 20, 19, 19, 19, 24, 19, 19, 14, 19,…\n$ Position                   &lt;fct&gt; Production Technician I, Sr. DBA, Productio…\n$ State                      &lt;fct&gt; MA, MA, MA, MA, MA, MA, MA, MA, MA, MA, MA,…\n$ Zip                        &lt;int&gt; 1960, 2148, 1810, 1886, 2169, 1844, 2110, 2…\n$ DOB                        &lt;fct&gt; 07/10/83, 05/05/75, 09/19/88, 09/27/88, 09/…\n$ Sex                        &lt;fct&gt; M , M , F, F, F, F, F, M , F, M , F, M , M …\n$ MaritalDesc                &lt;fct&gt; Single, Married, Married, Married, Divorced…\n$ CitizenDesc                &lt;fct&gt; US Citizen, US Citizen, US Citizen, US Citi…\n$ HispanicLatino             &lt;fct&gt; No, No, No, No, No, No, No, No, No, No, Yes…\n$ RaceDesc                   &lt;fct&gt; White, White, White, White, White, White, W…\n$ DateofHire                 &lt;fct&gt; 7/5/2011, 3/30/2015, 7/5/2011, 1/7/2008, 7/…\n$ DateofTermination          &lt;fct&gt; , 6/16/2016, 9/24/2012, , 9/6/2016, , , , ,…\n$ TermReason                 &lt;fct&gt; \"N/A-StillEmployed\", \"career change\", \"hour…\n$ EmploymentStatus           &lt;fct&gt; Active, Voluntarily Terminated, Voluntarily…\n$ Department                 &lt;fct&gt; Production       , IT/IS, Production       …\n$ ManagerName                &lt;fct&gt; Michael Albert, Simon Roup, Kissy Sullivan,…\n$ ManagerID                  &lt;int&gt; 22, 4, 20, 16, 39, 11, 10, 19, 12, 7, 14, 2…\n$ RecruitmentSource          &lt;fct&gt; LinkedIn, Indeed, LinkedIn, Indeed, Google …\n$ PerformanceScore           &lt;fct&gt; Exceeds, Fully Meets, Fully Meets, Fully Me…\n$ EngagementSurvey           &lt;dbl&gt; 4.60, 4.96, 3.02, 4.84, 5.00, 5.00, 3.04, 5…\n$ EmpSatisfaction            &lt;int&gt; 5, 3, 3, 5, 4, 5, 3, 4, 3, 5, 4, 3, 4, 4, 5…\n$ SpecialProjectsCount       &lt;int&gt; 0, 6, 0, 0, 0, 0, 4, 0, 0, 6, 0, 0, 5, 0, 0…\n$ LastPerformanceReview_Date &lt;fct&gt; 1/17/2019, 2/24/2016, 5/15/2012, 1/3/2019, …\n$ DaysLateLast30             &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Absences                   &lt;int&gt; 1, 17, 3, 15, 2, 15, 19, 19, 4, 16, 12, 15,…"
  },
  {
    "objectID": "datasets.html#nettverk",
    "href": "datasets.html#nettverk",
    "title": "Appendix A — Datasett",
    "section": "A.10 Nettverk",
    "text": "A.10 Nettverk\nDu kan laste ned datasettet fra denne lenken.\n\nload(\"data/networkExample.RData\")\nglimpse(dataset)\n\nRows: 926\nColumns: 26\n$ degree               &lt;dbl&gt; 0.006282723, 0.002094241, 0.002094241, 0.00104712…\n$ betweenness          &lt;dbl&gt; 0.0081438885, 0.0020810695, 0.0014569424, 0.00000…\n$ closeness            &lt;dbl&gt; 0.08535931, 0.08049562, 0.08226376, 0.07795282, 0…\n$ transitivity         &lt;dbl&gt; 0.13333333, 0.00000000, 0.00000000, 0.00000000, 0…\n$ triangles            &lt;dbl&gt; 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0…\n$ ChurnNeighbors       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ NonChurnNeighbors    &lt;dbl&gt; 6, 2, 2, 1, 3, 5, 2, 2, 2, 6, 2, 3, 6, 2, 3, 2, 2…\n$ Neighbors            &lt;dbl&gt; 6, 2, 2, 1, 3, 5, 2, 2, 3, 6, 2, 3, 6, 2, 3, 2, 2…\n$ RelationalNeighbor   &lt;dbl&gt; 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.000…\n$ ChurnNeighbors2      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1…\n$ NonChurnNeighbors2   &lt;dbl&gt; 18, 4, 8, 4, 5, 19, 6, 8, 11, 15, 7, 6, 27, 4, 6,…\n$ RelationalNeighbor2  &lt;dbl&gt; 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0…\n$ degree2              &lt;dbl&gt; 0.026178010, 0.006282723, 0.010471204, 0.00523560…\n$ averageDegree        &lt;dbl&gt; 0.004363002, 0.003141361, 0.005235602, 0.00523560…\n$ averageDegree2       &lt;dbl&gt; 0.004188482, 0.004973822, 0.004581152, 0.00549738…\n$ averageTransitivity  &lt;dbl&gt; 0.13888889, 0.05000000, 0.03333333, 0.10000000, 0…\n$ averageTransitivity2 &lt;dbl&gt; 0.11415344, 0.10833333, 0.22777778, 0.18511905, 0…\n$ averageBetweenness   &lt;dbl&gt; 0.005713676, 0.004259980, 0.008147263, 0.00623771…\n$ averageBetweenness2  &lt;dbl&gt; 0.006733850, 0.008557955, 0.007690396, 0.00625752…\n$ averageTriangles     &lt;dbl&gt; 0.8333333, 0.5000000, 0.5000000, 1.0000000, 0.000…\n$ averageTriangles2    &lt;dbl&gt; 0.7777778, 1.2500000, 0.7500000, 1.7500000, 0.400…\n$ pr_0.85              &lt;dbl&gt; 0.0016432968, 0.0008315249, 0.0006479747, 0.00040…\n$ pr_0.20              &lt;dbl&gt; 0.0011679051, 0.0010706518, 0.0009325680, 0.00088…\n$ perspr_0.85          &lt;dbl&gt; 0.0016432968, 0.0008315249, 0.0006479747, 0.00040…\n$ perspr_0.99          &lt;dbl&gt; 0.0017826047, 0.0006187399, 0.0006012571, 0.00030…\n$ Future               &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…"
  },
  {
    "objectID": "datasets.html#occupational-wage-data",
    "href": "datasets.html#occupational-wage-data",
    "title": "Appendix A — Datasett",
    "section": "A.11 Occupational wage data",
    "text": "A.11 Occupational wage data\nDu kan laste ned datasettet fra denne lenken.\n\noes &lt;- readRDS(\"data/oes.rds\")\nglimpse(oes)\n\n num [1:22, 1:15] 70800 50580 60350 56330 49710 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:22] \"Management\" \"Business Operations\" \"Computer Science\" \"Architecture/Engineering\" ...\n  ..$ : chr [1:15] \"2001\" \"2002\" \"2003\" \"2004\" ..."
  },
  {
    "objectID": "datasets.html#voters",
    "href": "datasets.html#voters",
    "title": "Appendix A — Datasett",
    "section": "A.12 Voters",
    "text": "A.12 Voters\nData er hentet fra 2016 Views of the Electorate Research Survey gjennomført av Voter study group. Full variabelliste er lastet opp i Canvas. Du kan laste ned datasettet fra denne lenken.\nAktuell problemstilling er å predikere hvilke velgere som støtter Clinton. En slik klassifisering kan brukes til f.eks. å målrette budskap. En relatert problemstilling er å klustre velgerne for å finne segmenter.\n\nvoters &lt;- read.csv(\"data/voters.csv\", stringsAsFactors = TRUE)\nglimpse(voters)\n\nRows: 6,426\nColumns: 42\n$ RIGGED_SYSTEM_1_2016 &lt;int&gt; 3, 2, 2, 1, 3, 3, 3, 2, 4, 2, 3, 3, 4, 4, 3, 3, 2…\n$ RIGGED_SYSTEM_2_2016 &lt;int&gt; 4, 1, 4, 4, 1, 3, 4, 3, 4, 3, 2, 2, 3, 2, 4, 3, 2…\n$ RIGGED_SYSTEM_3_2016 &lt;int&gt; 1, 3, 1, 1, 3, 2, 1, 3, 1, 1, 1, 4, 1, 1, 1, 1, 3…\n$ RIGGED_SYSTEM_4_2016 &lt;int&gt; 4, 1, 4, 4, 1, 2, 1, 2, 3, 2, 4, 1, 3, 4, 2, 2, 1…\n$ RIGGED_SYSTEM_5_2016 &lt;int&gt; 3, 3, 1, 2, 3, 2, 2, 1, 3, 2, 2, 2, 3, 3, 2, 3, 2…\n$ RIGGED_SYSTEM_6_2016 &lt;int&gt; 2, 2, 1, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2…\n$ track_2016           &lt;int&gt; 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 3, 2, 2, 2…\n$ persfinretro_2016    &lt;int&gt; 2, 3, 3, 1, 2, 2, 2, 3, 2, 1, 2, 3, 2, 2, 2, 2, 2…\n$ econtrend_2016       &lt;int&gt; 1, 3, 3, 1, 2, 2, 1, 3, 1, 1, 1, 3, 2, 1, 4, 3, 2…\n$ Americatrend_2016    &lt;int&gt; 1, 1, 1, 3, 3, 1, 2, 3, 2, 1, 3, 3, 2, 1, 1, 3, 1…\n$ futuretrend_2016     &lt;int&gt; 4, 1, 1, 3, 4, 3, 1, 3, 1, 1, 3, 1, 1, 4, 3, 4, 3…\n$ wealth_2016          &lt;int&gt; 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1…\n$ values_culture_2016  &lt;int&gt; 2, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 2, 1, 1, 3, 8, 3…\n$ US_respect_2016      &lt;int&gt; 2, 3, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3…\n$ trustgovt_2016       &lt;int&gt; 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3…\n$ trust_people_2016    &lt;int&gt; 8, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 8, 8, 2, 2…\n$ helpful_people_2016  &lt;int&gt; 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 8, 1, 1…\n$ fair_people_2016     &lt;int&gt; 8, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 8, 2, 1…\n$ imiss_a_2016         &lt;int&gt; 2, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 2, 1, 2, 2, 2…\n$ imiss_b_2016         &lt;int&gt; 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1…\n$ imiss_c_2016         &lt;int&gt; 1, 2, 2, 3, 1, 2, 2, 1, 4, 2, 3, 1, 2, 2, 3, 1, 1…\n$ imiss_d_2016         &lt;int&gt; 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 3…\n$ imiss_e_2016         &lt;int&gt; 1, 1, 3, 1, 1, 3, 1, 2, 1, 1, 2, 2, 4, 1, 4, 2, 1…\n$ imiss_f_2016         &lt;int&gt; 2, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 1, 2, 1, 3, 2, 2…\n$ imiss_g_2016         &lt;int&gt; 1, 4, 3, 3, 3, 1, 3, 4, 2, 2, 1, 4, 1, 2, 1, 1, 4…\n$ imiss_h_2016         &lt;int&gt; 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 3…\n$ imiss_i_2016         &lt;int&gt; 2, 2, 4, 4, 2, 1, 1, 3, 2, 1, 1, 2, 1, 2, 2, 2, 3…\n$ imiss_j_2016         &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2…\n$ imiss_k_2016         &lt;int&gt; 1, 2, 1, 1, 2, 1, 1, 4, 2, 1, 1, 3, 1, 1, 1, 1, 1…\n$ imiss_l_2016         &lt;int&gt; 1, 4, 1, 2, 4, 1, 1, 3, 1, 1, 1, 4, 2, 1, 1, 1, 3…\n$ imiss_m_2016         &lt;int&gt; 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1…\n$ imiss_n_2016         &lt;int&gt; 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1…\n$ imiss_o_2016         &lt;int&gt; 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1…\n$ imiss_p_2016         &lt;int&gt; 2, 1, 2, 3, 1, 3, 1, 1, 4, 1, 1, 1, 2, 3, 2, 3, 1…\n$ imiss_q_2016         &lt;int&gt; 1, 1, 1, 2, 2, 1, 1, 4, 2, 1, 1, 3, 1, 1, 2, 2, 3…\n$ imiss_r_2016         &lt;int&gt; 2, 1, 1, 2, 1, 2, 1, 2, 4, 2, 2, 1, 3, 2, 2, 2, 1…\n$ imiss_s_2016         &lt;int&gt; 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 3…\n$ imiss_t_2016         &lt;int&gt; 1, 1, 3, 3, 1, 1, 3, 4, 1, 1, 1, 3, 1, 3, 1, 1, 3…\n$ imiss_u_2016         &lt;int&gt; 2, 2, 2, 2, 1, 3, 3, 1, 4, 2, 3, 2, 4, 3, 3, 3, 1…\n$ imiss_x_2016         &lt;int&gt; 1, 3, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 2, 3…\n$ imiss_y_2016         &lt;int&gt; 1, 4, 2, 3, 1, 1, 1, 3, 2, 1, 1, 3, 1, 1, 1, 2, 2…\n$ Clinton_supp         &lt;fct&gt; Yes, No, Yes, No, No, Yes, Yes, No, Yes, Yes, Yes…"
  },
  {
    "objectID": "introduksjon.html#noen-innledende-metodiske-begrep",
    "href": "introduksjon.html#noen-innledende-metodiske-begrep",
    "title": "1  Introduksjon til maskinlæring",
    "section": "1.1 Noen innledende metodiske begrep",
    "text": "1.1 Noen innledende metodiske begrep\nI standard samfunnsvitenskapelige metodekurs lærer man først og fremst teknikker for å beskrive data og statistisk inferens for å beskrive usikkerheten rundt estimatene. Avhengig av studiets øvrige design kan resultatene tolkes kausalt og/eller generalisere til en nærmere veldefinert populasjon (Berk 2016).\nUsikkerhet beskrives typisk ved hjelp standardfeil, p-verdier og konfidensintervall tilhørende spesifikke statistiske tester. Dette innebærer at man bruker statistiske modeller for hvordan resultatene ville sett ut under spesifikke forutsetninger. Samplingfordelinger som normalfordelingen og en del andre tilsvarende fordelinger er derfor sentralt. De fleste teknikkene vi skal bruke i dette kurset er ikke statistiske modeller i samme forstand og det er ingen antakelser om samplingfordelinger. Standardfeil og konfidensintervall kan derfor ikke regnes ut. Usikkerhet og hvem resultatene gjelder for er også relevante for maskinlæring, men ikke helt på samme måte."
  },
  {
    "objectID": "introduksjon.html#forklaringer-og-prediksjoner",
    "href": "introduksjon.html#forklaringer-og-prediksjoner",
    "title": "1  Introduksjon til maskinlæring",
    "section": "1.2 Forklaringer og prediksjoner",
    "text": "1.2 Forklaringer og prediksjoner\nVi er i liten grad interessert i regresjonskoeffisienter, \\(\\beta\\), og tolkning av denne. Derimot er vi interessert i det predikerte utfallet \\(\\hat{y}_i\\)."
  },
  {
    "objectID": "introduksjon.html#overfitting-training-og-testing-dataset",
    "href": "introduksjon.html#overfitting-training-og-testing-dataset",
    "title": "1  Introduksjon til maskinlæring",
    "section": "1.3 Overfitting: training og testing dataset",
    "text": "1.3 Overfitting: training og testing dataset\nNår man tilpasser en statistisk modell eller algoritme til data så er det lett å tenke at modellen bør gjenspeile dataene så godt som mulig. Samtidig sies det ofte at modellene skal være så enkle som tilrådelig. En mer komplisert modell vil jo være i stand til å tilpasses dataene i større grad, så hvordan avveie dette?\nSpørsmålet nå er ikke hvor godt modellen passer til disse dataene, men hvordan den passer til nye data! Altså fremtidige data eller fremtidig situasjon. La oss si at vi har et datasett som kan plottes om følger:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nn &lt;- 10\nbeta &lt;- 1\nset.seed(42)\nx &lt;- round(20 + runif(n)*50, digits = 1)\ny &lt;- 1 + beta*x + rnorm(n)*10\n\ndf &lt;- data.frame(x = x, y = y) %&gt;% \n  mutate(d = case_when(x &lt; 50 ~ 0,\n                       x &lt; 56 ~ 1, \n                       TRUE ~2) %&gt;% as_factor())\n\n\ng1 &lt;- ggplot(df, aes(x = x, y = y)) +\n  geom_point() \ng1\n\n\n\n\nVi kunne her tilpasse en enkel lineær regresjonsmodell eller en mer komplisert modell. Resultatet vises i grafen nedenfor.\n\nest1 &lt;- lm(y ~ x + x*d, data = df)\nest2 &lt;- lm(y ~ x, data = df)\n\ndf_p1 &lt;- df %&gt;% \n  mutate(pred = predict(est1))  %&gt;% \n  mutate(res_pred = y - pred, \n         res_y = y - mean(y))\n\ndf_p1 %&gt;% \n  summarise(res_pred = sum(res_pred^2), \n            res_y = sum(res_y^2)) %&gt;% \n  mutate(1 - res_pred/res_y)\n\n  res_pred    res_y 1 - res_pred/res_y\n1 190.8017 4411.586          0.9567499\n\nggplot(df, aes(x = x, y = y)) +\n  geom_point(col = \"black\") +\n  geom_line(data = df_p1, aes(y = pred), col = \"red\", linewidth = .7) +\n  stat_smooth(method='lm', formula = y ~ x, se = F, col = \"blue\", linewidth = .7)\n\n\n\n\nDen kompliserte modellen gir \\(r^2\\) = 0.9567499 mens den enkle lineære gir \\(r^2\\) = 0.8066771.\n\nsummary(est1)$r.squared\n\n[1] 0.9567499\n\nsummary(est2)$r.squared\n\n[1] 0.8066771\n\n\n\nx &lt;- round(20 + runif(n)*50, digits = 1)\ny &lt;- 1 + beta*x + rnorm(n)*10\ndf2 &lt;- data.frame(x = x, y = y)\n  \ng1 +\n  geom_point(data = df2, col = \"blue\") +\n  geom_smooth(method = lm, se = F, col = \"red\")\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "introduksjon.html#klassifikasjonsusikkerhet---grunnleggende-begreper",
    "href": "introduksjon.html#klassifikasjonsusikkerhet---grunnleggende-begreper",
    "title": "1  Introduksjon til maskinlæring",
    "section": "1.4 Klassifikasjonsusikkerhet - grunnleggende begreper",
    "text": "1.4 Klassifikasjonsusikkerhet - grunnleggende begreper\nI praksis kommer vi til å fokusere mest på klassifikasjon, som altså er når det vi predikerer er en kategorisk variabel. For nye personer vil vi da gjerne predikere hvilken kategori vedkommende tilhører. En variant av dette er å predikere en fremtidig handling (slutte i jobb, ikke betale tilbake lån, begå ny kriminalitet etc).\n\n1.4.1 Confusion matrix: riktig og feil klassifisering\nNår vi predikerer et kategorisk utfall er det gjerne ett av utfallene vi primært er interessert i. Disse kalles positive og de andre er negative. Dette har ingenting å gjøre med om utfallet er bra eller dårlig å gjøre. Å predikere en sykdom vil være positivt og å være frisk vil være negativt. Å ha tilbakefall til kriminalitet vil være positivt og lovlydig vil være negativt.\nEn positiv prediksjon kan da være korrekt eller feil, og disse kalles da henholdsvis sanne eller falske positive. Tilsvarende kan en negaitv prediksjon være sann eller falsk.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPredikert\n\n\n\n\n\n\n\nNegativ\nPositiv\n\n\nObservert\nNegativ\nSanne negative (TN)\nFalske positive (FN)\n\n\n\nPositiv\nFalske negative (FN)\nSanne positive (TP)\n\n\n\n\n\n1.4.2 Asymetriske kostnader\nÅ predikere feil kan betraktes som en kostnad. Hvis vi skal bruke prediksjonenen til noe i praksis, så skal det jo få konsekvenser på en eller annen måte. Det kan innebære at man setter i verk tiltak som er unødvendige - eller ikke setter i verk tiltak der man burde gjort det.\nEt sentralt spørsmål er derfor om begge typer feil er like viktig eller alvorlig. Noen ganger er det det, men det bør man ta stilling til helt konkret i det enkelte tilfellet. Det er ikke åpenbart hvem som har kompetanse til å vurdere dette. Det kan kreves inngående fagkunnskap for å gjøre en riktig vurdering, eller det kan være politiske prioriteringer, økonomiske forhold, rettferdighetsvurderinger osv. Det er i hvert fall ikke bare opp til forskeren eller IT-personalet å vurdere.\nDette kan koke ned til helt konkret vurdering av hvor mange falske positive er du villig til å godta per falske negative. Et konkret eksempel er studien til Berk et al (2016) av menn som er arrestert for vold i nære relasjoner. Problemstillingen er hvem skal i arrest frem til saken kommer opp og hvem skal løslates mot kausjon. Prediksjonen er da hvem som vil begå ny voldshandling mot partner. Forholdet mellom TN og FN oversettes konkret til hvor mange mistenkte skal sitte unødig i fengsel (dvs. falske positive) mot hvor mange partnere skal unødig utsettes for ny voldshendelse (dvs. falske negative)? I nevnte studie har noen “stakeholders” landet på at falske negative er vesentlig mer alvorlig enn falske positive. Prediksjonsmodellen utformes så for å reflektere akkurat det."
  },
  {
    "objectID": "introduksjon.html#rettferdighet-og-rimelighet",
    "href": "introduksjon.html#rettferdighet-og-rimelighet",
    "title": "1  Introduksjon til maskinlæring",
    "section": "1.5 Rettferdighet og rimelighet",
    "text": "1.5 Rettferdighet og rimelighet\nI diskusjoner av anvendelser av maskinlæring står rettferdighet helt sentralt. Men det er ikke alltid like klart hva dette egentlig betyr utover at det er forskjellsbehandling. Tross alt er hele formålet med prediksjon å nettopp forskjellsbehandle, eller målrette som det også kan kalles. Rettferdighet kommer inn på flere nivåer, fra det helt prinsippielle ved å la data og datamaskiner ha betydning for avgjørelser til det helt konkrete til hvordan feilratene bør se ut. Vurdering av asymetriske kostnader er åpenbart også et rettferdighetsspørsmål med etiske implikasjoner. En variant er at disse feilratene kan se forskjellige ut på tvers av undergrupper.\nHvilke konsekvenser som er akseptable er viktig. Men det er også viktig før man bygger modellen. Software kommer med default innstillinger, men det betyr jo ikke at de er “nøytrale”. Resultatene kan til en viss grad styres, så det må man rett og slett gjøre.\n\n1.5.1 Fundamentale skjevheter i data\nSiden maskinlæring baserer seg på å lære av tilgjengelige data for å benytte det på nye tilfeller spiller det vesentlig rolle hvordan de opprinnelige dataene ble generert i utgangspunktet.\nEt velkjent eksempel er hvordan Amazon besluttet å slutte å bruke en algoritme for rekruttering fordi den systematisk valgte bort kvinner. Grunnen til at algoritmen gjorde dette var så enkelt som at dataene den var trent opp på var mannsdominert. Algoritmen hadde altså primært tilgang til informasjon om hvilke egenskaper som kjennetegnet talentfulle mannlige kandidater, som altså kan være forskjellige fra talentfulle kvinnelige kandidater.\nNår man skal ta en algoritme i bruk er det derfor helt avgjørende at man kan forsvare bruken av de dataene algoritmen er trent på. Kjente skjevheter kan i prinsippet motarbeides ved tuning (dette kommer vi tilbake til), men det er vanskelig å garantere at det er skjevheter man ikke har tenkt på."
  },
  {
    "objectID": "introduksjon.html#oppgaver",
    "href": "introduksjon.html#oppgaver",
    "title": "1  Introduksjon til maskinlæring",
    "section": "1.6 Oppgaver",
    "text": "1.6 Oppgaver\n\nExercise 1.1 Kan man tenke seg målrettede tiltak som ikke innebærer en form for prediksjon om fremtiden? (Implisitt eller eksplisitt)\n\n\nExercise 1.2 Hvor alvorlig er det å gjøre feil? Hva avgjør om feil prediksjon spiller noen rolle?\n\n\n\n\n\n\n\nBerk, Richard. 2016. Statistical Learning from a Regression Perspective. USA: Springer."
  },
  {
    "objectID": "logistisk_regresjon.html#empirisk-eksempel",
    "href": "logistisk_regresjon.html#empirisk-eksempel",
    "title": "3  Logistisk regresjon",
    "section": "3.1 Empirisk eksempel",
    "text": "3.1 Empirisk eksempel\nSom eksempel bruker vi et datasettet Attrition. Dette er et datasett over arbeidstakere i en bedrift der utfallsvariabelen er om arbeidstakeren slutter i jobben eller ikke.\nFor arbeidsgivere kan det være kostbart med endringer i staben. Arbeidstakere som slutter tar med seg erfaring og kompetanse, og nye arbeidstakere må læres opp. Arbeidsgiver bør derfor generelt legge til rette for at arbeidstakere ønsker å bli værende, men det kan også være aktuelt med mer målrettede tiltak. Når en arbeidstaker har fått et nytt jobbtilbud kan det være for sent. Hvis man derimot kan komme i forkjøpet kan man kanskje gjøre noe før vedkommende går til det skrittet å søke ny jobb. Hvis man kunne predikere hvem som kommer til å slutte kunne man altså gjort tiltak i forkant.1\nFørst leser vi inn datasettet og evt. laster pakker i trenger. Dataene er i csv-format så vi leser inn med readRDS(). Deretter kan vi se på innholdet med skim():\n\nattrition &lt;- readRDS(\"data/attrition.rds\")\nskim(attrition)  \n\n\nData summary\n\n\nName\nattrition\n\n\nNumber of rows\n1470\n\n\nNumber of columns\n32\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n8\n\n\nnumeric\n24\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nAttrition\n0\n1\nFALSE\n2\nNo: 1233, Yes: 237\n\n\nBusinessTravel\n0\n1\nFALSE\n3\nTra: 1043, Tra: 277, Non: 150\n\n\nDepartment\n0\n1\nFALSE\n3\nRes: 961, Sal: 446, Hum: 63\n\n\nEducationField\n0\n1\nFALSE\n6\nLif: 606, Med: 464, Mar: 159, Tec: 132\n\n\nGender\n0\n1\nFALSE\n2\nMal: 882, Fem: 588\n\n\nJobRole\n0\n1\nFALSE\n9\nSal: 326, Res: 292, Lab: 259, Man: 145\n\n\nMaritalStatus\n0\n1\nFALSE\n3\nMar: 673, Sin: 470, Div: 327\n\n\nOverTime\n0\n1\nFALSE\n2\nNo: 1054, Yes: 416\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nAge\n0\n1\n36.92\n9.14\n18\n30.00\n36.0\n43.00\n60\n▂▇▇▃▂\n\n\nDailyRate\n0\n1\n802.49\n403.51\n102\n465.00\n802.0\n1157.00\n1499\n▇▇▇▇▇\n\n\nDistanceFromHome\n0\n1\n9.19\n8.11\n1\n2.00\n7.0\n14.00\n29\n▇▅▂▂▂\n\n\nEducation\n0\n1\n2.91\n1.02\n1\n2.00\n3.0\n4.00\n5\n▂▃▇▆▁\n\n\nEmployeeNumber\n0\n1\n1024.87\n602.02\n1\n491.25\n1020.5\n1555.75\n2068\n▇▇▇▇▇\n\n\nEnvironmentSatisfaction\n0\n1\n2.72\n1.09\n1\n2.00\n3.0\n4.00\n4\n▅▅▁▇▇\n\n\nHourlyRate\n0\n1\n65.89\n20.33\n30\n48.00\n66.0\n83.75\n100\n▇▇▇▇▇\n\n\nJobInvolvement\n0\n1\n2.73\n0.71\n1\n2.00\n3.0\n3.00\n4\n▁▃▁▇▁\n\n\nJobLevel\n0\n1\n2.06\n1.11\n1\n1.00\n2.0\n3.00\n5\n▇▇▃▂▁\n\n\nJobSatisfaction\n0\n1\n2.73\n1.10\n1\n2.00\n3.0\n4.00\n4\n▅▅▁▇▇\n\n\nMonthlyIncome\n0\n1\n6502.93\n4707.96\n1009\n2911.00\n4919.0\n8379.00\n19999\n▇▅▂▁▂\n\n\nMonthlyRate\n0\n1\n14313.10\n7117.79\n2094\n8047.00\n14235.5\n20461.50\n26999\n▇▇▇▇▇\n\n\nNumCompaniesWorked\n0\n1\n2.69\n2.50\n0\n1.00\n2.0\n4.00\n9\n▇▃▂▂▁\n\n\nPercentSalaryHike\n0\n1\n15.21\n3.66\n11\n12.00\n14.0\n18.00\n25\n▇▅▃▂▁\n\n\nPerformanceRating\n0\n1\n3.15\n0.36\n3\n3.00\n3.0\n3.00\n4\n▇▁▁▁▂\n\n\nRelationshipSatisfaction\n0\n1\n2.71\n1.08\n1\n2.00\n3.0\n4.00\n4\n▅▅▁▇▇\n\n\nStockOptionLevel\n0\n1\n0.79\n0.85\n0\n0.00\n1.0\n1.00\n3\n▇▇▁▂▁\n\n\nTotalWorkingYears\n0\n1\n11.28\n7.78\n0\n6.00\n10.0\n15.00\n40\n▇▇▂▁▁\n\n\nTrainingTimesLastYear\n0\n1\n2.80\n1.29\n0\n2.00\n3.0\n3.00\n6\n▂▇▇▂▃\n\n\nWorkLifeBalance\n0\n1\n2.76\n0.71\n1\n2.00\n3.0\n3.00\n4\n▁▃▁▇▂\n\n\nYearsAtCompany\n0\n1\n7.01\n6.13\n0\n3.00\n5.0\n9.00\n40\n▇▂▁▁▁\n\n\nYearsInCurrentRole\n0\n1\n4.23\n3.62\n0\n2.00\n3.0\n7.00\n18\n▇▃▂▁▁\n\n\nYearsSinceLastPromotion\n0\n1\n2.19\n3.22\n0\n0.00\n1.0\n3.00\n15\n▇▁▁▁▁\n\n\nYearsWithCurrManager\n0\n1\n4.12\n3.57\n0\n2.00\n3.0\n7.00\n17\n▇▂▅▁▁\n\n\n\n\n\nMerk at det er en variabel vi helt sikkert ikke trenger, så vi sletter denne like gjerne med en gang: EmployeeNumber er et løpenummer for person. Siden det er et 1:1 forhold mellom dette og utfallsvariabelen, så bør den tas ut.\nBruker select() med minustegn for variable vi vil fjerne. Her overskrives datasettet med det modifiserte datasettet\n\nattrition &lt;- attrition %&gt;%  \n  select(- EmployeeNumber) \nglimpse(attrition)\n\nRows: 1,470\nColumns: 31\n$ Age                      &lt;int&gt; 41, 49, 37, 33, 27, 32, 59, 30, 38, 36, 35, 2…\n$ Attrition                &lt;fct&gt; Yes, No, Yes, No, No, No, No, No, No, No, No,…\n$ BusinessTravel           &lt;fct&gt; Travel_Rarely, Travel_Frequently, Travel_Rare…\n$ DailyRate                &lt;int&gt; 1102, 279, 1373, 1392, 591, 1005, 1324, 1358,…\n$ Department               &lt;fct&gt; Sales, Research & Development, Research & Dev…\n$ DistanceFromHome         &lt;int&gt; 1, 8, 2, 3, 2, 2, 3, 24, 23, 27, 16, 15, 26, …\n$ Education                &lt;int&gt; 2, 1, 2, 4, 1, 2, 3, 1, 3, 3, 3, 2, 1, 2, 3, …\n$ EducationField           &lt;fct&gt; Life Sciences, Life Sciences, Other, Life Sci…\n$ EnvironmentSatisfaction  &lt;int&gt; 2, 3, 4, 4, 1, 4, 3, 4, 4, 3, 1, 4, 1, 2, 3, …\n$ Gender                   &lt;fct&gt; Female, Male, Male, Female, Male, Male, Femal…\n$ HourlyRate               &lt;int&gt; 94, 61, 92, 56, 40, 79, 81, 67, 44, 94, 84, 4…\n$ JobInvolvement           &lt;int&gt; 3, 2, 2, 3, 3, 3, 4, 3, 2, 3, 4, 2, 3, 3, 2, …\n$ JobLevel                 &lt;int&gt; 2, 2, 1, 1, 1, 1, 1, 1, 3, 2, 1, 2, 1, 1, 1, …\n$ JobRole                  &lt;fct&gt; Sales Executive, Research Scientist, Laborato…\n$ JobSatisfaction          &lt;int&gt; 4, 2, 3, 3, 2, 4, 1, 3, 3, 3, 2, 3, 3, 4, 3, …\n$ MaritalStatus            &lt;fct&gt; Single, Married, Single, Married, Married, Si…\n$ MonthlyIncome            &lt;int&gt; 5993, 5130, 2090, 2909, 3468, 3068, 2670, 269…\n$ MonthlyRate              &lt;int&gt; 19479, 24907, 2396, 23159, 16632, 11864, 9964…\n$ NumCompaniesWorked       &lt;int&gt; 8, 1, 6, 1, 9, 0, 4, 1, 0, 6, 0, 0, 1, 0, 5, …\n$ OverTime                 &lt;fct&gt; Yes, No, Yes, Yes, No, No, Yes, No, No, No, N…\n$ PercentSalaryHike        &lt;int&gt; 11, 23, 15, 11, 12, 13, 20, 22, 21, 13, 13, 1…\n$ PerformanceRating        &lt;int&gt; 3, 4, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, …\n$ RelationshipSatisfaction &lt;int&gt; 1, 4, 2, 3, 4, 3, 1, 2, 2, 2, 3, 4, 4, 3, 2, …\n$ StockOptionLevel         &lt;int&gt; 0, 1, 0, 0, 1, 0, 3, 1, 0, 2, 1, 0, 1, 1, 0, …\n$ TotalWorkingYears        &lt;int&gt; 8, 10, 7, 8, 6, 8, 12, 1, 10, 17, 6, 10, 5, 3…\n$ TrainingTimesLastYear    &lt;int&gt; 0, 3, 3, 3, 3, 2, 3, 2, 2, 3, 5, 3, 1, 2, 4, …\n$ WorkLifeBalance          &lt;int&gt; 1, 3, 3, 3, 3, 2, 2, 3, 3, 2, 3, 3, 2, 3, 3, …\n$ YearsAtCompany           &lt;int&gt; 6, 10, 0, 8, 2, 7, 1, 1, 9, 7, 5, 9, 5, 2, 4,…\n$ YearsInCurrentRole       &lt;int&gt; 4, 7, 0, 7, 2, 7, 0, 0, 7, 7, 4, 5, 2, 2, 2, …\n$ YearsSinceLastPromotion  &lt;int&gt; 0, 1, 0, 3, 2, 3, 0, 0, 1, 7, 0, 0, 4, 1, 0, …\n$ YearsWithCurrManager     &lt;int&gt; 5, 7, 0, 0, 2, 6, 0, 0, 8, 7, 3, 8, 3, 2, 3, …\n\n\nDel datasettet i to deler. Vi trekker tilfeldig 70% og legger dette i datasettet training. Resten legges i testing. De nye datasettene behøver jo ikke hete akkurat dette. Kall det hva du vil.\n\nset.seed(426)\nattrition_split &lt;- initial_split(attrition)\ntraining &lt;- training(attrition_split) \ntesting  &lt;- testing(attrition_split) \n\nSjekk at antallet i hvert datasett summeres til totalen\n\nnrow(attrition) \n\n[1] 1470\n\nnrow(training) \n\n[1] 1102\n\nnrow(testing) \n\n[1] 368\n\n\nOBS! variabelen Attrition er en “factor”, dvs. kategorisk med underliggende nummer. Ta en titt.\n\nstr(training$Attrition)   \n\n Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 2 1 1 1 2 1 1 ...\n\nhead(training$Attrition) \n\n[1] No  Yes No  Yes No  No \nLevels: No Yes\n\nlevels(training$Attrition) \n\n[1] \"No\"  \"Yes\"\n\n\nI en regresjon vil lm() og glm() håndtere en factor automatisk som dummy. Men det funker ikke nødvendigvis like greit for plotting etc. Gjør om factor til dummy-variabel. Inni parentesen er et logisk uttrykk som får TRUE/FALSE, men med å eksplisitt be om at variabelen skal være numerisk blir det 1/0 Vi overskriver variablen slik:\n\ntraining$Attrition &lt;- as.numeric(training$Attrition == \"Yes\") \nhead(training$Attrition) \n\n[1] 0 1 0 1 0 0\n\n\nAndelen kan vi få med mean():\n\nmean(training$Attrition) \n\n[1] 0.1533575\n\n\nVi kan vise hvordan det å slutte i jobben varierer med f.eks. alder ved å beregne andel per verdi av alder.\n\ntraining_p &lt;- training %&gt;% \n  group_by(Age) %&gt;% \n  summarise(Attrition = mean(Attrition == 1)) \nggplot(training_p, aes(x=Age, y=Attrition))+ \n  geom_point()"
  },
  {
    "objectID": "logistisk_regresjon.html#estimere-en-sannsynlighet",
    "href": "logistisk_regresjon.html#estimere-en-sannsynlighet",
    "title": "3  Logistisk regresjon",
    "section": "3.2 Estimere en sannsynlighet",
    "text": "3.2 Estimere en sannsynlighet\nNår utfallsvariabelen er binær (to verdier) kan man likevel bruke lineær regresjon. Det kalles da gjerne en lineær sannsynlighetsmodell.\n\nlm_est &lt;- lm(Attrition ~ Age , data = training)\nsummary(lm_est)\n\n\nCall:\nlm(formula = Attrition ~ Age, data = training)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.28444 -0.18737 -0.14576 -0.06256  0.99292 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  0.409254   0.044335   9.231  &lt; 2e-16 ***\nAge         -0.006934   0.001166  -5.948 3.65e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.355 on 1100 degrees of freedom\nMultiple R-squared:  0.03116,   Adjusted R-squared:  0.03027 \nF-statistic: 35.37 on 1 and 1100 DF,  p-value: 3.652e-09\n\n\nDette betyr at vi har estimert følgende regresjonsligning:\n\\[ \\hat{Attrition} = 0.409 -0.0069 \\cdot Age \\]\nVi kan da predikere for ulike aldre ved å første lage et nytt datasett med kun alder som variabel og de verdiene som finnes i datasettet, og så bruke ‘predict()’ på dette datasettet etterpå. Da kan vi også se resultatet for ulike aldre. Her er et eksempel:\n\nn_data &lt;- data.frame(Age = seq(18, 65))\nn_data$pred &lt;- predict(lm_est, newdata = n_data)\n\n\nggplot(training_p, aes(x=Age, y=Attrition))+ \n  geom_point()+ \n  geom_line(data =n_data, aes(x = Age, y = pred))\n\n\n\n\nMerk at det her er vist predikerte sannsynligheter litt utenfor omfanget av de opprinnelige dataene, dvs. opp til 65 år i stedet for bare til 60. Da får vi en negativ sannsynlighet. Dette er kanskje ikke så problematisk hvis man er nøye på å ikke tolke resultatene utenfor training-data. Men det kan jo hente nye data vil ha slike verdier. Det blir mer komplisert hvis det er mange prediktorer og kompliserte modeller. En ting er om de predikerte sannsynlighetene blir lavere enn 0 eller høyere enn 1, men vi vil uansett forvente at stigningstallet vil avta når det nærmer seg disse grenseverdiene.\nDen viktigste ulempen med lineære sannsynlighetsmodeller er altså at modellen da kan predikere sannsynligheter lavere enn 0 og høyere enn 1. Når man er mest interessert i \\(\\beta\\) er det ikke sikkert det er så nøye. Men når vi er interessert i \\(\\hat{y}\\) kan det derimot være viktig."
  },
  {
    "objectID": "logistisk_regresjon.html#logistisk-regresjon-i-r",
    "href": "logistisk_regresjon.html#logistisk-regresjon-i-r",
    "title": "3  Logistisk regresjon",
    "section": "3.3 Logistisk regresjon i R",
    "text": "3.3 Logistisk regresjon i R\nLogistisk regresjon har det til felles med lineær regresjon at utfallet er en lineær spesifikasjon.\n\\[  log( \\frac{\\pi}{1-\\pi}) = \\alpha + \\beta X \\]\nVenstresiden av ligningen kalles en logit, der \\(\\pi\\) er en sannsynlighet. Uttrykket \\(\\frac{\\pi}{(1-\\pi)}\\) er en odds, som er et forholdstall mellom sannsynligheten for at utfallet skjer mot sannsynligheten for det motsatte. Tolkningen av \\(\\beta\\) er da en endring av odds på logaritisk skala. Hvis man eksponensierer \\(\\beta\\) er den da tolkbar som en oddsrate.\nSom du nå sikkert skjønner så er altså tolkningen av regresjonskoeffisientene nokså krøkete å tolke substansielt for de fleste av oss. Det kan i seg selv være et argument mot å bruke logistisk regresjon i en del sammenhenger.\nMen man kan regne om til sannsynligheter som er vesentlig enklere å forstå. Særlig hvis man ikke er så interessert i tolkningen av \\(\\beta\\), men prediksjon av \\(\\pi\\).\nLigningen kan da skrives om slik at venstresiden av ligningen blir en sannsynlighet direkte:\n\\[ \\hat \\pi = \\frac{e^{\\alpha + \\beta X}}{1 + e^{\\alpha + \\beta X}} \\]\nEn relativt enkel omregning av regresjonsresultatet gir altså en sannynlighet. Denne sannsynligheten kan vi da bruke til klassifikasjon hvis det er formålet med analysen. Hvis utfallsvariabelen har to kategorier, så er en nærliggende mulighet å klassifisere til den gruppen hver person mest sannsynlig tilhører. Altså: de som har $ = P(y = 1) &gt; 0.5$ tilhører den ene gruppen og resten i den andre gruppen.\nLogistisk regresjon kan dessuten håndtere utfall med flere enn to kategorier, noe OLS ikke kan. Vi bruker derfor logistisk regresjon når det er kategoriske utfall. I andre sammenhenger vil folk hevde at OLS er bedre å bruke (av diverse grunner), men i denne sammenhengen er logistisk regresjon som hovedregel å foretrekke over OLS for kategoriske utfall.\nHer er et eksempel på hvordan estimere enkel logistisk regresjon i R:\n\nest_logit &lt;- glm(Attrition ~ Age, data = training, family = \"binomial\")\nsummary(est_logit)\n\n\nCall:\nglm(formula = Attrition ~ Age, family = \"binomial\", data = training)\n\nCoefficients:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  0.41516    0.36402   1.140    0.254    \nAge         -0.06026    0.01050  -5.741 9.43e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 944.39  on 1101  degrees of freedom\nResidual deviance: 907.48  on 1100  degrees of freedom\nAIC: 911.48\n\nNumber of Fisher Scoring iterations: 5\n\n\nEn penere output kan gis med ‘gtsummary’ på samme måte som for OLS slik:\n\ntbl_regression(est_logit)\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      log(OR)1\n      95% CI1\n      p-value\n    \n  \n  \n    Age\n-0.06\n-0.08, -0.04\n&lt;0.001\n  \n  \n  \n    \n      1 OR = Odds Ratio, CI = Confidence Interval\n    \n  \n\n\n\n\nHvordan plotte slike data? Bruk geom_jitter eller geom_point. Å legge til en regresjonslinje har brukte vi geom_smooth(). Med stat_smoot() kan vi spesifisere andre typer regresjonsmodeller, herunder logistisk regresjon.\n\nggplot(training, aes(x=Age, y=Attrition))+ \n  geom_point(alpha=.3)+ \n  stat_smooth(method=\"glm\", method.args=list(family=\"binomial\"), se=FALSE, col=\"red\") \n\n\n\n\nDu synes sikkert dette plottet ser litt rart ut. Bytt ut geom_point() med følgende: geom_jitter(height = .02, alpha=.3) så skal du få omtrent følgende resultat:\n\nggplot(training, aes(x=Age, y=Attrition))+ \n  geom_jitter(height = .02, alpha=.3)+ \n  stat_smooth(method=\"glm\", method.args=list(family=\"binomial\"), se=FALSE, col=\"red\") \n\n\n\n\nDet ser muligens fremdels rart ut, men litt tydeligere, kanskje.\nHer er en variant der andelen som slutter i jobben er regnet ut for hvert alderstrinn. Da er utfallsvariabelen en andel som er litt enklere å tolke når det plottes, og regresjonslinjen er den samme.\n\ntraining_p &lt;- training %&gt;% \n  group_by(Age) %&gt;% \n  summarise(Attrition = mean(Attrition == 1)) \nggplot(training_p, aes(x=Age, y=Attrition))+ \n  geom_point()+ \n  stat_smooth(method=\"glm\", method.args=list(family=\"binomial\"), se=FALSE, col=\"red\")"
  },
  {
    "objectID": "logistisk_regresjon.html#prediksjon",
    "href": "logistisk_regresjon.html#prediksjon",
    "title": "3  Logistisk regresjon",
    "section": "3.4 Prediksjon",
    "text": "3.4 Prediksjon\nVi kan predikere med bruk av ‘predict()’ som tidligere. Nå er det imidlertid viktig å presisere hva vi ønsker å predikere: \\(log( \\frac{\\pi}{(1-\\pi)})\\) eller \\(\\pi\\). Vi ønsker det siste fordi det er direkte tolkbart. Vi må da skrive ‘type = “response”’ som følger.\n\nattrition_pred &lt;- training %&gt;% \n  mutate(prob = predict(est_logit, type = \"response\"))\n\n\n3.4.1 ROC og AUC\n\nROC &lt;- roc( attrition_pred$Attrition, attrition_pred$prob )\n\nSetting levels: control = 0, case = 1\n\n\nSetting direction: controls &lt; cases\n\ndf &lt;- data.frame(Sensitivity = ROC$sensitivities, \n                 Specificity = ROC$specificities)\n\nggplot(df, aes(y = Sensitivity, x= (1-Specificity))) + \n  geom_line() + \n  geom_abline(intercept = 0, slope = 1, col = \"gray\")+\n  coord_equal()\n\n\n\n\nArea under the curve er 0.65."
  },
  {
    "objectID": "logistisk_regresjon.html#multippel-logistisk-regresjon",
    "href": "logistisk_regresjon.html#multippel-logistisk-regresjon",
    "title": "3  Logistisk regresjon",
    "section": "3.5 Multippel logistisk regresjon",
    "text": "3.5 Multippel logistisk regresjon\nVi kan estimere en multippel regresjon på tilsvarende måte som for lineær regresjon ved å legge til flere variable eller angi å bruke samtlige variable i datasettet med ‘Attrition ~ .’\n\nest_multlogit &lt;- glm(Attrition ~ ., data = training, family = \"binomial\")\nsummary(est_multlogit)\n\n\nCall:\nglm(formula = Attrition ~ ., family = \"binomial\", data = training)\n\nCoefficients:\n                                   Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                      -1.035e+01  4.542e+02  -0.023 0.981824    \nAge                              -3.565e-02  1.628e-02  -2.190 0.028495 *  \nBusinessTravelTravel_Frequently   1.628e+00  4.675e-01   3.482 0.000498 ***\nBusinessTravelTravel_Rarely       8.988e-01  4.267e-01   2.106 0.035192 *  \nDailyRate                        -3.117e-04  2.648e-04  -1.177 0.239034    \nDepartmentResearch & Development  1.203e+01  4.542e+02   0.026 0.978861    \nDepartmentSales                   1.239e+01  4.542e+02   0.027 0.978244    \nDistanceFromHome                  4.145e-02  1.300e-02   3.189 0.001428 ** \nEducation                        -1.376e-02  1.039e-01  -0.132 0.894627    \nEducationFieldLife Sciences      -8.013e-01  1.027e+00  -0.781 0.435083    \nEducationFieldMarketing          -2.129e-01  1.076e+00  -0.198 0.843199    \nEducationFieldMedical            -8.617e-01  1.028e+00  -0.838 0.401983    \nEducationFieldOther              -7.977e-01  1.098e+00  -0.727 0.467345    \nEducationFieldTechnical Degree    1.370e-01  1.048e+00   0.131 0.896014    \nEnvironmentSatisfaction          -4.957e-01  9.942e-02  -4.986 6.18e-07 ***\nGenderMale                        2.156e-01  2.149e-01   1.003 0.315665    \nHourlyRate                       -3.532e-03  5.385e-03  -0.656 0.511937    \nJobInvolvement                   -5.422e-01  1.452e-01  -3.734 0.000189 ***\nJobLevel                          1.864e-02  3.817e-01   0.049 0.961047    \nJobRoleHuman Resources            1.308e+01  4.542e+02   0.029 0.977028    \nJobRoleLaboratory Technician      1.531e+00  5.543e-01   2.762 0.005746 ** \nJobRoleManager                   -1.451e+00  1.269e+00  -1.144 0.252636    \nJobRoleManufacturing Director    -3.131e-01  6.086e-01  -0.514 0.606923    \nJobRoleResearch Director         -2.440e+00  1.244e+00  -1.961 0.049843 *  \nJobRoleResearch Scientist         3.417e-01  5.694e-01   0.600 0.548406    \nJobRoleSales Executive            3.595e-01  1.603e+00   0.224 0.822589    \nJobRoleSales Representative       1.518e+00  1.650e+00   0.920 0.357555    \nJobSatisfaction                  -3.169e-01  9.701e-02  -3.267 0.001087 ** \nMaritalStatusMarried              3.453e-01  3.135e-01   1.101 0.270697    \nMaritalStatusSingle               8.690e-01  4.056e-01   2.143 0.032140 *  \nMonthlyIncome                     8.613e-05  9.875e-05   0.872 0.383105    \nMonthlyRate                       8.922e-06  1.482e-05   0.602 0.547277    \nNumCompaniesWorked                1.721e-01  4.623e-02   3.722 0.000198 ***\nOverTimeYes                       1.877e+00  2.296e-01   8.174 2.98e-16 ***\nPercentSalaryHike                -6.102e-02  4.687e-02  -1.302 0.192953    \nPerformanceRating                 6.920e-01  4.794e-01   1.443 0.148883    \nRelationshipSatisfaction         -3.738e-01  9.827e-02  -3.804 0.000142 ***\nStockOptionLevel                 -3.059e-01  1.810e-01  -1.690 0.091064 .  \nTotalWorkingYears                -6.605e-02  3.580e-02  -1.845 0.065052 .  \nTrainingTimesLastYear            -2.129e-01  8.533e-02  -2.495 0.012582 *  \nWorkLifeBalance                  -2.150e-01  1.456e-01  -1.476 0.139869    \nYearsAtCompany                    6.067e-02  4.877e-02   1.244 0.213537    \nYearsInCurrentRole               -9.948e-02  5.569e-02  -1.786 0.074038 .  \nYearsSinceLastPromotion           2.052e-01  5.182e-02   3.960 7.50e-05 ***\nYearsWithCurrManager             -1.866e-01  6.072e-02  -3.073 0.002122 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 944.39  on 1101  degrees of freedom\nResidual deviance: 619.99  on 1057  degrees of freedom\nAIC: 709.99\n\nNumber of Fisher Scoring iterations: 14\n\n\n\n3.5.1 ROC og AUC\nFor å beregne ROC og AUC gjør vi tilsvarende som over med predict og angi type respons. Dette brukes så videre i ROC og AUC.\n\nattrition_pred &lt;- training %&gt;% \n  mutate(prob = predict(est_multlogit, type = \"response\")) \n\nFunksjonen roc() gjør utregningene som trengs for ROC-kurven basert på observert utfall og predikerte sannsynligheter (Hsieh 2008).\nOBS! Man må man angi data som første argument i funksjonen roc(), deretter observerte utfall og til sist predikert sannsynlighet. Rekkefølgen er viktig!\nDet går an å få ut plottet med en quick-and-dirty versjon med plot(ROC), men det blir penere med bruk av ggplot() slik som er gjort nedenfor. Det krever at man lager en data.frame først ved å plukke ut de relevante tallene fra ROC-objektet. (Men layout er strengt tatt ikke viktig i dette kurset).\n\nROC &lt;- roc(attrition_pred, Attrition, prob)\n\nSetting levels: control = 0, case = 1\n\n\nSetting direction: controls &lt; cases\n\ndf &lt;- data.frame(Sensitivity = ROC$sensitivities, \n                 Specificity = ROC$specificities)\n\nggplot(df, aes(y = Sensitivity, x= (1-Specificity))) + \n  geom_line() + \n  geom_abline(intercept = 0, slope = 1, col = \"gray\")+\n  coord_equal()\n\n\n\n\nVi kan da få rapportert arealet under kurven med auc() slik:\n\nauc(ROC)\n\nArea under the curve: 0.8675\n\n\nNår arealet under kurven (AUC) er 0.867 er det vesentlig bedre prediksjon enn den enkle modellen."
  },
  {
    "objectID": "logistisk_regresjon.html#testing-data",
    "href": "logistisk_regresjon.html#testing-data",
    "title": "3  Logistisk regresjon",
    "section": "3.6 Testing-data",
    "text": "3.6 Testing-data\nOvenfor er øvelsen gjort på training-data, men vi må sjekke på testing-dataene.\nFor å beregne ROC og AUC gjør vi tilsvarende som over med predict, men nå er det viktig å angi ‘newdata = …’ slik at prediksjonen gjøres på riktig datasett.\n\nattrition_test &lt;- testing %&gt;% \n  mutate(prob = predict(est_multlogit, newdata = testing, type = \"response\")) \n\nFunksjonen roc() gjør utregningene som trengs for ROC-kurven basert på observert utfall og predikerte sannsynligheter (Hsieh 2008).\nOBS! Man må man angi data som første argument i funksjonen roc(), deretter observerte utfall og til sist predikert sannsynlighet. Rekkefølgen er viktig!\nDet går an å få ut plottet med en quick-and-dirty versjon med plot(ROC), men det blir penere med bruk av ggplot() slik som er gjort nedenfor. Det krever at man lager en data.frame først ved å plukke ut de relevante tallene fra ROC-objektet. (Men layout er strengt tatt ikke viktig i dette kurset).\n\nROC_test &lt;- roc(attrition_test, Attrition, prob)\n\nSetting levels: control = No, case = Yes\n\n\nSetting direction: controls &lt; cases\n\ndf &lt;- data.frame(Sensitivity = ROC_test$sensitivities, \n                 Specificity = ROC_test$specificities)\n\nggplot(df, aes(y = Sensitivity, x= (1-Specificity))) + \n  geom_line() + \n  geom_abline(intercept = 0, slope = 1, col = \"gray\")+\n  coord_equal()\n\n\n\n\nVi kan da få rapportert arealet under kurven med auc() slik:\n\nauc(ROC_test)\n\nArea under the curve: 0.8397\n\n\nNår arealet under kurven (AUC) er 0.84. Kanskje litt overraskende, men dette like godt som for på training dataene. Dette altså selv om det er tydelige forskjeller på ROC-curvene som er plottet. AUC er altså arealet under kurven. Litt ulik form kan i prinsippet ha samme areal."
  },
  {
    "objectID": "logistisk_regresjon.html#klassifikasjon",
    "href": "logistisk_regresjon.html#klassifikasjon",
    "title": "3  Logistisk regresjon",
    "section": "3.7 Klassifikasjon",
    "text": "3.7 Klassifikasjon\nMen for et handlingsvalg må vi gjøre faktisk klassifisering. Det vi har estimert så langt er bare en sannsynlighet. Selve klassifiseringen krever at man tar et aktivt valg på en cut-off for hvem man tror faktisk slutter. La oss først se på fordelingen av sannsynligheter.\n\nggplot(attrition_test, aes(x = prob)) +\n  geom_histogram()\n\n\n\n\nVi kan bestemme oss for at et rimelig cut-off er 50/50, altså med sannsynlighet 0.5. Her gjøres en klassifisering for testing-datasettet, og lager en krysstabell med den klassifiserte etter prediksjon mot observert utfall. En slik krysstabell kalles altså en confusion matrix.\n\nattrition_test &lt;- attrition_test %&gt;% \n  mutate(attrition_class = as.factor(ifelse(prob &lt; .5, \"No\", \"Yes\")))\n\ntab &lt;- attrition_test %&gt;% \n  select(attrition_class, Attrition) %&gt;% \n  table()\n\ntab\n\n               Attrition\nattrition_class  No Yes\n            No  287  45\n            Yes  13  23\n\n\nHvis du nå lurer på om det spiller noen rolle om du har observert eller predikert i rader/kollonner, så gjør det ikke det. Det er bare to variable krysset mot hverandre. I dette tilfellet er det altså 23 personer som er gjettet riktig at vil slutte, men bare 23 av 68 av de som faktisk sluttet ble fanget opp. Det var 45 som ble feilaktig gjettet at ville slutte, men som altså ikke gjorde det.\nFor funksjonen table() spiller det en rolle hvilken rekkefølge variablene angis i select() rett før. Den først angitte gir radene og den andre kolonnene. Bytt om, så får du se.2\n\n3.7.1 Confusion matrix\nFra pakken ‘caret’ er det en funksjon for confusion matrix som regner ut masse greier for oss. (Vi skal bare bruke akkurat den funksjonen fra ‘caret’).\nMerk at confusionMatrix() kan angis på to måter, velg den andre for minst fare for feil:\n\n3.7.1.1 Angi hver vektor for seg\nEnten angi to vektorer hver for seg, der rekkefølgen er viktig. For sikkerhetsskyld kan du angi reference = ... for observert utfall, så regner den riktig.\n\nconfusionMatrix(reference = attrition_test$Attrition, attrition_test$attrition_class, positive = \"Yes\")\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  No Yes\n       No  287  45\n       Yes  13  23\n                                          \n               Accuracy : 0.8424          \n                 95% CI : (0.8011, 0.8781)\n    No Information Rate : 0.8152          \n    P-Value [Acc &gt; NIR] : 0.09925         \n                                          \n                  Kappa : 0.3605          \n                                          \n Mcnemar's Test P-Value : 4.691e-05       \n                                          \n            Sensitivity : 0.33824         \n            Specificity : 0.95667         \n         Pos Pred Value : 0.63889         \n         Neg Pred Value : 0.86446         \n             Prevalence : 0.18478         \n         Detection Rate : 0.06250         \n   Detection Prevalence : 0.09783         \n      Balanced Accuracy : 0.64745         \n                                          \n       'Positive' Class : Yes             \n                                          \n\n\n\n\n3.7.1.2 Angi tabell\nAngi krysstabellen som gjort over, med observert i kolonner og predikert i rader. Dette er kanskje det ryddigste.\n\nconfusionMatrix(tab, positive = \"Yes\")\n\nConfusion Matrix and Statistics\n\n               Attrition\nattrition_class  No Yes\n            No  287  45\n            Yes  13  23\n                                          \n               Accuracy : 0.8424          \n                 95% CI : (0.8011, 0.8781)\n    No Information Rate : 0.8152          \n    P-Value [Acc &gt; NIR] : 0.09925         \n                                          \n                  Kappa : 0.3605          \n                                          \n Mcnemar's Test P-Value : 4.691e-05       \n                                          \n            Sensitivity : 0.33824         \n            Specificity : 0.95667         \n         Pos Pred Value : 0.63889         \n         Neg Pred Value : 0.86446         \n             Prevalence : 0.18478         \n         Detection Rate : 0.06250         \n   Detection Prevalence : 0.09783         \n      Balanced Accuracy : 0.64745         \n                                          \n       'Positive' Class : Yes"
  },
  {
    "objectID": "logistisk_regresjon.html#hvor-feil-kan-man-ta",
    "href": "logistisk_regresjon.html#hvor-feil-kan-man-ta",
    "title": "3  Logistisk regresjon",
    "section": "3.8 Hvor feil kan man ta?",
    "text": "3.8 Hvor feil kan man ta?\nI klassifiseringen over er det gjort et klart valg for hvem man tror faktisk vil slutte i jobben eller ikke. Det er selvsagt slik at noen er mer sannsynlige vil slutte enn andre, men ingen har 0 sannsynlighet. Ingen har 1 heller, for den saks skyld. Det er altså usikkerhet. Men hvis vi skal gjøre et tiltak, så må vi ta det valget!\nHvis vi gjør klassifiseringen på 0.5 som over, så betyr jo det at vi synes begge feil er like viktige: Falske positive eller falske negative. Hvis det er et langt større problem at folk slutter enn at noen f.eks. får tilbud om goder eller ekstra oppfølging etc, så kan det hende cut-off skal settes lavere? Da får man flere sanne positive, men også flere feil. Det kan det jo være verd, men kommer jo an på hva konsekvensene. Vi kommer tilbake til dette, men test gjerne ut selv med ulik cut-off og se hvordan resultatene endrer seg."
  },
  {
    "objectID": "logistisk_regresjon.html#oppgaver",
    "href": "logistisk_regresjon.html#oppgaver",
    "title": "3  Logistisk regresjon",
    "section": "3.9 Oppgaver",
    "text": "3.9 Oppgaver\nDisse oppgavene vil være ganske tilsvarende som for oppgavene med lineær regresjon. Men du skal nå bruke logistisk regresjon med tilhørende teknikker og vurderinger.\n\nExercise 3.1 Gå gjennom eksempelet over og repliker disse analysene slik at du ser at du skjønner hvordan det fungerer.\n\n\nExercise 3.2 Velg et datasettet og formuler hva en prediksjonsmodell kan kunne brukes til. Se for deg at tiltak du foreslår vil altså ha faktiske konsekvenser, så gjør en vurdering av hvorvidt feilprediksjoner vil være problematiske og i så fall på hvilken måte. Vurder mulighetene for feil opp mot gevinst ved riktig prediksjon.\nMerk: det er ikke viktig at anvendelsen skal være realistisk, men du må alltid ta konsekvensen i vurderingene.\n\n\nExercise 3.3 Last inn valgte datasett og splitt i et training og et testing datasett. Sett splitten ved .70. Bruk training-data til å gjøre deg kjent med dataene og estimere modellene. Ikke bruk testing-dataene inntil du får beskjed om det.\n\n\nExercise 3.4 Gjør deg kjent med innholdet i disse training-dataene. Du kan gjøre f.eks. følgende:\n\nBruk glimpse() og skim() til å få oversikt over innholdet i datasettet\nHvis det er noen variable du ikke kommer til å bruke, slett gjerne disse med en gang\nLag noen tabeller og plot som viser hvordan utfallsvariabelen er fordelt etter andre variable\n\n\n\nExercise 3.5 Estimer flere logistiske regresjonsmodeller med et fåtall prediktorer. Gjør et utvalg av de variablene du mener er mest relevant for å forklare utfallet. Estimer flere regresjonsmodeller for å predikere utfallet, og sammenlign hvor gode prediksjoner disse gir. Mest relevante statistikk er AUC og ROC-curve.\n\nVelg ut tre forklaringsvariable og estimer en regresjonsmodell\nEstimer en ny modell med alle variable i datasettet\nEstimer en ny modell og inkluder noen få polynomer og/eller interaksjonsledd\nGjør et automatisk modellsøk\n\nLag gjerne noen plot av ROC-curve for i hvert fall noen av modellene slik at du får en følelse med hva AUC egentlig betyr. Plot også predikert verdi mot observert verdi og gjør en vurdering av RMSE.\n\n\nExercise 3.6 I forrige oppgave brukte du training-datasettet til både å estimere modellene og vurdere resultatet. Nå skal du bruke testing-datasettet til å vurdere de samme resultatene. Dette gjør du ved å predikere på testing-datasettet og regne ut AUC for disse dataene. For hver modell i forrige oppgave, gjør som følger:\n\nPrediker utfallet på testing-datasettet\nRegn ut AUC\nHvor stor er endringen i AUC er fra resultatene når du brukte training-datasettet?\n\nVurdering: En mer komplisert modell beskriver dataene bedre. Men er det like stor endring i AUC og RMSE for enkle og mer kompliserte modeller? Beskriv hva du ser og gi en forklaring.\n\n\nExercise 3.7 Når over har predikert en sannsynlighet og regnet ut AUC har du ennå ikke tatt noen avgjørelse. Bestem deg for et grenseverdi for når du vil klassifisere som det ene eller andre. (Alså: ved hvilken sannsynlighet). Gjør så en klassifikasjon og lag en confusion matrix. Gi en vurdering av resultatet.\n\n\n\n\n\n\n\nHsieh, John. 2008. “Receiver Operating Characteristic (ROC) Curve.” In Encyclopedia of Epidemiology, 895–98. Thousand Oaks, California: Sage. https://doi.org/10.4135/9781412953948."
  },
  {
    "objectID": "logistisk_regresjon.html#footnotes",
    "href": "logistisk_regresjon.html#footnotes",
    "title": "3  Logistisk regresjon",
    "section": "",
    "text": "Her kunne man jo også tenke seg at den gode lederen har en dialog med de ansatte og fanger opp deres frustrasjoner og behov slik at maskinell prediksjon ikke trengs. Det er jo også en form for prediksjon med kvalitative data! Så her er vi i en setting der dette ikke fungerer eller det er så store forhold at en kvalitativ tilnærming ikke er praktisk mulig eller noe sånt.↩︎\ntable() kan forsåvidt også brukes ved å ani hver vektor direkte. Rekkefølgen har samme betydning da↩︎"
  }
]