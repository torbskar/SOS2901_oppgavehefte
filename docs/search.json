[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SOS2901 Maskinlæring for samfunnsvitere",
    "section": "",
    "text": "Introduksjon\nDette dokumentet gir en oversikt over hva vi skal dekke i løpet av semesteret. Det lages delvis underveis, så det vil bli oppdateringer jevnlig.\n(Dessuten skriver jeg disse oppgavene i Quarto som jeg ikke er så god i, så jeg prøver meg litt frem. Det kan derfor hende layout og andre ting endres underveis. Bær over med meg!)\nHvert kapittel i dette heftet starter med en gjennomgang av aktuell teknikk og de kodene som trengs for å gjøre det dere skal. Det vises gjennom eksempler med et datasett.\nAlle datasettene vi skal bruke finner dere imidletid i Canvas under fanen for Filer. Last de ned til egen masking for å jobbe med dem. Hver uke skal du gjøre følgende:\nForberedelse til undervisning Til hver undervisningsgang skal du ha forberedt to ting:"
  },
  {
    "objectID": "bagging.html",
    "href": "bagging.html",
    "title": "6  Bagging",
    "section": "",
    "text": "Code\n# Kilde: https://www.statology.org/bagging-in-r/ \n\nlibrary(e1071)       #for calculating variable importance\nlibrary(caret)       #for general model fitting\nlibrary(rpart)       #for fitting decision trees\nlibrary(ipred)       #for fitting bagged decision trees\n\ncredit <- read.csv(\"../data/credit.csv\", stringsAsFactors = TRUE) \n\n\n\n\n\nExercise 7.1 Bruk bagging til å forbedre prediksjonene. Bruk samme formel, men bygg 150 trær.\n\n\n\nSolution. \n\nCode\nfmla <- default ~ age + amount + percent_of_income + purpose + employment_duration + housing \n\nfmla\n\n\ndefault ~ age + amount + percent_of_income + purpose + employment_duration + \n    housing\n\n\nCode\nset.seed(1)\nbag <- bagging(\n  formula = fmla,\n  data = credit,\n  nbagg = 150,   \n  coob = TRUE,\n  control = rpart.control(minsplit = 2, cp = 0)\n)\nbag\n\n\n\nBagging classification trees with 150 bootstrap replications \n\nCall: bagging.data.frame(formula = fmla, data = credit, nbagg = 150, \n    coob = TRUE, control = rpart.control(minsplit = 2, cp = 0))\n\nOut-of-bag estimate of misclassification error:  0.342"
  },
  {
    "objectID": "randomForest.html",
    "href": "randomForest.html",
    "title": "7  Random forest",
    "section": "",
    "text": "Random forest bruker klassifikasjonstrær og bagging som byggestener. I prinsippet er det “bagged trees”, men i stedet for å bagge samme type trær, så gjøres det en endring i hvert tre."
  },
  {
    "objectID": "randomForest.html#tuning-av-random-forest",
    "href": "randomForest.html#tuning-av-random-forest",
    "title": "7  Random forest",
    "section": "7.2 Tuning av random forest",
    "text": "7.2 Tuning av random forest\nDet som faktisk endrer resultatene en god del er sampling prosedyren, altså hvor mange observasjoner som trekkes til å bygge hvert tre. I utgangspunktet trekkes 70% av hele utvalget. Men ved å bruke argumentet sampsize = ... kan vi angi en annen andel. Hvis vi angir to tall er det antallet som trekkes fra hver kategori i utfallsvariabelen. Vi kan altså angi hvor mange som trekkes av de med og uten tilbakefall, men disse tallene bør ikke settes større enn 70% av hver kategori. I disse dataene er det 2809 med tilbakefall og 3364 uten tilbakefall. Vi kan da velge å trekke maks 1900 fra gruppen med tilbakefall.\nHensikten med å gjøre dette er at hvis det er et mindretall som har tilbakefall, så blir hvert tre bygget med mer informasjon om ikke-residivistene enn residivistene. Hvis vi vekter opp residivistene, så får disse større inflytelse på hvert tre. Dermed vil dette også påvirke resultatet. Det er imidlertid vanskelig å vite helt sikkert hvordan det vil slå ut, så man må prøve seg litt frem. Noen ganger vil man veie gruppene likt, andre ganger ulikt. Her er et eksempel der de veies likt:\n\n\nCode\nset.seed(4356)\nrf3 <- randomForest(Two_yr_Recidivism ~ . , \n                    sampsize = c(1900, 1900),\n                    data = compas)\nrf3\n\n\n\nCall:\n randomForest(formula = Two_yr_Recidivism ~ ., data = compas,      sampsize = c(1900, 1900)) \n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 32.73%\nConfusion matrix:\n     0    1 class.error\n0 2321 1042   0.3098424\n1  978 1831   0.3481666\n\n\nHer er et eksempel der de veies ulikt:\n\n\nCode\nset.seed(4356)\nrf3 <- randomForest(Two_yr_Recidivism ~ . , \n                    sampsize = c(1000, 1900),\n                   data = compas)\nrf3\n\n\n\nCall:\n randomForest(formula = Two_yr_Recidivism ~ ., data = compas,      sampsize = c(1000, 1900)) \n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 41.15%\nConfusion matrix:\n     0    1 class.error\n0 1170 2193   0.6520963\n1  347 2462   0.1235315\n\n\nDet viktige nå er at feilratene for falske positive og falske negative blir vesentlig forskjellig! Det betyr at ved hvordan vi estimerer modellen kan vi legge sterke føringer på resultatet. Vi bør derfor ta stilling til på forhånd hvilke feilrater vi er villig til å akseptere - og hvorvidt de to typer feil er like ille eller ikke. Det er dette Berk (2016) kaller asymetriske kostnader og må vurderes i henhold til konsekvenser av hva prediksjonen skal brukes til.\nPredikere for nye data:\n\n\nCode\ncompas_p <- compas %>% \n  mutate(pred_rf = predict(rf, newdata=compas))\n\n\nConfusion matrix:\n\n\nCode\nconfusionMatrix(compas_p$pred_rf, compas_p$Two_yr_Recidivism, positive=\"1\")\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 2595 1156\n         1  768 1653\n                                          \n               Accuracy : 0.6883          \n                 95% CI : (0.6765, 0.6998)\n    No Information Rate : 0.5449          \n    P-Value [Acc > NIR] : < 2.2e-16       \n                                          \n                  Kappa : 0.3642          \n                                          \n Mcnemar's Test P-Value : < 2.2e-16       \n                                          \n            Sensitivity : 0.5885          \n            Specificity : 0.7716          \n         Pos Pred Value : 0.6828          \n         Neg Pred Value : 0.6918          \n             Prevalence : 0.4551          \n         Detection Rate : 0.2678          \n   Detection Prevalence : 0.3923          \n      Balanced Accuracy : 0.6800          \n                                          \n       'Positive' Class : 1"
  },
  {
    "objectID": "randomForest.html#oppgaver",
    "href": "randomForest.html#oppgaver",
    "title": "7  Random forest",
    "section": "7.3 Oppgaver",
    "text": "7.3 Oppgaver\n\nExercise 7.1 Bruk datasettet credit som i forrige oppgave.\n\nBruk random forest til å gjøre en tilsvarende klassifisering som du gjorde med klassifikasjonstre. Bruk default instillinger i randomForest().\nBruk predict() til å klassifisere\nLag en confusion matrix med table() og gjenta med confusionMatrix()\nGjør en vurdering av resultatet og sammenlign med resultat fra klassifikasjonstre\n\n\n\nExercise 7.2 Gjenta oppgave 1, men se om du kan justere modellen til et mer tilfredsstillende resultat. Gjør deg først opp en mening om hvordan du vil at confusion matrix skal se ut (f.eks. cost-ratio) og prøv å nærme deg dette. Bruk parameterne sampsize, mtry og ntree.\n\n\nExercise 7.3 Tolk random forest a) Hvilke variable har størst prediktiv verdi? Lag et variable importance plot og gi en tolkning. a) Velg noen av variablene (gjerne f.eks. de med størst prediktiv verdi) og lag partial dependence plot.\n\n\nExercise 7.4 Datafilen credit_kunder.csv inneholder data om to lånesøkere: Ola Normann og Kari Hansen. Skal banken gi dem lån? Bruk foretrukne modell fra forrige oppgave. Hvis du virkelig vil at begge skal få lån kan du kanskje justere modellen? Legge til/fjerne variable fra formelen og justere tuning parametrene. Prøv deg frem."
  },
  {
    "objectID": "fairness.html",
    "href": "fairness.html",
    "title": "8  Fairness",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(randomForest)\nlibrary(caret)\nlibrary(fairness)\n\n\nCompas er et risikoverktøy brukt av amerikansk politi i flere stater som benyttes på individnivå. Bruken av dette verktøyet har vært kontroversielt i flere år og kraftig kritisert av flere. En viktig grunn er at prediksjonene slår forskjellig ut for ulike grupper og er slik sett “biased” mot bl.a. svarte borgere. Resultatet er at de blir mer utsatt for politiets oppmerksomhet enn andre.1 Et datasett er gjort tilgjengelig av Propublica her som vi skal bruke.\n\n\nCode\ncompas <- readRDS(\"../data/compas.rds\")\n\nglimpse(compas)\n\n\nRows: 6,172\nColumns: 7\n$ Two_yr_Recidivism    <fct> 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1…\n$ Number_of_Priors     <int> 0, 0, 4, 0, 14, 3, 0, 0, 3, 0, 0, 1, 7, 0, 3, 6, …\n$ Age_Above_FourtyFive <fct> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ Age_Below_TwentyFive <fct> 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Misdemeanor          <fct> 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0…\n$ Ethnicity            <fct> Other, African_American, African_American, Other,…\n$ Sex                  <fct> Male, Male, Male, Male, Male, Male, Female, Male,…\n\n\nVi tilpasser først en random forest modell.\n\n\nCode\nset.seed(4356)\nglimpse(compas)\n\n\nRows: 6,172\nColumns: 7\n$ Two_yr_Recidivism    <fct> 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1…\n$ Number_of_Priors     <int> 0, 0, 4, 0, 14, 3, 0, 0, 3, 0, 0, 1, 7, 0, 3, 6, …\n$ Age_Above_FourtyFive <fct> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ Age_Below_TwentyFive <fct> 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Misdemeanor          <fct> 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0…\n$ Ethnicity            <fct> Other, African_American, African_American, Other,…\n$ Sex                  <fct> Male, Male, Male, Male, Male, Male, Female, Male,…\n\n\nCode\nrf <- randomForest(Two_yr_Recidivism ~ .,\n                   #importance = TRUE,\n                    data = compas)\n\n\nLager en prediksjon i nytt datasett\n\n\nCode\ncompas_p <- compas %>% \n  mutate(pred_rf = predict(rf))  \n\n\nConfusion matrix\n\n\nCode\nconfusionMatrix(compas_p$pred_rf,\n                compas_p$Two_yr_Recidivism, positive=\"1\")\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 2462 1132\n         1  901 1677\n                                          \n               Accuracy : 0.6706          \n                 95% CI : (0.6587, 0.6823)\n    No Information Rate : 0.5449          \n    P-Value [Acc > NIR] : < 2.2e-16       \n                                          \n                  Kappa : 0.3313          \n                                          \n Mcnemar's Test P-Value : 3.378e-07       \n                                          \n            Sensitivity : 0.5970          \n            Specificity : 0.7321          \n         Pos Pred Value : 0.6505          \n         Neg Pred Value : 0.6850          \n             Prevalence : 0.4551          \n         Detection Rate : 0.2717          \n   Detection Prevalence : 0.4177          \n      Balanced Accuracy : 0.6645          \n                                          \n       'Positive' Class : 1               \n                                          \n\n\nSplitter datasettet i to etter kjønn. Her for menn.\n\n\nCode\ncompas_1 <- compas_p %>% \n  filter(Sex == \"Male\")\n\n\nConfusion matrix for menn\n\n\nCode\nconfusionMatrix(compas_1$pred_rf,\n                compas_1$Two_yr_Recidivism, positive=\"1\")\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 1807  897\n         1  794 1499\n                                          \n               Accuracy : 0.6616          \n                 95% CI : (0.6483, 0.6747)\n    No Information Rate : 0.5205          \n    P-Value [Acc > NIR] : < 2e-16         \n                                          \n                  Kappa : 0.3209          \n                                          \n Mcnemar's Test P-Value : 0.01312         \n                                          \n            Sensitivity : 0.6256          \n            Specificity : 0.6947          \n         Pos Pred Value : 0.6537          \n         Neg Pred Value : 0.6683          \n             Prevalence : 0.4795          \n         Detection Rate : 0.3000          \n   Detection Prevalence : 0.4589          \n      Balanced Accuracy : 0.6602          \n                                          \n       'Positive' Class : 1               \n                                          \n\n\nSplitter datasettet i to etter kjønn. Her for kvinner.\n\n\nCode\ncompas_2 <- compas_p %>% \n  filter(Sex == \"Female\")\n\n\nConfusion matrix for kvinner\n\n\nCode\nconfusionMatrix(compas_2$pred_rf,\n                compas_2$Two_yr_Recidivism, positive=\"1\")\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 655 235\n         1 107 178\n                                         \n               Accuracy : 0.7089         \n                 95% CI : (0.682, 0.7348)\n    No Information Rate : 0.6485         \n    P-Value [Acc > NIR] : 6.251e-06      \n                                         \n                  Kappa : 0.3128         \n                                         \n Mcnemar's Test P-Value : 6.539e-12      \n                                         \n            Sensitivity : 0.4310         \n            Specificity : 0.8596         \n         Pos Pred Value : 0.6246         \n         Neg Pred Value : 0.7360         \n             Prevalence : 0.3515         \n         Detection Rate : 0.1515         \n   Detection Prevalence : 0.2426         \n      Balanced Accuracy : 0.6453         \n                                         \n       'Positive' Class : 1              \n                                         \n\n\nBruker funksjoner i fairness-pakken til å gjøre det samme:\n\n\nCode\nacc <- acc_parity(data = compas_p, \n                  outcome      = 'Two_yr_Recidivism', \n                  group        = 'Sex',\n                  preds        = 'pred_rf', \n                  base         = 'Female')\nacc$Metric\n\n\n                      Female        Male\nAccuracy           0.7089362    0.661597\nAccuracy Parity    1.0000000    0.933225\nGroup size      1175.0000000 4997.000000\n\n\nHer er en grafisk fremstilling av ACC\n\n\nCode\nacc$Metric_plot"
  },
  {
    "objectID": "fairness.html#flere-mål-på-fairness",
    "href": "fairness.html#flere-mål-på-fairness",
    "title": "8  Fairness",
    "section": "8.2 Flere mål på fairness",
    "text": "8.2 Flere mål på fairness"
  },
  {
    "objectID": "fairness.html#tuning-til-mer-fairness",
    "href": "fairness.html#tuning-til-mer-fairness",
    "title": "8  Fairness",
    "section": "8.3 Tuning til mer fairness",
    "text": "8.3 Tuning til mer fairness"
  },
  {
    "objectID": "fairness.html#oppgaver",
    "href": "fairness.html#oppgaver",
    "title": "8  Fairness",
    "section": "8.4 Oppgaver",
    "text": "8.4 Oppgaver"
  },
  {
    "objectID": "boosting.html",
    "href": "boosting.html",
    "title": "9  Boosting",
    "section": "",
    "text": "Det er flere typer boosting-algoritmer. Vi skal først se på adaptive boosting fordi det er den enkleste (og eldste) varianten. Deretter ser vi på gradient boosting fordi andre mer avanserte boosting-algoritmer er varianter av denne.\nKilde: https://towardsdatascience.com/how-to-select-between-boosting-algorithm-e8d1b15924f7"
  },
  {
    "objectID": "boosting.html#adaptive-boosting---adaboost",
    "href": "boosting.html#adaptive-boosting---adaboost",
    "title": "9  Boosting",
    "section": "9.1 Adaptive boosting - Adaboost",
    "text": "9.1 Adaptive boosting - Adaboost\nAdaptive boosting har et enkelt prinsipp: Først estimeres en modell, og deretter estimeres en ny modell der feilklassifikasjonene fra forrige modell vektes tyngre. Teorien tilsier at dette vil bedre klassifikasjonen. Så fortsetter den slik og estimerer nye vektede modeller til vi ikke får noen vesetnlig forbedring."
  },
  {
    "objectID": "boosting.html#gradient-boosting---gbm",
    "href": "boosting.html#gradient-boosting---gbm",
    "title": "9  Boosting",
    "section": "9.2 Gradient boosting - gbm",
    "text": "9.2 Gradient boosting - gbm\nGradient boosting er bygget på et tilsvarende prinsipp, men vekter ikke dataene. Derimot bruker den loss-funksjon i stedet."
  },
  {
    "objectID": "boosting.html#extreme-gradient-boosting---xgboost",
    "href": "boosting.html#extreme-gradient-boosting---xgboost",
    "title": "9  Boosting",
    "section": "9.3 Extreme gradient boosting - XGboost",
    "text": "9.3 Extreme gradient boosting - XGboost"
  },
  {
    "objectID": "unsupervised.html",
    "href": "unsupervised.html",
    "title": "11  Unsupervised learning",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(dendextend)\n\n\n\n---------------------\nWelcome to dendextend version 1.16.0\nType citation('dendextend') for how to cite the package.\n\nType browseVignettes(package = 'dendextend') for the package vignette.\nThe github page is: https://github.com/talgalili/dendextend/\n\nSuggestions and bug-reports can be submitted at: https://github.com/talgalili/dendextend/issues\nYou may ask questions at stackoverflow, use the r and dendextend tags: \n     https://stackoverflow.com/questions/tagged/dendextend\n\n    To suppress this message use:  suppressPackageStartupMessages(library(dendextend))\n---------------------\n\n\nAttaching package: 'dendextend'\n\nThe following object is masked from 'package:stats':\n\n    cutree\n\n\nCode\nlibrary(directlabels)"
  },
  {
    "objectID": "unsupervised.html#hierarkisk-klustering",
    "href": "unsupervised.html#hierarkisk-klustering",
    "title": "11  Unsupervised learning",
    "section": "11.1 Hierarkisk klustering",
    "text": "11.1 Hierarkisk klustering\n\nExercise 11.1 Last ned filen krim2016.RData fra Canvas. Dette er deler av dataene vi brukte i første seminar med kommunetall. Her er det anmeldt kriminalitet per 1000 innbyggere i kommuner i 2016.\n\nGjør en hierarkisk klusteranalsyse. Er det noen kommuner som skiller seg veldig fra de andre? Spiller det noen rolle hvilken type distance du setter?\nHvilke kommuner er de de klusterne som skiller seg ut?\nHva kjennetegner lovbruddsbildet i de ulike klustrene? Kan du tenke deg noen grunner til at akkurat disse stikker seg ut?\n\n\n\nSolution. Leser inn data om inntektsutvikling for ulike yrker fra 2001 til 2016\nDataene er i “bred” format. Det er slik vi vil ha det for clusteranalyse, men dårlig for å lage en graf.\n\n\nCode\nload(\"../data/oes.RData\")\n\ngathered_oes <- gather(data = df_oes, \n                       key = year, \n                       value = mean_salary, \n                       -occupation)\n\nggplot(gathered_oes, aes(x=as.numeric(year), y=mean_salary, col = occupation))+\n  geom_line()\n\n\n\n\n\nCode\ndist_oes <- dist(df_oes[,-1], method = \"euclidian\") # calculate distances \n\nhc_oes <- hclust(dist_oes, method = \"single\")  # minste avstand\n\nhc_oes <- hclust(dist_oes, method = \"complete\") # lengste avstand\n\nhc_oes <- hclust(dist_oes, method = \"average\") #gjennomsnittlig avstand\n\npar(mar=c(10,4,2,2))  # Endre marginer for base-plot\n\ndend_oes <- as.dendrogram(hc_oes) #Create a dendrogram object\ndend_colored <- color_branches(dend_oes, h = 100000)\nplot(dend_colored)\n\n# Illustrer mulige cutoff - legger linjer oppå eksisterende plot\nabline(h=100000, col=\"red\", lwd=1.5)  # Viser cut ved h=100000\nabline(h=10000, col=\"red\", lwd=1.5)   # Viser cut ved h=10000\n\n\n\n\n\nCode\n# Henter ut cluster ved valgt h\ncluster <- cutree(hc_oes, h=100000)\n#cluster <- cutree(hc_oes, k=3)\ntable(cluster)\n\n\ncluster\n 1  2  3 \n 2  5 15 \n\n\nCode\n# Legger til vektoren cluster til opprinnelige data\nhclust_oes <- mutate(df_oes, cluster = cluster)\n\nhead(hclust_oes)\n\n\n                 occupation  2001  2002  2003  2004  2005  2006  2007   2008\n1                Management 70800 78870 83400 87090 88450 91930 96150 100310\n2       Business Operations 50580 53350 56000 57120 57930 60000 62410  64720\n3          Computer Science 60350 61630 64150 66370 67100 69240 72190  74500\n4  Architecture/Engineering 56330 58020 60390 63060 63910 66190 68880  71430\n5 Life/Physical/Social Sci. 49710 52380 54930 57550 58030 59660 62020  64280\n6        Community Services 34190 34630 35800 37050 37530 39000 40540  41790\n    2010   2011   2012   2013   2014   2015   2016 cluster\n1 105440 107410 108570 110550 112490 115020 118020       1\n2  67690  68740  69550  71020  72410  73800  75070       2\n3  77230  78730  80180  82010  83970  86170  87880       2\n4  75550  77120  79000  80100  81520  82980  84300       2\n5  66390  67470  68360  69400  70070  71220  72930       2\n6  43180  43830  44240  44710  45310  46160  47200       3\n\n\nCode\n# vrenger dataene \"nedover\" for å plotte\ngathered_oes <- gather(data = hclust_oes,    # datasett\n                       key = year,           # navn på ny variabel, verdier hentes fra gamle variabelnavn\n                       value = mean_salary,  # navn på ny variabel med gamle variabelverdier\n                       -occupation, -cluster) # variable som skal beholdes / grupperes etter\nggplot(gathered_oes, aes(x = year, y = mean_salary, color = factor(cluster), group = occupation)) + \n  geom_line()"
  },
  {
    "objectID": "unsupervised.html#k-means-klustering",
    "href": "unsupervised.html#k-means-klustering",
    "title": "11  Unsupervised learning",
    "section": "11.2 K-means klustering",
    "text": "11.2 K-means klustering\n\nExercise 11.2 Gjenta analysen over med k-means clustering. Hvor mange klustre bør det være? Får du samme resultat?\n\n\n\nSolution. \n\nCode\n## K-means clustering med samme data \n\n# Eksempel ved å sette antall kluster til 3\n# I dette tilfellet bør vi få samme resultat\nkm_oes <- kmeans(dist_oes, centers = 3)\n\ntable(km_oes$cluster)\n\n\n\n1 2 3 \n7 7 8 \n\n\nCode\nkmclust_oes <- mutate(df_oes, cluster=km_oes$cluster)\n\n# Plotter\ngathered_kmoes <- gather(data = kmclust_oes,    # datasett\n                       key = year,           # navn på ny variabel, verdier hentes fra gamle variabelnavn\n                       value = mean_salary,  # navn på ny variabel med gamle variabelverdier\n                       -occupation, -cluster) # variable som skal beholdes / grupperes etter\nggplot(gathered_kmoes, aes(x = year, y = mean_salary, color = factor(cluster), group = occupation)) + \n  geom_line()\n\n\n\n\n\nCode\n### K-means clustering. Make a search\nwss <- 0\n# For 1 to 15 cluster centers\nfor (i in 1:5) {\n  km.out <- kmeans(dist_oes, centers = i, nstart=20)\n  # Save total within sum of squares to wss variable\n  wss[i] <- km.out$tot.withinss\n}\n\n# Plot total within sum of squares vs. number of clusters\nplot(1:5, wss, type = \"b\", \n     xlab = \"Number of Clusters\", \n     ylab = \"Within groups sum of squares\")\n# Marker \"albuen\" med en linje i plottet \nabline(v=2, col=\"red\")\n\n\n\n\n\nCode\noes <- readRDS(\"../data/oes.rds\")\n\n## Create final clustering\nkm_oes <- kmeans(oes, centers = 2, nstart=20)\ntable(km_oes$cluster)\n\n\n\n 1  2 \n 7 15 \n\n\nCode\nkmclust_oes <- mutate(df_oes, cluster=km_oes$cluster)\ngathered_kmoes <- gather(data = kmclust_oes,    # datasett\n                         key = year,           # navn på ny variabel, verdier hentes fra gamle variabelnavn\n                         value = mean_salary,  # navn på ny variabel med gamle variabelverdier\n                         -occupation, -cluster) # variable som skal beholdes / grupperes etter\nggplot(gathered_kmoes, aes(x = year, y = mean_salary, color = factor(cluster), group = occupation)) + \n  geom_line()"
  },
  {
    "objectID": "unsupervised.html#datareduksjon-med-principal-component-analysis-pca",
    "href": "unsupervised.html#datareduksjon-med-principal-component-analysis-pca",
    "title": "11  Unsupervised learning",
    "section": "11.3 Datareduksjon med principal component analysis (PCA)",
    "text": "11.3 Datareduksjon med principal component analysis (PCA)\n\n11.3.1 Multippel korrespondanseanalyse\nPCA har egentlig som forutsetning av variablene er kontinuerlige, og det er litt trøblete å bruke det på kategoriske variable. Men ofte har vi kategoriske variable.\nEn variant av PCA for kategoriske variable er korrespondanseanalyse, som i teorien altså skal være bedre enn PCA. I praksis er det imidlertid ikke nødvendigvis veldig stor forskjell (REF), så det er neppe stor skade skjedd hvis man bruker PCA likevel."
  },
  {
    "objectID": "randomForest.html#eksempel",
    "href": "randomForest.html#eksempel",
    "title": "7  Random forest",
    "section": "7.1 Eksempel",
    "text": "7.1 Eksempel\nLeser inn Compas-dataene.\n\n\nCode\ncompas <- readRDS(\"../data/compas.rds\")\nglimpse(compas)\n\n\nRows: 6,172\nColumns: 7\n$ Two_yr_Recidivism    <fct> 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1…\n$ Number_of_Priors     <int> 0, 0, 4, 0, 14, 3, 0, 0, 3, 0, 0, 1, 7, 0, 3, 6, …\n$ Age_Above_FourtyFive <fct> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n$ Age_Below_TwentyFive <fct> 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Misdemeanor          <fct> 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0…\n$ Ethnicity            <fct> Other, African_American, African_American, Other,…\n$ Sex                  <fct> Male, Male, Male, Male, Male, Male, Female, Male,…\n\n\nEstimerer random forest med alle variable\n\n\nCode\nset.seed(4356)\nrf <- randomForest(Two_yr_Recidivism ~ . , \n                    data = compas)\nrf\n\n\n\nCall:\n randomForest(formula = Two_yr_Recidivism ~ ., data = compas) \n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 32.94%\nConfusion matrix:\n     0    1 class.error\n0 2462  901   0.2679156\n1 1132 1677   0.4029904\n\n\nFølgende plot gir en oversikt over feilrater for random forest etter hvor mange trær. Det siste tallet til høyre i plottet er de feilratene som vises i output fra randomForest som vist over. Den svarte linjen er altså den totale feilraten, den grønne er falske positive, og den røde er falske negative. I utgangspunktet bruker random forest 500 trær (slik den er implementert i R). Dette plottet viser når resultatene stabiliserer seg. Kort sagt: Hvis linjene er ganske stabile mot til høyre i plottet har man nok trær. Hvis det har stabilisert seg før kunne man forsåvidt klart seg med færre trær. Hvis grafen er ganske humpete mot høyre i plottet, så kan man øke antall trær og se om det bedrer seg.\n\n\nCode\nplot(rf)\n\n\n\n\n\nPredikerer på samme datasett\n\n\nCode\ncompas_p <- compas %>% \n  mutate(pred_rf = predict(rf))\n\n\nLager enkel krysstabell med predikert mot observert (dvs confusion matrix)\n\n\nCode\ntable(compas_p$pred_rf, compas_p$Two_yr_Recidivism) \n\n\n   \n       0    1\n  0 2462 1132\n  1  901 1677\n\n\nLager bedre confusion matrix med alle øvrige utregninger. NB! Husk å presisere hva som er positiv verdi for at tallene skal blir riktig vei.\n\n\nCode\nconfusionMatrix(compas_p$pred_rf,\n                compas_p$Two_yr_Recidivism, positive=\"1\")\n\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction    0    1\n         0 2462 1132\n         1  901 1677\n                                          \n               Accuracy : 0.6706          \n                 95% CI : (0.6587, 0.6823)\n    No Information Rate : 0.5449          \n    P-Value [Acc > NIR] : < 2.2e-16       \n                                          \n                  Kappa : 0.3313          \n                                          \n Mcnemar's Test P-Value : 3.378e-07       \n                                          \n            Sensitivity : 0.5970          \n            Specificity : 0.7321          \n         Pos Pred Value : 0.6505          \n         Neg Pred Value : 0.6850          \n             Prevalence : 0.4551          \n         Detection Rate : 0.2717          \n   Detection Prevalence : 0.4177          \n      Balanced Accuracy : 0.6645          \n                                          \n       'Positive' Class : 1               \n                                          \n\n\nEstimerer på nytt og øker antall trær og lager nytt plot. Her er det lagt inn en linje ved 500 trær for å markere tilsvarende resultat som ovenfor. Merk at det endelige resultatet endrer seg noe og mer stabilt mot slutten enn før, men kanskje ikke veldig vesentlig bedre. Merk at vi ikke kan forvente at linjene blir helt flate, og bedring i den ene feilraten går gjerne på bekostning av den andre.\n\n\nCode\nset.seed(4356)\nrf1 <- randomForest(Two_yr_Recidivism ~ . , \n                    ntree = 1500, \n                   data = compas)\n\nplot(rf1)\nabline(v=500, col = \"gray\")\n\n\n\n\n\nVi kan justere resultatet med å endre antall variable som tas med i hver split (i hvert tre). I forrige eksempel valgte funksjonen å bruke kun to variable, men det kan settes til f.eks. fire. Merk at det er et poeng at det ikke skal være så mange variable i hver split! Dette endrer normalt ikke resultatene veldig mye.\n\n\nCode\nset.seed(4356)\nrf2 <- randomForest(Two_yr_Recidivism ~ . , \n                    mtry=4,\n                    data = compas)\nrf2\n\n\n\nCall:\n randomForest(formula = Two_yr_Recidivism ~ ., data = compas,      mtry = 4) \n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 4\n\n        OOB estimate of  error rate: 34.36%\nConfusion matrix:\n     0    1 class.error\n0 2608  755   0.2245019\n1 1366 1443   0.4862941\n\n\n\n7.1.1 Variable importance\nFor å få ut variable importance må dette settes i estimeringen med importance = TRUE. Det tar nå litt lengre tid å estimere, så med store datasett bør du vente med dette til du ellers er fornøyd med modellen.\n\n\nCode\nset.seed(4356)\nrf <- randomForest(Two_yr_Recidivism ~ . , \n                   importance = TRUE, \n                    data = compas)\nrf\n\n\n\nCall:\n randomForest(formula = Two_yr_Recidivism ~ ., data = compas,      importance = TRUE) \n               Type of random forest: classification\n                     Number of trees: 500\nNo. of variables tried at each split: 2\n\n        OOB estimate of  error rate: 32.42%\nConfusion matrix:\n     0    1 class.error\n0 2538  825   0.2453167\n1 1176 1633   0.4186543\n\n\nVi kan da plotte variable importance plot. Set type = 1 for at det skal vise gjennomsnittlig reduksjon i accuracy fremfor gini-koeffisienten. Endring i accuracy er lettest tolkbart og er oftest mest meningsfult.\n\n\nCode\nvarImpPlot(rf, type = 1)\n\n\n\n\n\nHer er det altså antall tidligere dommer som har størst betydning for prediksjon av tilbakefall, etterfulgt av alder og kjønn, og til sist om lovbruddet var en forseelse eller ikke.1\n\n\n7.1.2 Partial dependence\nHer må du velge hvilken variabel du ønsker å se på. Det er oftest de “viktigste variablene” fra variable importanc som er mest relevante å se på.\n\n\nCode\npartialPlot(rf, pred.data = compas, \n            x.var = Number_of_Priors, \n            which.class = \"1\")"
  },
  {
    "objectID": "grunnleggendeML.html",
    "href": "grunnleggendeML.html",
    "title": "3  Noen innledende metodiske begrep",
    "section": "",
    "text": "I standard samfunnsvitenskapelige metodekurs lærer man først og fremst teknikker for å beskrive data og statistisk inferens for å beskrive usikkerheten rundt estimatene. Avhengig av studiets øvrige design kan resultatene tolkes kausalt og/eller generalisere til en nærmere veldefinert populasjon.\nUsikkerhet beskrives typisk ved hjelp standardfeil, p-verdier og konfidensintervall tilhørende spesifikke statistiske tester. Dette innebærer at man bruker statistiske modeller for hvordan resultatene ville sett ut under spesifikke forutsetninger. Samplingfordelinger som normalfordelingen og en del andre tilsvarende fordelinger er derfor sentralt. De fleste teknikkene vi skal bruke i dette kurset er ikke statistiske modeller i samme forstand og det er ingen antakelser om samplingfordelinger. Standardfeil og konfidensintervall kan derfor ikke regnes ut. Usikkerhet og hvem resultatene gjelder for er også relevante for maskinlæring, men ikke helt på samme måte."
  },
  {
    "objectID": "grunnleggendeML.html#forklaringer-og-prediksjoner",
    "href": "grunnleggendeML.html#forklaringer-og-prediksjoner",
    "title": "3  Noen innledende metodiske begrep",
    "section": "3.1 Forklaringer og prediksjoner",
    "text": "3.1 Forklaringer og prediksjoner\nVi er i liten grad interessert i regresjonskoeffisienter, \\(\\beta\\), og tolkning av denne. Derimot er vi interessert i det predikerte utfallet \\(\\hat{y}_i\\)."
  },
  {
    "objectID": "grunnleggendeML.html#overfitting",
    "href": "grunnleggendeML.html#overfitting",
    "title": "3  Noen innledende metodiske begrep",
    "section": "3.2 Overfitting",
    "text": "3.2 Overfitting"
  },
  {
    "objectID": "grunnleggendeML.html#klassifikasjonsusikkerhet---grunnleggende-begreper",
    "href": "grunnleggendeML.html#klassifikasjonsusikkerhet---grunnleggende-begreper",
    "title": "3  Noen innledende metodiske begrep",
    "section": "3.3 Klassifikasjonsusikkerhet - grunnleggende begreper",
    "text": "3.3 Klassifikasjonsusikkerhet - grunnleggende begreper\n\n3.3.1 falske positive og negative\nNår vi predikerer et kategorisk utfall er det gjerne ett av utfallene vi primært er interessert i. Disse kalles positive og de andre er negative. Dette har ingenting å gjøre med om utfallet er bra eller dårlig å gjøre. Å predikere en sykdom vil være positivt og å være frisk vil være negativt. Å ha tilbakefall til kriminalitet vil være positivt og lovlydig vil være negativt.\nEn positiv prediksjon kan da være korrekt eller feil, og disse kalles da henholdsvis sanne eller falske positive. Tilsvarende kan en negaitv prediksjon være sann eller falsk.\n\n\n3.3.2 Confusion matrix\n\n\n3.3.3 Asymetriske kostnader"
  },
  {
    "objectID": "grunnleggendeML.html#rettferdighet-og-rimelighet",
    "href": "grunnleggendeML.html#rettferdighet-og-rimelighet",
    "title": "3  Noen innledende metodiske begrep",
    "section": "3.4 Rettferdighet og rimelighet",
    "text": "3.4 Rettferdighet og rimelighet\nI diskusjoner av anvendelser av maskinlæring står rettferdighet helt sentralt. Men det er ikke alltid like klart hva dette egentlig betyr utover at det er forskjellsbehandling. Tross alt er hele formålet med prediksjon å nettopp forskjellsbehandle, eller målrette som det også kan kalles.\n\n3.4.1 Fundamentale skjvheter i data\nSiden maskinlæring baserer seg på å lære av tilgjengelige data for å benytte det på nye tilfeller spiller det vesentlig rolle hvordan de opprinnelige dataene ble generert i utgangspunktet.\nEt velkjent eksempel er hvordan Amazon besluttet å slutte å bruke en algoritme for rekruttering fordi den systematisk valgte bort kvinner. Grunnen til at algoritmen gjorde dette var så enkelt som at dataene den var trent opp på var mannsdominert. Algoritmen hadde altså primært tilgang til informasjon om hvilke egenskaper som kjennetegnet talentfulle mannlige kandidater, som altså kan være forskjellige fra talentfulle kvinnelige kandidater.\nNår man skal ta en algoritme i bruk er det derfor helt avgjørende at man kan forsvare bruken av de dataene algoritmen er trent på. Kjente skjevheter kan i prinsippet motarbeides ved tuning (dette kommer vi tilbake til), men det er vanskelig å garantere at det er skjevheter man ikke har tenkt på.\n\n\n3.4.2 Urimelige feilrater\n\n\n3.4.3 Ulike feilrater på tvers av undergrupper"
  },
  {
    "objectID": "linear_regresjon.html#ols-i-r",
    "href": "linear_regresjon.html#ols-i-r",
    "title": "4  Lineær regresjon",
    "section": "4.1 OLS i R",
    "text": "4.1 OLS i R\nVi illustrerer lineær regresjon med et empirisk eksempel. Her skal vi bruke data for norske kommuner i 2016. La oss si at vi er interessert i hvordan antall voldshendelser per 1000 innbyggere vil endre seg i en kommune. Dette kunne være relevant for langtidsplanlegging av forebygging, politibemanning, helsetjenester osv. Det kan være et område som er i stor endring slik at befolkningssammensetningen forventes å endre seg og/eller det er endrede lokale økonomiske utsikter.\nFørst leser vi inn dataene og tar en titt på variabellisten.\n\n\nCode\nload(\"../data/kom_2016.RData\")\nglimpse(kom_2016)\n\n\nRows: 643\nColumns: 19\n$ kommune                 <chr> \"0101\", \"0104\", \"0105\", \"0106\", \"0111\", \"0119\"…\n$ year                    <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2015…\n$ bef_tot                 <int> 30328, 31802, 54192, 78159, 4480, 3613, 5346, …\n$ prop_unge_menn          <dbl> 0.11890003, 0.11533866, 0.11776646, 0.11705626…\n$ prop_kvinner_16_18      <dbl> 0.01869559, 0.01870952, 0.01967080, 0.01939636…\n$ prop_menn_16_18         <dbl> 0.01945397, 0.01911829, 0.01950472, 0.02020241…\n$ prop_menn_19_34         <dbl> 0.09944606, 0.09622036, 0.09826174, 0.09685385…\n$ prop_kvinner_19_34      <dbl> 0.09502770, 0.08993145, 0.09386994, 0.09366804…\n$ prop_shj_mottakere      <dbl> 0.03900686, 0.03631847, 0.02804842, 0.02552489…\n$ prop_shj_mottakere_6mnd <dbl> 0.013782643, 0.013018049, 0.011883673, 0.00996…\n$ gj_innt_17_34           <int> 243200, 235100, 250600, 244300, 229700, 237500…\n$ gj_innt_35_66           <int> 475800, 511100, 473400, 500700, 540200, 507300…\n$ gj_innt_alle            <int> 380500, 405300, 381400, 396600, 434400, 390600…\n$ lovb_ialt               <dbl> 108.8, 77.1, 66.5, 70.4, 59.2, 137.3, 66.8, 44…\n$ Orden                   <dbl> 18.7, 9.2, 9.6, 8.8, 4.2, 16.3, 24.7, 5.4, 9.1…\n$ Rusmiddellovbrudd       <dbl> 21.7, 14.6, 12.3, 10.3, 4.0, 29.9, 11.2, 3.9, …\n$ Trafikkovertredelse     <dbl> 14.2, 7.9, 9.6, 8.0, 5.1, 24.9, 7.9, 11.8, 8.2…\n$ Vold                    <dbl> 10.4, 8.1, 6.8, 7.4, 7.6, 5.3, 7.7, 5.4, 8.4, …\n$ lovb_annet              <dbl> 24.5, 10.3, 8.6, 10.1, 17.9, 49.3, 8.2, 8.3, 1…\n\n\nEn annen måte å få oversikt over dataene på er å bruke funksjonen skim(), som gir noe mer informasjon om fordelingen av hver enkelt variabel.\n\n\nCode\nskim(kom_2016)\n\n\n\nData summary\n\n\nName\nkom_2016\n\n\nNumber of rows\n643\n\n\nNumber of columns\n19\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n18\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nkommune\n0\n1\n4\n4\n0\n337\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1\n2015.49\n0.50\n2015.00\n2015.00\n2015.00\n2016.00\n2016.00\n▇▁▁▁▇\n\n\nbef_tot\n0\n1\n15435.13\n42870.98\n934.00\n3542.50\n6466.00\n14224.00\n658390.00\n▇▁▁▁▁\n\n\nprop_unge_menn\n0\n1\n0.12\n0.01\n0.08\n0.11\n0.12\n0.13\n0.17\n▁▇▆▂▁\n\n\nprop_kvinner_16_18\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.04\n▁▇▂▁▁\n\n\nprop_menn_16_18\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.04\n▁▇▂▁▁\n\n\nprop_menn_19_34\n0\n1\n0.10\n0.01\n0.07\n0.09\n0.10\n0.11\n0.16\n▁▇▃▁▁\n\n\nprop_kvinner_19_34\n0\n1\n0.09\n0.01\n0.06\n0.08\n0.09\n0.10\n0.15\n▂▇▃▁▁\n\n\nprop_shj_mottakere\n0\n1\n0.03\n0.01\n0.01\n0.02\n0.03\n0.03\n0.09\n▆▇▁▁▁\n\n\nprop_shj_mottakere_6mnd\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.03\n▇▆▁▁▁\n\n\ngj_innt_17_34\n0\n1\n262773.09\n29389.17\n164200.00\n245350.00\n262500.00\n278850.00\n453100.00\n▁▇▂▁▁\n\n\ngj_innt_35_66\n0\n1\n513294.40\n55707.02\n395800.00\n479450.00\n505000.00\n533950.00\n839900.00\n▅▇▁▁▁\n\n\ngj_innt_alle\n0\n1\n407392.69\n39794.06\n319400.00\n382500.00\n400900.00\n424850.00\n629200.00\n▃▇▂▁▁\n\n\nlovb_ialt\n0\n1\n51.12\n24.18\n16.50\n35.45\n46.80\n61.65\n234.40\n▇▃▁▁▁\n\n\nOrden\n0\n1\n5.74\n3.65\n1.10\n3.30\n4.80\n7.00\n31.30\n▇▂▁▁▁\n\n\nRusmiddellovbrudd\n0\n1\n8.40\n5.57\n0.90\n4.90\n7.20\n10.70\n61.00\n▇▁▁▁▁\n\n\nTrafikkovertredelse\n0\n1\n11.19\n11.50\n2.30\n6.10\n8.90\n13.00\n209.70\n▇▁▁▁▁\n\n\nVold\n0\n1\n5.58\n2.56\n1.50\n3.80\n5.00\n6.90\n26.90\n▇▃▁▁▁\n\n\nlovb_annet\n0\n1\n9.19\n4.41\n2.60\n6.70\n8.30\n10.45\n49.30\n▇▁▁▁▁\n\n\n\n\n\n\n4.1.1 Enkel lineær regresjon\nEn ganske åpenbar faktor som forklarer forekomsten av vold er andel unge menn i kommunen. Rett og slett fordi dette er den demografiske gruppen som begår mest vold - og kriminalitet generelt, faktisk. Hvis befolkningssammensetningen forventes å bli yngre vil det medføre flere unge menn, og da kan vi kanskje forvente at det blir flere voldshendelser bare av den grunn? Sammenhengen mellom unge menn og voldsrate kan estimeres med helt vanlig lineær regresjon.\nEn god start på de fleste empiriske analyser er å beskrive sammenhengen med et plot. Her legger vi på en lineær regresjonslinje med geom_smooth() der vi presiserer lineær modell med method = \"lm\" og lar være å ta med konfidensintervallet se = FALSE.\n\n\nCode\nggplot(kom_2016, aes(x = prop_unge_menn, \n                     y = Vold)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) \n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nCode\nest <- lm(Vold ~ prop_unge_menn, data=kom_2016)\nsummary(est)\n\n\n\nCall:\nlm(formula = Vold ~ prop_unge_menn, data = kom_2016)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.2293 -1.7014 -0.5256  1.2889 20.0062 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)     -0.9949     0.9562  -1.040    0.299    \nprop_unge_menn  54.7475     7.9243   6.909 1.18e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.469 on 641 degrees of freedom\nMultiple R-squared:  0.0693,    Adjusted R-squared:  0.06785 \nF-statistic: 47.73 on 1 and 641 DF,  p-value: 1.181e-11\n\n\nMed andre ord kan voldsraten beskrives som\n\\[ vold = -0.9949 + 54.7475 \\times ungeMenn  \\] Men vi har også sett at \\(r^2\\) er ganske lav, bare 0.0693, altså ca 7%. Denne koeffisienten kalles også “coefficient of determination” og sier noe om i hvor stor grad modellen fanger opp variasjoenen i dataene. En lav \\(r^2\\) betyr at modellen i liten grad gjør det. Vi må altså forvente at modellen vil bomme ganske kraftig i sine prediksjoner. Vi kan velge å ta modellen seriøst likevel, men ikke ha for store forventninger for prediksjonene!\nEt annet mål på hvor godt modellen treffer er “Root mean square error”, RMSE. Dette kan skrives som:\n\\[ rmse = \\sqrt{ \\frac{ \\sum{(O_i-P_i)^2} }{N} }  \\]\nder \\(O\\) er de observerte verdiene og \\(P\\) er de predikerte verdiene for observasjon \\(i\\). Merk at \\((O_i-P_i)\\) er residualene. I R kan vi hente ut residualene fra regresjons-objektet med dollartegnet ...$res etter objektnavnet. Da kan du regne ut RMSE som følger:\n\n\nCode\nrmse <- sqrt(mean(est$res^2))\nrmse\n\n\n[1] 2.465155\n\n\nRMSE sier altså omtrentlig hvor mye modellen i gjennomsnitt bommer på de observerte verdiene. 1. Hvorvidt det er presist nok eller ikke vil vel strengt tatt komme an på behovet for presisjon, altså: hva man skal bruke det til.\nFor å få litt bedre tak på hva RMSE betyr kan vi se på et plot av de predikerte og observerte verdiene. Vi kan predikere vold for hver enkelt kommune basert på denne modellen, som altså er den forventede voldsraten hvis modellen er sann. Funksjonen predict() gir oss hva vi trenger.\n\n\nCode\nkom <- kom_2016 %>% \n  mutate(pred = predict(est))\n\n\nMerk at koden her lagde en kopi av datasettet der vi har alle de opprinnelige variablene pluss en variabel med de predikerte verdiene. Vi kan nå sammenlignet prediksjonene med de observerte utfallene.\n\n\nCode\nggplot(kom, aes(x = Vold, y = pred)) +\n  geom_point(alpha = .3) +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nHvis prediksjonen hadde vært perfekt ville disse punktene ligget på linja, noe den jo ikke gjør. Modellen bommer altså ganske mye.\nHva hvis vi vil vite forventet voldsrate for en kommune for en gitt andel unge menn? Løsningen er å lage et nytt datasett med de verdiene vi er interessert i og så predikere for dette datasettet med å spesifisere newdata = dt. Her er et eksempel der vi ønsker å vite voldsraten hvis andelen unge menn er 15%.\n\n\nCode\ndt <- data.frame(prop_unge_menn = .15)\npredict(est, newdata = dt)\n\n\n       1 \n7.217257 \n\n\nI følge modellen vil altså en kommune der 15% av populasjonen er unge menn ha en 7.2 voldshendelser per 1000 innbyggere. Fra tradisjonell statistikk vet vi jo at det er usikkerhet knyttet til dette estimatet og vi kan også ta det med i beregningen her. Vanligvis vil man estimere med et konfidensintervall, som gjelder hvis man estimerer et gjennomsnitt i en gruppe. Her skal vi derimot predikere for en enkelt kommune, som da har større usikkerhet enn om man estimerer for en enkelt observasjon. Dette kalles prediksjonsintervall og må spesifiseres i koden. Hvis det ikke er gitt vil R gi konfidensintervallet.\n\n\nCode\npredict(est, newdata = dt, interval = \"prediction\")\n\n\n       fit     lwr      upr\n1 7.217257 2.34284 12.09167\n\n\nTolkningen er ellers tilsvarende som for konfidensintervall: vi forventer med “95% sannsynlighet”2 at voldsraten vil være mellom 2.3 og 12.1 per 1000 innbyggere.\n\n\n4.1.2 Multippel regresjon\nEnkel regresjon er nettopp enkel og prediksjonen blir ikke så god. Men vi kan komplisere vesentlig ved å inkludere flere variable og bruke alle triksene man evt. har lært om multippel regresjon tidligere, primært interaksjonsledd, polynomer og transformasjoner osv.\nI R vil vi da bare legge til flere variabelnavn i formelen. Ellers er det meste likt som for enkel lineær regresjon.\n\n\nCode\nest_m <- lm(Vold ~ prop_unge_menn + gj_innt_17_34 + gj_innt_35_66 + \n                   prop_shj_mottakere_6mnd , \n            data=kom_2016)\nsummary(est_m)\n\n\n\nCall:\nlm(formula = Vold ~ prop_unge_menn + gj_innt_17_34 + gj_innt_35_66 + \n    prop_shj_mottakere_6mnd, data = kom_2016)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.6397 -1.4418 -0.3125  1.2031 16.0036 \n\nCoefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              1.004e+00  1.115e+00   0.900    0.368    \nprop_unge_menn           7.088e+01  7.337e+00   9.661  < 2e-16 ***\ngj_innt_17_34           -6.220e-06  3.302e-06  -1.884    0.060 .  \ngj_innt_35_66           -8.343e-06  1.651e-06  -5.053 5.68e-07 ***\nprop_shj_mottakere_6mnd  2.476e+02  2.040e+01  12.134  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.132 on 638 degrees of freedom\nMultiple R-squared:  0.3091,    Adjusted R-squared:  0.3048 \nF-statistic: 71.37 on 4 and 638 DF,  p-value: < 2.2e-16\n\n\nMerk at \\(r^2\\) nå har gått betraktelig opp, til ca 0.31. Gitt at vi tolker dette som i hvor stor grad vi kan predikere utfallet fra datasettet, så er det kanskje likevel ikke imponerende høyt: vi vil fremdeles forvente mye feil prediksjon.\nHer er et scatterplot av observert mot forventet voldsrater:\n\n\nCode\nkom_pred <- kom_2016 %>% \n  mutate(pred = predict(est_m))\n\nggplot(kom_pred, aes(x = Vold, y = pred)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n\n\n\nLa oss inkludere alle aktuelle variable i datasettet. Et lite triks her er å fjerne alle variable vi ikke er interessert i og lagre det i et nytt datasett. I lm() kan vi da presisere formelen som Vold ~ . som betyr å ta med alle variabelene i stedet for å liste hver enkelt variabel.\n\n\nCode\nkom_s <- kom_2016 %>% \n  select(-c(kommune, lovb_ialt, Orden,  \n            Rusmiddellovbrudd, Trafikkovertredelse, \n            lovb_annet, prop_unge_menn))\n\nfull_mod <- lm(Vold ~ . , data = kom_s)\nsummary(full_mod)\n\n\n\nCall:\nlm(formula = Vold ~ ., data = kom_s)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.2272 -1.3129 -0.2606  1.1059 13.8145 \n\nCoefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              1.714e+00  3.228e+02   0.005  0.99577    \nyear                    -9.970e-04  1.602e-01  -0.006  0.99504    \nbef_tot                  4.440e-06  2.276e-06   1.951  0.05154 .  \nprop_kvinner_16_18      -7.445e+01  3.803e+01  -1.958  0.05069 .  \nprop_menn_16_18          1.529e+01  3.066e+01   0.499  0.61829    \nprop_menn_19_34          6.935e+01  1.176e+01   5.897 6.03e-09 ***\nprop_kvinner_19_34       2.019e+00  1.278e+01   0.158  0.87447    \nprop_shj_mottakere       1.010e+02  1.463e+01   6.899 1.28e-11 ***\nprop_shj_mottakere_6mnd  5.294e+01  3.102e+01   1.707  0.08837 .  \ngj_innt_17_34           -1.359e-05  4.226e-06  -3.217  0.00136 ** \ngj_innt_35_66           -2.058e-05  8.411e-06  -2.447  0.01468 *  \ngj_innt_alle             2.665e-05  1.224e-05   2.177  0.02987 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.018 on 631 degrees of freedom\nMultiple R-squared:  0.3878,    Adjusted R-squared:  0.3772 \nF-statistic: 36.34 on 11 and 631 DF,  p-value: < 2.2e-16\n\n\n\\(r^2\\) gikk noe opp, til 0.39.\nMen vi kan gjøre modellen ekstra komplisert ved inkludere alle mulige interaksjonsledd. En åpenbar ulempe med dette er at hver enkelt koeffisent blir svært mye vanskeligere å tolke. Vi fokuserer derfor kun på \\(r^2\\) som kan hentes ut uten å ta med resten av output.\n\n\nCode\nfull_mod2 <- lm( Vold ~ .^2, data = kom_s)\nsummary(full_mod2)$r.squared\n\n\n[1] 0.529478\n\n\n\\(r^2\\) gikk vesentlig opp. Men når vi først driver med kompliserte modellspesifikasjoner som uansett er vanskelige å tolke - hvorfor begrense seg til 2-veis interaksjoner? Her er en versjon med alle 3-veis interaksjoner, og nå begynner \\(r^2\\) virkelig å bli høy!\n\n\nCode\nfull_mod3 <- lm( Vold ~ .^3, data = kom_s)\nsummary(full_mod3)$r.squared\n\n\n[1] 0.7215881\n\n\nVi kan trimme modellen så den ikke har med så voldsomt mange parametre. En mulighet er å overlate dette til datamaskinen ved å la den gjøre en trinnvis test av hvorvidt modellene blir signifikant dårligere av å ta vekk noen ledd. Så beholdes den “beste” modellen.\nOBS! Merk at dette er en rent mekanisk seleksjon, og frarådes i de fleste samfunnsvitenskapelige sammenhenger. Tolkning av parametre og statistisk usikkerhet er nå på svært tynn is. Men det kan gi god prediksjon likevel.\n\n\nCode\nstep_mod <- MASS::stepAIC(full_mod3, direction=\"backward\", \n                          trace = FALSE)\nsummary(step_mod)$r.squared\n\n\n[1] 0.7046848\n\n\nHvis vi nå predikerer for hver enkelt kommune og plotter forventet mot observert, så får vi et svært mye bedre sammenfall enn tidligere.\n\n\nCode\nkom_pred <- kom_s %>% \n  mutate(pred = predict(step_mod))\n\nggplot(kom_pred, aes(x = Vold, y = pred)) +\n  geom_point(alpha = .3) +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n\n\n\nNå kan vi også regne ut RMSE, som altså er “root mean squared error”. Med andre ord: regn ut residualene (dvs. “error”), og kvadrer denne, og så ta kvadratroten av gjennomsnittet av denne. Her er en kode skrevet litt omstendelig så den er litt lettere å forstå:\n\n\nCode\nkom_s %>% \n  mutate(pred = predict(step_mod), \n         residual = pred - Vold) %>% \n  mutate(sq.resid = residual^2) %>% \n  summarise(sqrt(mean(sq.resid)))\n\n\n  sqrt(mean(sq.resid))\n1              1.38862\n\n\nDette betyr omtrentlig at modellen i gjennomsnitt vil bomme med 1.38 prosentpoeng på voldsraten i kommunen. 3. Hvorvidt det er presist nok eller ikke vil vel strengt tatt komme an på behovet for presisjon, altså: hva man skal bruke det til."
  },
  {
    "objectID": "linear_regresjon.html#oppgaver",
    "href": "linear_regresjon.html#oppgaver",
    "title": "4  Lineær regresjon",
    "section": "4.2 Oppgaver",
    "text": "4.2 Oppgaver\n\nExercise 4.1 Velg et datasettet og formuler hva en prediksjonsmodell kan kunne brukes til. Se for deg at tiltak du foreslår vil altså ha faktiske konsekvenser, så gjør en vurdering av hvorvidt feilprediksjoner vil være problematiske og i så fall på hvilken måte. Vurder mulighetene for feil opp mot gevinst ved riktig prediksjon.\nMerk: det er ikke viktig at anvendelsen skal være realistisk, men du må alltid ta konsekvensen i vurderingene.\n\n\nExercise 4.2 Last inn valgte datasett og splitt i et training og et testing datasett. Sett splitten ved .70. Bruk training-data til å gjøre deg kjent med dataene og estimere modellene. Ikke bruk testing-dataene inntil du får beskjed om det.\n\n\nExercise 4.3 Gjør deg kjent med innholdet i disse training-dataene. Du kan gjøre f.eks. følgende:\n\nBruk glimpse() og skim() til å få oversikt over innholdet i datasettet\nHvis det er noen variable du ikke kommer til å bruke, slett gjerne disse med en gang\nLag noen tabeller og plot som viser hvordan utfallsvariabelen er fordelt etter andre variable\n\n\n\nExercise 4.4 Estimer flere lineær regresjonsmodeller med et fåtall prediktorer. Gjør et utvalg av de variablene du mener er mest relevant for å forklare utfallet. Estimer flere lineære regresjonsmodeller for å predikere utfallet, og sammenlign hvor gode prediksjoner disse gir. Mest relevante statistikker er \\(r^2\\) og RMSE.\n\nVelg ut tre forklaringsvariable og estimer en regresjonsmodell\nEstimer en ny modell med alle variable i datasettet\nEstimer en ny modell og inkluder noen få polynomer og/eller interaksjonsledd\nGjør et automatisk modellsøk\n\nLag gjerne noen plot av ROC-curve for i hvert fall noen av modellene slik at du får en følelse med hva AUC egentlig betyr. Plot også predikert verdi mot observert verdi og gjør en vurdering av RMSE.\n\n\nExercise 4.5 I forrige oppgave brukte du testing-datasettet til både å estimere modellene og vurdere resultatet. Nå skal du bruke testing-datasettet til å vurdere de samme resultatene. Dette gjør du ved å predikere på testing-datasettet og regne ut AUC og RMSE for disse dataene. For hver modell i forrige oppgave, gjør som følger:\n\nPrediker utfallet på testing-datasettet\nRegn ut AUC og RMSE\nHvor stor er endringen i AUC og RMSE fra resultatene når du brukte training-datasettet?\n\nVurdering: En mer komplisert modell beskriver dataene bedre. Men er det like stor endring i AUC og RMSE for enkle og mer kompliserte modeller? Beskriv hva du ser og gi en forklaring."
  },
  {
    "objectID": "cart.html",
    "href": "cart.html",
    "title": "6  Klassifikasjonstrær",
    "section": "",
    "text": "Code\nlibrary(tidyverse) \nlibrary(rpart)      # funksjoner for CART \nlibrary(rpart.plot) # funksjon for å plotte CART \nlibrary(caret)      # inneholder funksjon for confusion matrix \nlibrary(skimr)      # funksjonen skim()\nVi skal her bruke datasettet credit fra Canvas. Dataene er en banks kundehistorikk for kreditt for 1000 kunder. Variabelen default1 er «yes» hvis tilbakebetaling som avtalt og «no» hvis ikke. Dette er utfallsvariabelen. Øvrige variable er rimelig selvforklarende etter variabelnavn. Målet er å lage et system for hvilke nye kunder som skal få innvilget kreditt.\nVi splitter først datasettet i to deler: en til training og en til testing.\nVi starter med å inkludere noen få variable som gir en oversiktlig illustrasjon. Utfallsvariabel og prediktorer spesifiseres som en formel på samme måte som for regresjon. Siden vi her har en klassifikasjon må vi spesifisere method = \"class\". Hvis ikke vil rpart() gjette hva slags modell (som kanskje er riktig), så du kan få andre resultater enn du forventet.\nVi kan også få printet ut disse som tall i en tabell.\nVi kan så skrive ut confusion matrix."
  },
  {
    "objectID": "cart.html#oppgaver",
    "href": "cart.html#oppgaver",
    "title": "6  Klassifikasjonstrær",
    "section": "6.1 Oppgaver",
    "text": "6.1 Oppgaver\n\nExercise 6.1 Gjenta oppgave 1, men basert på dine vurderinger i e) se om du klarer å tune modellen mer i retning av ønsket cost-ratio. Bruk argumentene prior, cp, minbucket og maxdepth.\n\n\nExercise 6.2 Bruk datasettet credit til å predikere kredittverdighet for nye kunder.\n\nSpesifiser en formel med et fåtall variable og lag et klassifikasjonstre.\nPlot med rpart.plot()\nBruk predict() til å klassifisere.\nLag en confusion matrix med table()\nGi en vurdering av resultatet.\n\nSi noe om forholdet mellom resultat for training og testing datasett.\nEr cost-ratio ok fra bankens perspektiv?\nEr cost-ratio ok fra kundens perspektiv?\nAndre hensyn som bør spille inn her?\n\n\n\n\nExercise 6.3 Datafilen credit_kunder.csv inneholder data om to lånesøkere: Ola Normann og Kari Hansen.\nSkal banken gi dem lån? Bruk foretrukne modell fra forrige oppgave.\n\n\nExercise 6.4 Banker bruker slike systemer i dag i større eller mindre grad til automatisere behandling av lånesøknader. (Men de bruker både rikere data og mer avanserte algoritmer). I hvilken grad synes du slike systemer kan/bør helautomatiseres? Bør det være reguleringer på hva slags data som benyttes til slike systemer? Bør kunden få innsyn i algoritmen ved avslag? Gi noen vurderinger av mulige fordeler og ulemper med tanke på hvordan det kan slå ut for enkeltindivider."
  },
  {
    "objectID": "index.html#installasjon",
    "href": "index.html#installasjon",
    "title": "SOS2901 Maskinlæring for samfunnsvitere",
    "section": "Installasjon",
    "text": "Installasjon\nDu må installere både R og Rstudio på din datamaskin. Hvis du har Windows-maskin trenger du også installere Rtools. Hvis du har Mac OS X kan det hende du må installere XQuartz.\nSe ellers video fra SICSS"
  },
  {
    "objectID": "index.html#pakker",
    "href": "index.html#pakker",
    "title": "SOS2901 Maskinlæring for samfunnsvitere",
    "section": "Pakker",
    "text": "Pakker\nR er basert på bruk av “pakker” som må installeres for å få tilgang til funksjoner vi skal bruke. Disse installeres med bruk av kommandoen install.packages(). F.eks. kan man installere pakken Tidyverse med følgende: install.packages(\"tidyverse\").\nFor å installere flere pakker kan man kjøre install.packages() flere ganger, men det er enklere å liste opp alle pakkene i et objekt og så kjøre install.packages() på dette objektet. Noe slikt:\n\n\nCode\npkgs <- c(\"tidyverse\", \"skimr\", \"randomForest\")\n#install.packages(pkgs)\n\n\nMen for at du skal kunne bruke pakkene må du aktivere dem i R ved library(). Dette må du gjøre hver gang du starter opp R. Det kan se slik ut:\n\n\nCode\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(randomForest)\nlibrary(caret)\nlibrary(AUC)"
  },
  {
    "objectID": "index.html#forutsetninger",
    "href": "index.html#forutsetninger",
    "title": "SOS2901 Maskinlæring for samfunnsvitere",
    "section": "Forutsetninger",
    "text": "Forutsetninger\nDette kurset forutsetter at man har grunnleggende ferdigheter i kvantitative metoder og har brukt R før. Hvis du vet du trenger det: frisk opp litt fra tidligere kurs.\nNår det er sagt, så er det begrenset hvor mye man må kunne fra før hvis du er motivert til å jobbe med stoffet skal du nok få til dette. Det blir mye nytt uansett.\nHvis du trenger oppfriskning av hvordan R fungerer, så er Wickham & Grolemunds bok “R for data science” et utmerket oppslagsverk. Men merk at vi i begrenset grad vil bruke “Tidyverse” til annet enn datahåndtering og noe grafikk."
  },
  {
    "objectID": "grunnleggendeML.html#overfitting-training-og-testing-dataset",
    "href": "grunnleggendeML.html#overfitting-training-og-testing-dataset",
    "title": "3  Noen innledende metodiske begrep",
    "section": "3.2 Overfitting: training og testing dataset",
    "text": "3.2 Overfitting: training og testing dataset\nNår man tilpasser en statistisk modell eller algoritme til data så er det lett å tenke at modellen bør gjenspeile dataene så godt som mulig. Samtidig sies det ofte at modellene skal være så enkle som tilrådelig. En mer komplisert modell vil jo være i stand til å tilpasses dataene i større grad, så hvordan avveie dette?\nSpørsmålet nå er ikke hvor godt modellen passer til disse dataene, men hvordan den passer til nye data! Altså fremtidige data eller fremtidig situasjon. La oss si at vi har et datasett som kan plottes om følger:\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\nn <- 10\nbeta <- 1\nset.seed(42)\nx <- round(20 + runif(n)*50, digits = 1)\ny <- 1 + beta*x + rnorm(n)*10\n\ndf <- data.frame(x = x, y = y) %>% \n  mutate(d = case_when(x < 50 ~ 0,\n                       x < 56 ~ 1, \n                       TRUE ~2) %>% as_factor())\n\n\ng1 <- ggplot(df, aes(x = x, y = y)) +\n  geom_point() \ng1\n\n\n\n\n\nVi kunne her tilpasse en veldig komplisert modell som gjenskaper dataene perfekt.\n\n\nCode\nest1 <- lm(y ~ x + x*d, data = df)\nest2 <- lm(y ~ x, data = df)\n\ndf_p1 <- df %>% \n  mutate(pred = predict(est1))\n\nsummary(est1)$r.squared\n\n\n[1] 0.9567499\n\n\nCode\nsummary(est2)$r.squared\n\n\n[1] 0.8066771\n\n\nCode\nggplot(df, aes(x = x, y = y)) +\n  geom_point(col = \"black\") +\n  geom_line(data = df_p1, aes(y = pred), col = \"red\", linewidth = .7) +\n  stat_smooth(method='lm', formula = y ~ x, se = F, col = \"blue\", linewidth = .7)\n\n\n\n\n\n\n\nCode\nx <- round(20 + runif(n)*50, digits = 1)\ny <- 1 + beta*x + rnorm(n)*10\ndf2 <- data.frame(x = x, y = y)\n  \ng1 +\n  geom_point(data = df2, col = \"blue\") +\n  geom_smooth(method = lm, se = F, col = \"red\")\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "datasets.html#credit",
    "href": "datasets.html#credit",
    "title": "1  Datasett",
    "section": "1.1 Credit",
    "text": "1.1 Credit\nDataene inneholder følgende variable.\n\n\nCode\ncredit <- read.csv(\"data/credit.csv\")\n\nglimpse(credit)\n\n\nRows: 1,000\nColumns: 17\n$ checking_balance     <chr> \"< 0 DM\", \"1 - 200 DM\", \"unknown\", \"< 0 DM\", \"< 0…\n$ months_loan_duration <int> 6, 48, 12, 42, 24, 36, 24, 36, 12, 30, 12, 48, 12…\n$ credit_history       <chr> \"critical\", \"good\", \"critical\", \"good\", \"poor\", \"…\n$ purpose              <chr> \"furniture/appliances\", \"furniture/appliances\", \"…\n$ amount               <int> 1169, 5951, 2096, 7882, 4870, 9055, 2835, 6948, 3…\n$ savings_balance      <chr> \"unknown\", \"< 100 DM\", \"< 100 DM\", \"< 100 DM\", \"<…\n$ employment_duration  <chr> \"> 7 years\", \"1 - 4 years\", \"4 - 7 years\", \"4 - 7…\n$ percent_of_income    <int> 4, 2, 2, 2, 3, 2, 3, 2, 2, 4, 3, 3, 1, 4, 2, 4, 4…\n$ years_at_residence   <int> 4, 2, 3, 4, 4, 4, 4, 2, 4, 2, 1, 4, 1, 4, 4, 2, 4…\n$ age                  <int> 67, 22, 49, 45, 53, 35, 53, 35, 61, 28, 25, 24, 2…\n$ other_credit         <chr> \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"…\n$ housing              <chr> \"own\", \"own\", \"own\", \"other\", \"other\", \"other\", \"…\n$ existing_loans_count <int> 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2…\n$ job                  <chr> \"skilled\", \"skilled\", \"unskilled\", \"skilled\", \"sk…\n$ dependents           <int> 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ phone                <chr> \"yes\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"yes\"…\n$ default              <chr> \"no\", \"yes\", \"no\", \"no\", \"yes\", \"no\", \"no\", \"no\",…\n\n\n\n\n\n Download data as csv"
  },
  {
    "objectID": "datasets.html#attrition",
    "href": "datasets.html#attrition",
    "title": "1  Datasett",
    "section": "1.2 Attrition",
    "text": "1.2 Attrition\nDatasettet er tilgjengelig fra Kaggle.\n\n\nCode\nattrition <- read.csv(\"../data/attrition.csv\")\nglimpse(attrition)\n\n\nRows: 1,470\nColumns: 36\n$ X                        <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ Age                      <int> 41, 49, 37, 33, 27, 32, 59, 30, 38, 36, 35, 2…\n$ Attrition                <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"…\n$ BusinessTravel           <chr> \"Travel_Rarely\", \"Travel_Frequently\", \"Travel…\n$ DailyRate                <int> 1102, 279, 1373, 1392, 591, 1005, 1324, 1358,…\n$ Department               <chr> \"Sales\", \"Research & Development\", \"Research …\n$ DistanceFromHome         <int> 1, 8, 2, 3, 2, 2, 3, 24, 23, 27, 16, 15, 26, …\n$ Education                <int> 2, 1, 2, 4, 1, 2, 3, 1, 3, 3, 3, 2, 1, 2, 3, …\n$ EducationField           <chr> \"Life Sciences\", \"Life Sciences\", \"Other\", \"L…\n$ EmployeeCount            <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ EmployeeNumber           <int> 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16,…\n$ EnvironmentSatisfaction  <int> 2, 3, 4, 4, 1, 4, 3, 4, 4, 3, 1, 4, 1, 2, 3, …\n$ Gender                   <chr> \"Female\", \"Male\", \"Male\", \"Female\", \"Male\", \"…\n$ HourlyRate               <int> 94, 61, 92, 56, 40, 79, 81, 67, 44, 94, 84, 4…\n$ JobInvolvement           <int> 3, 2, 2, 3, 3, 3, 4, 3, 2, 3, 4, 2, 3, 3, 2, …\n$ JobLevel                 <int> 2, 2, 1, 1, 1, 1, 1, 1, 3, 2, 1, 2, 1, 1, 1, …\n$ JobRole                  <chr> \"Sales Executive\", \"Research Scientist\", \"Lab…\n$ JobSatisfaction          <int> 4, 2, 3, 3, 2, 4, 1, 3, 3, 3, 2, 3, 3, 4, 3, …\n$ MaritalStatus            <chr> \"Single\", \"Married\", \"Single\", \"Married\", \"Ma…\n$ MonthlyIncome            <int> 5993, 5130, 2090, 2909, 3468, 3068, 2670, 269…\n$ MonthlyRate              <int> 19479, 24907, 2396, 23159, 16632, 11864, 9964…\n$ NumCompaniesWorked       <int> 8, 1, 6, 1, 9, 0, 4, 1, 0, 6, 0, 0, 1, 0, 5, …\n$ Over18                   <chr> \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", …\n$ OverTime                 <chr> \"Yes\", \"No\", \"Yes\", \"Yes\", \"No\", \"No\", \"Yes\",…\n$ PercentSalaryHike        <int> 11, 23, 15, 11, 12, 13, 20, 22, 21, 13, 13, 1…\n$ PerformanceRating        <int> 3, 4, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, …\n$ RelationshipSatisfaction <int> 1, 4, 2, 3, 4, 3, 1, 2, 2, 2, 3, 4, 4, 3, 2, …\n$ StandardHours            <int> 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 8…\n$ StockOptionLevel         <int> 0, 1, 0, 0, 1, 0, 3, 1, 0, 2, 1, 0, 1, 1, 0, …\n$ TotalWorkingYears        <int> 8, 10, 7, 8, 6, 8, 12, 1, 10, 17, 6, 10, 5, 3…\n$ TrainingTimesLastYear    <int> 0, 3, 3, 3, 3, 2, 3, 2, 2, 3, 5, 3, 1, 2, 4, …\n$ WorkLifeBalance          <int> 1, 3, 3, 3, 3, 2, 2, 3, 3, 2, 3, 3, 2, 3, 3, …\n$ YearsAtCompany           <int> 6, 10, 0, 8, 2, 7, 1, 1, 9, 7, 5, 9, 5, 2, 4,…\n$ YearsInCurrentRole       <int> 4, 7, 0, 7, 2, 7, 0, 0, 7, 7, 4, 5, 2, 2, 2, …\n$ YearsSinceLastPromotion  <int> 0, 1, 0, 3, 2, 3, 0, 0, 1, 7, 0, 0, 4, 1, 0, …\n$ YearsWithCurrManager     <int> 5, 7, 0, 0, 2, 6, 0, 0, 8, 7, 3, 8, 3, 2, 3, …"
  },
  {
    "objectID": "datasets.html#anmeldte-lovbrudd-2016",
    "href": "datasets.html#anmeldte-lovbrudd-2016",
    "title": "1  Datasett",
    "section": "1.3 Anmeldte lovbrudd 2016",
    "text": "1.3 Anmeldte lovbrudd 2016\n\n\nCode\nload(\"../data/krim2016.RData\")\nglimpse(kom2016)\n\n\nRows: 316\nColumns: 8\n$ kommunenavn         <chr> \"Halden\", \"Moss\", \"Sarpsborg\", \"Fredrikstad\", \"Hva…\n$ kommune             <chr> \"0101\", \"0104\", \"0105\", \"0106\", \"0111\", \"0119\", \"0…\n$ lovb_ialt           <dbl> 111.4, 72.6, 60.6, 65.9, 60.1, 140.4, 72.2, 47.2, …\n$ Orden               <dbl> 18.5, 8.9, 8.2, 8.2, 4.2, 17.7, 24.0, 7.0, 10.2, 9…\n$ Rusmiddellovbrudd   <dbl> 21.0, 12.0, 9.5, 10.2, 5.3, 28.8, 14.0, 4.7, 8.6, …\n$ Trafikkovertredelse <dbl> 15.5, 7.4, 9.6, 8.9, 6.9, 28.3, 7.5, 11.9, 8.9, 21…\n$ Vold                <dbl> 11.2, 7.8, 6.8, 7.3, 7.8, 5.8, 6.9, 5.8, 9.3, 8.3,…\n$ lovb_annet          <dbl> 25.5, 12.1, 8.8, 10.4, 15.7, 49.0, 12.7, 9.9, 11.3…"
  },
  {
    "objectID": "datasets.html#churn",
    "href": "datasets.html#churn",
    "title": "1  Datasett",
    "section": "1.4 Churn",
    "text": "1.4 Churn\n\n\nCode\nchurn <- read.csv(\"../data/WA_Fn-UseC_-Telco-Customer-Churn.csv\")\nglimpse(churn)\n\n\nRows: 7,043\nColumns: 21\n$ customerID       <chr> \"7590-VHVEG\", \"5575-GNVDE\", \"3668-QPYBK\", \"7795-CFOCW…\n$ gender           <chr> \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Female\",…\n$ SeniorCitizen    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Partner          <chr> \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes…\n$ Dependents       <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"No\"…\n$ tenure           <int> 1, 34, 2, 45, 2, 8, 22, 10, 28, 62, 13, 16, 58, 49, 2…\n$ PhoneService     <chr> \"No\", \"Yes\", \"Yes\", \"No\", \"Yes\", \"Yes\", \"Yes\", \"No\", …\n$ MultipleLines    <chr> \"No phone service\", \"No\", \"No\", \"No phone service\", \"…\n$ InternetService  <chr> \"DSL\", \"DSL\", \"DSL\", \"DSL\", \"Fiber optic\", \"Fiber opt…\n$ OnlineSecurity   <chr> \"No\", \"Yes\", \"Yes\", \"Yes\", \"No\", \"No\", \"No\", \"Yes\", \"…\n$ OnlineBackup     <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"N…\n$ DeviceProtection <chr> \"No\", \"Yes\", \"No\", \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"Y…\n$ TechSupport      <chr> \"No\", \"No\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Yes…\n$ StreamingTV      <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"Yes\", \"No\", \"Ye…\n$ StreamingMovies  <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"No\", \"Yes…\n$ Contract         <chr> \"Month-to-month\", \"One year\", \"Month-to-month\", \"One …\n$ PaperlessBilling <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"Yes\", \"Yes\", \"Yes\", \"No\", …\n$ PaymentMethod    <chr> \"Electronic check\", \"Mailed check\", \"Mailed check\", \"…\n$ MonthlyCharges   <dbl> 29.85, 56.95, 53.85, 42.30, 70.70, 99.65, 89.10, 29.7…\n$ TotalCharges     <dbl> 29.85, 1889.50, 108.15, 1840.75, 151.65, 820.50, 1949…\n$ Churn            <chr> \"No\", \"No\", \"Yes\", \"No\", \"Yes\", \"Yes\", \"No\", \"No\", \"Y…"
  },
  {
    "objectID": "datasets.html#recidivism-from-iowa-prisons",
    "href": "datasets.html#recidivism-from-iowa-prisons",
    "title": "1  Datasett",
    "section": "1.5 Recidivism from Iowa prisons",
    "text": "1.5 Recidivism from Iowa prisons\nDatasettet inneholder data på 26020 personer løslatt fra fengsel i staten Iowa, USA mellom 2010 og 2015. For hver person er det informasjon om hvorvidt de har blitt fengslet på nytt innen 3 år (dvs. fulgt til mellom 2013 og 2018).\nDatasettet er tilgjengelig fra Kaggle og er nærmere omtalt der.\n\n\nCode\nrecidivism <- read.csv(\"../data/3-Year_Recidivism_for_Offenders_Released_from_Prison_in_Iowa_elaborated.csv\")\n\nglimpse(recidivism)\n\n\nRows: 26,020\nColumns: 12\n$ Fiscal.Year.Released                      <int> 2010, 2010, 2010, 2010, 2010…\n$ Recidivism.Reporting.Year                 <int> 2013, 2013, 2013, 2013, 2013…\n$ Race...Ethnicity                          <chr> \"White - Non-Hispanic\", \"Whi…\n$ Age.At.Release                            <chr> \"Under 25\", \"55 and Older\", …\n$ Convicting.Offense.Classification         <chr> \"D Felony\", \"D Felony\", \"D F…\n$ Convicting.Offense.Type                   <chr> \"Violent\", \"Public Order\", \"…\n$ Convicting.Offense.Subtype                <chr> \"Assault\", \"OWI\", \"Burglary\"…\n$ Main.Supervising.District                 <chr> \"4JD\", \"7JD\", \"5JD\", \"8JD\", …\n$ Release.Type                              <chr> \"Parole\", \"Parole\", \"Parole\"…\n$ Release.type..Paroled.to.Detainder.united <chr> \"Parole\", \"Parole\", \"Parole\"…\n$ Part.of.Target.Population                 <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", …\n$ Recidivism...Return.to.Prison.numeric     <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…"
  },
  {
    "objectID": "datasets.html#compas",
    "href": "datasets.html#compas",
    "title": "1  Datasett",
    "section": "1.6 Compas",
    "text": "1.6 Compas"
  },
  {
    "objectID": "datasets.html#diabetes-rehospitalization",
    "href": "datasets.html#diabetes-rehospitalization",
    "title": "1  Datasett",
    "section": "1.7 Diabetes rehospitalization",
    "text": "1.7 Diabetes rehospitalization\nData er beskrevet nærmere i Strack et al (2014) (se særlig tabell 1) og er tilgjengelig fra UCI machine learning repository\nUtfallsvariabelen av interesse er readmitted, altså om pasienten blir lagt inn på nytt på et eller annet tidspunkt etter utskrivning.\n\n\nCode\ndiabetic <- read.csv(\"../data/diabetic_data.csv\")\nglimpse(diabetic)\n\n\nRows: 101,766\nColumns: 50\n$ encounter_id             <int> 2278392, 149190, 64410, 500364, 16680, 35754,…\n$ patient_nbr              <int> 8222157, 55629189, 86047875, 82442376, 425192…\n$ race                     <chr> \"Caucasian\", \"Caucasian\", \"AfricanAmerican\", …\n$ gender                   <chr> \"Female\", \"Female\", \"Female\", \"Male\", \"Male\",…\n$ age                      <chr> \"[0-10)\", \"[10-20)\", \"[20-30)\", \"[30-40)\", \"[…\n$ weight                   <chr> \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", …\n$ admission_type_id        <int> 6, 1, 1, 1, 1, 2, 3, 1, 2, 3, 1, 2, 1, 1, 3, …\n$ discharge_disposition_id <int> 25, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 3, 6, 1,…\n$ admission_source_id      <int> 1, 7, 7, 7, 7, 2, 2, 7, 4, 4, 7, 4, 7, 7, 2, …\n$ time_in_hospital         <int> 1, 3, 2, 2, 1, 3, 4, 5, 13, 12, 9, 7, 7, 10, …\n$ payer_code               <chr> \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", …\n$ medical_specialty        <chr> \"Pediatrics-Endocrinology\", \"?\", \"?\", \"?\", \"?…\n$ num_lab_procedures       <int> 41, 59, 11, 44, 51, 31, 70, 73, 68, 33, 47, 6…\n$ num_procedures           <int> 0, 0, 5, 1, 0, 6, 1, 0, 2, 3, 2, 0, 0, 1, 5, …\n$ num_medications          <int> 1, 18, 13, 16, 8, 16, 21, 12, 28, 18, 17, 11,…\n$ number_outpatient        <int> 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ number_emergency         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ number_inpatient         <int> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ diag_1                   <chr> \"250.83\", \"276\", \"648\", \"8\", \"197\", \"414\", \"4…\n$ diag_2                   <chr> \"?\", \"250.01\", \"250\", \"250.43\", \"157\", \"411\",…\n$ diag_3                   <chr> \"?\", \"255\", \"V27\", \"403\", \"250\", \"250\", \"V45\"…\n$ number_diagnoses         <int> 1, 9, 6, 7, 5, 9, 7, 8, 8, 8, 9, 7, 8, 8, 8, …\n$ max_glu_serum            <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None…\n$ A1Cresult                <chr> \"None\", \"None\", \"None\", \"None\", \"None\", \"None…\n$ metformin                <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Steady\",…\n$ repaglinide              <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ nateglinide              <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ chlorpropamide           <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ glimepiride              <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Steady\",…\n$ acetohexamide            <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ glipizide                <chr> \"No\", \"No\", \"Steady\", \"No\", \"Steady\", \"No\", \"…\n$ glyburide                <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"St…\n$ tolbutamide              <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ pioglitazone             <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ rosiglitazone            <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ acarbose                 <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ miglitol                 <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ troglitazone             <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ tolazamide               <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ examide                  <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ citoglipton              <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ insulin                  <chr> \"No\", \"Up\", \"No\", \"Up\", \"Steady\", \"Steady\", \"…\n$ glyburide.metformin      <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ glipizide.metformin      <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ glimepiride.pioglitazone <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ metformin.rosiglitazone  <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ metformin.pioglitazone   <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ change                   <chr> \"No\", \"Ch\", \"No\", \"Ch\", \"Ch\", \"No\", \"Ch\", \"No…\n$ diabetesMed              <chr> \"No\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes…\n$ readmitted               <chr> \"NO\", \">30\", \"NO\", \"NO\", \"NO\", \">30\", \"NO\", \"…"
  },
  {
    "objectID": "datasets.html#absenteeism",
    "href": "datasets.html#absenteeism",
    "title": "1  Datasett",
    "section": "1.8 Absenteeism",
    "text": "1.8 Absenteeism\nDette er et syntetisk datasett som inneholder 8336 personer i en tenkt bedrift og hvor mange timer hver person har fravær fra jobben.\nData er tilgjengelig fra Kaggle\n\n\nCode\nabsenteeism <- read.csv(\"../data/MFGEmployees4.csv\")\nglimpse(absenteeism)\n\n\nRows: 8,336\nColumns: 13\n$ EmployeeNumber <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ Surname        <chr> \"Gutierrez\", \"Hardwick\", \"Delgado\", \"Simon\", \"Delvalle\"…\n$ GivenName      <chr> \"Molly\", \"Stephen\", \"Chester\", \"Irene\", \"Edward\", \"Erni…\n$ Gender         <chr> \"F\", \"M\", \"M\", \"F\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", \"M\", …\n$ City           <chr> \"Burnaby\", \"Courtenay\", \"Richmond\", \"Victoria\", \"New We…\n$ JobTitle       <chr> \"Baker\", \"Baker\", \"Baker\", \"Baker\", \"Baker\", \"Baker\", \"…\n$ DepartmentName <chr> \"Bakery\", \"Bakery\", \"Bakery\", \"Bakery\", \"Bakery\", \"Bake…\n$ StoreLocation  <chr> \"Burnaby\", \"Nanaimo\", \"Richmond\", \"Victoria\", \"New West…\n$ Division       <chr> \"Stores\", \"Stores\", \"Stores\", \"Stores\", \"Stores\", \"Stor…\n$ Age            <dbl> 32.02882, 40.32090, 48.82205, 44.59936, 35.69788, 48.44…\n$ LengthService  <dbl> 6.018478, 5.532445, 4.389973, 3.081736, 3.619091, 2.717…\n$ AbsentHours    <dbl> 36.57731, 30.16507, 83.80780, 70.02017, 0.00000, 81.830…\n$ BusinessUnit   <chr> \"Stores\", \"Stores\", \"Stores\", \"Stores\", \"Stores\", \"Stor…"
  },
  {
    "objectID": "datasets.html#human-resources-hr",
    "href": "datasets.html#human-resources-hr",
    "title": "1  Datasett",
    "section": "1.9 Human resources (HR)",
    "text": "1.9 Human resources (HR)\nData er tilgjengelig fra Kaggle og variable er beskrevet nærmere på denne lenken.\n\n\nCode\nhr <- read.csv(\"../data/HRDataset_v14.csv\")\nglimpse(hr)\n\n\nRows: 311\nColumns: 36\n$ Employee_Name              <chr> \"Adinolfi, Wilson  K\", \"Ait Sidi, Karthikey…\n$ EmpID                      <int> 10026, 10084, 10196, 10088, 10069, 10002, 1…\n$ MarriedID                  <int> 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0…\n$ MaritalStatusID            <int> 0, 1, 1, 1, 2, 0, 0, 4, 0, 2, 1, 1, 2, 0, 2…\n$ GenderID                   <int> 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1…\n$ EmpStatusID                <int> 1, 5, 5, 1, 5, 1, 1, 1, 3, 1, 5, 5, 1, 1, 5…\n$ DeptID                     <int> 5, 3, 5, 5, 5, 5, 4, 5, 5, 3, 5, 5, 3, 5, 5…\n$ PerfScoreID                <int> 4, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 4, 3, 3…\n$ FromDiversityJobFairID     <int> 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0…\n$ Salary                     <int> 62506, 104437, 64955, 64991, 50825, 57568, …\n$ Termd                      <int> 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1…\n$ PositionID                 <int> 19, 27, 20, 19, 19, 19, 24, 19, 19, 14, 19,…\n$ Position                   <chr> \"Production Technician I\", \"Sr. DBA\", \"Prod…\n$ State                      <chr> \"MA\", \"MA\", \"MA\", \"MA\", \"MA\", \"MA\", \"MA\", \"…\n$ Zip                        <int> 1960, 2148, 1810, 1886, 2169, 1844, 2110, 2…\n$ DOB                        <chr> \"07/10/83\", \"05/05/75\", \"09/19/88\", \"09/27/…\n$ Sex                        <chr> \"M \", \"M \", \"F\", \"F\", \"F\", \"F\", \"F\", \"M \", …\n$ MaritalDesc                <chr> \"Single\", \"Married\", \"Married\", \"Married\", …\n$ CitizenDesc                <chr> \"US Citizen\", \"US Citizen\", \"US Citizen\", \"…\n$ HispanicLatino             <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"…\n$ RaceDesc                   <chr> \"White\", \"White\", \"White\", \"White\", \"White\"…\n$ DateofHire                 <chr> \"7/5/2011\", \"3/30/2015\", \"7/5/2011\", \"1/7/2…\n$ DateofTermination          <chr> \"\", \"6/16/2016\", \"9/24/2012\", \"\", \"9/6/2016…\n$ TermReason                 <chr> \"N/A-StillEmployed\", \"career change\", \"hour…\n$ EmploymentStatus           <chr> \"Active\", \"Voluntarily Terminated\", \"Volunt…\n$ Department                 <chr> \"Production       \", \"IT/IS\", \"Production  …\n$ ManagerName                <chr> \"Michael Albert\", \"Simon Roup\", \"Kissy Sull…\n$ ManagerID                  <int> 22, 4, 20, 16, 39, 11, 10, 19, 12, 7, 14, 2…\n$ RecruitmentSource          <chr> \"LinkedIn\", \"Indeed\", \"LinkedIn\", \"Indeed\",…\n$ PerformanceScore           <chr> \"Exceeds\", \"Fully Meets\", \"Fully Meets\", \"F…\n$ EngagementSurvey           <dbl> 4.60, 4.96, 3.02, 4.84, 5.00, 5.00, 3.04, 5…\n$ EmpSatisfaction            <int> 5, 3, 3, 5, 4, 5, 3, 4, 3, 5, 4, 3, 4, 4, 5…\n$ SpecialProjectsCount       <int> 0, 6, 0, 0, 0, 0, 4, 0, 0, 6, 0, 0, 5, 0, 0…\n$ LastPerformanceReview_Date <chr> \"1/17/2019\", \"2/24/2016\", \"5/15/2012\", \"1/3…\n$ DaysLateLast30             <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Absences                   <int> 1, 17, 3, 15, 2, 15, 19, 19, 4, 16, 12, 15,…"
  },
  {
    "objectID": "datasets.html#nettverk",
    "href": "datasets.html#nettverk",
    "title": "1  Datasett",
    "section": "1.10 Nettverk",
    "text": "1.10 Nettverk\n\n\nCode\nload(\"../data/networkExample.RData\")\nglimpse(dataset)\n\n\nRows: 926\nColumns: 26\n$ degree               <dbl> 0.006282723, 0.002094241, 0.002094241, 0.00104712…\n$ betweenness          <dbl> 0.0081438885, 0.0020810695, 0.0014569424, 0.00000…\n$ closeness            <dbl> 0.08535931, 0.08049562, 0.08226376, 0.07795282, 0…\n$ transitivity         <dbl> 0.13333333, 0.00000000, 0.00000000, 0.00000000, 0…\n$ triangles            <dbl> 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0…\n$ ChurnNeighbors       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n$ NonChurnNeighbors    <dbl> 6, 2, 2, 1, 3, 5, 2, 2, 2, 6, 2, 3, 6, 2, 3, 2, 2…\n$ Neighbors            <dbl> 6, 2, 2, 1, 3, 5, 2, 2, 3, 6, 2, 3, 6, 2, 3, 2, 2…\n$ RelationalNeighbor   <dbl> 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.000…\n$ ChurnNeighbors2      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1…\n$ NonChurnNeighbors2   <dbl> 18, 4, 8, 4, 5, 19, 6, 8, 11, 15, 7, 6, 27, 4, 6,…\n$ RelationalNeighbor2  <dbl> 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0…\n$ degree2              <dbl> 0.026178010, 0.006282723, 0.010471204, 0.00523560…\n$ averageDegree        <dbl> 0.004363002, 0.003141361, 0.005235602, 0.00523560…\n$ averageDegree2       <dbl> 0.004188482, 0.004973822, 0.004581152, 0.00549738…\n$ averageTransitivity  <dbl> 0.13888889, 0.05000000, 0.03333333, 0.10000000, 0…\n$ averageTransitivity2 <dbl> 0.11415344, 0.10833333, 0.22777778, 0.18511905, 0…\n$ averageBetweenness   <dbl> 0.005713676, 0.004259980, 0.008147263, 0.00623771…\n$ averageBetweenness2  <dbl> 0.006733850, 0.008557955, 0.007690396, 0.00625752…\n$ averageTriangles     <dbl> 0.8333333, 0.5000000, 0.5000000, 1.0000000, 0.000…\n$ averageTriangles2    <dbl> 0.7777778, 1.2500000, 0.7500000, 1.7500000, 0.400…\n$ pr_0.85              <dbl> 0.0016432968, 0.0008315249, 0.0006479747, 0.00040…\n$ pr_0.20              <dbl> 0.0011679051, 0.0010706518, 0.0009325680, 0.00088…\n$ perspr_0.85          <dbl> 0.0016432968, 0.0008315249, 0.0006479747, 0.00040…\n$ perspr_0.99          <dbl> 0.0017826047, 0.0006187399, 0.0006012571, 0.00030…\n$ Future               <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…"
  },
  {
    "objectID": "datasets.html#oes",
    "href": "datasets.html#oes",
    "title": "1  Datasett",
    "section": "1.11 oes",
    "text": "1.11 oes\n\n\nCode\noes <- readRDS(\"../data/oes.rds\")\nclass(oes)\n\n\n[1] \"matrix\" \"array\" \n\n\nCode\nglimpse(oes)\n\n\n num [1:22, 1:15] 70800 50580 60350 56330 49710 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:22] \"Management\" \"Business Operations\" \"Computer Science\" \"Architecture/Engineering\" ...\n  ..$ : chr [1:15] \"2001\" \"2002\" \"2003\" \"2004\" ..."
  },
  {
    "objectID": "datasets.html#overfit",
    "href": "datasets.html#overfit",
    "title": "1  Datasett",
    "section": "1.12 Overfit",
    "text": "1.12 Overfit\nSimulerte data.\n\n\nCode\noverfit <- read.csv(\"../data/overfit.csv\")\nglimpse(overfit)\n\n\nRows: 250\nColumns: 201\n$ y    <chr> \"class2\", \"class2\", \"class2\", \"class1\", \"class2\", \"class2\", \"clas…\n$ X1   <dbl> 0.91480604, 0.93707541, 0.28613953, 0.83044763, 0.64174552, 0.519…\n$ X2   <dbl> 0.33423133, 0.18843433, 0.26971618, 0.53074408, 0.02145023, 0.798…\n$ X3   <dbl> 0.1365052, 0.1771364, 0.5195605, 0.8111208, 0.1153620, 0.8934218,…\n$ X4   <dbl> 0.244920995, 0.087635909, 0.391108497, 0.182561425, 0.133624785, …\n$ X5   <dbl> 0.84829322, 0.06274633, 0.81984509, 0.53936029, 0.49902010, 0.022…\n$ X6   <dbl> 0.73592037, 0.75178575, 0.33261448, 0.05754862, 0.67441545, 0.041…\n$ X7   <dbl> 0.053911000, 0.955095770, 0.025600940, 0.920763139, 0.366664745, …\n$ X8   <dbl> 0.16517872, 0.72778108, 0.20615786, 0.58646553, 0.91354598, 0.206…\n$ X9   <dbl> 0.98996559, 0.43849361, 0.69990322, 0.88907696, 0.83415947, 0.734…\n$ X10  <dbl> 0.24640458, 0.02302811, 0.28421418, 0.81289268, 0.71891839, 0.529…\n$ X11  <dbl> 0.06038098, 0.93300437, 0.34894162, 0.41179789, 0.96114648, 0.531…\n$ X12  <dbl> 0.40882313, 0.31586194, 0.49472762, 0.64893000, 0.64986247, 0.502…\n$ X13  <dbl> 0.27379245, 0.94419670, 0.44598332, 0.54178716, 0.16175446, 0.693…\n$ X14  <dbl> 0.313369113, 0.688717818, 0.532391957, 0.759994458, 0.649843224, …\n$ X15  <dbl> 0.19940178, 0.56649540, 0.16805282, 0.94363115, 0.50440809, 0.047…\n$ X16  <dbl> 0.85550816, 0.21655583, 0.31746986, 0.54139804, 0.43033935, 0.364…\n$ X17  <dbl> 0.59892983, 0.96894761, 0.39053533, 0.85281451, 0.04228755, 0.424…\n$ X18  <dbl> 0.36410202, 0.43261605, 0.72886793, 0.26279787, 0.76897162, 0.510…\n$ X19  <dbl> 0.29991068, 0.07423252, 0.92831706, 0.40114898, 0.66537518, 0.024…\n$ X20  <dbl> 0.51241735, 0.49846335, 0.13677730, 0.45071464, 0.31333681, 0.733…\n$ X21  <dbl> 0.73149367, 0.56095270, 0.49818835, 0.84105947, 0.46364445, 0.198…\n$ X22  <dbl> 0.88671723, 0.78957374, 0.54639519, 0.06316993, 0.57615483, 0.212…\n$ X23  <dbl> 0.84276937, 0.76905791, 0.91884069, 0.35572491, 0.93765242, 0.591…\n$ X24  <dbl> 0.22653454, 0.29303699, 0.12607726, 0.71019872, 0.84793411, 0.986…\n$ X25  <dbl> 0.24646324, 0.53030519, 0.21397210, 0.02584904, 0.34200247, 0.394…\n$ X26  <dbl> 0.03078282, 0.91007049, 0.14263568, 0.43959793, 0.44986382, 0.658…\n$ X27  <dbl> 0.24399196, 0.88613340, 0.36574050, 0.25022753, 0.77121355, 0.422…\n$ X28  <dbl> 0.440314306, 0.445281863, 0.080888182, 0.152905060, 0.820517540, …\n$ X29  <dbl> 0.61425763, 0.87616254, 0.09615188, 0.17540170, 0.45457902, 0.739…\n$ X30  <dbl> 0.60700663, 0.03163189, 0.93982109, 0.74308481, 0.14370810, 0.384…\n$ X31  <dbl> 0.776540211, 0.023826756, 0.431787197, 0.366538520, 0.395403284, …\n$ X32  <dbl> 0.21014358, 0.71164460, 0.43516471, 0.97595423, 0.70049885, 0.510…\n$ X33  <dbl> 0.44361558, 0.32834604, 0.20785167, 0.19192139, 0.37238598, 0.726…\n$ X34  <dbl> 0.23989117, 0.89145398, 0.14831578, 0.42380827, 0.72906967, 0.787…\n$ X35  <dbl> 0.63630187, 0.68359615, 0.46272876, 0.59296401, 0.19894796, 0.735…\n$ X36  <dbl> 0.57228237, 0.46182573, 0.13543040, 0.58246224, 0.11457965, 0.952…\n$ X37  <dbl> 0.41975693, 0.82613983, 0.11230086, 0.20392210, 0.49221061, 0.765…\n$ X38  <dbl> 0.95004438, 0.11276168, 0.85793189, 0.26989327, 0.27215558, 0.717…\n$ X39  <dbl> 0.35872817, 0.49724268, 0.25065359, 0.77495504, 0.13947736, 0.311…\n$ X40  <dbl> 0.49694824, 0.99363492, 0.68541077, 0.71740832, 0.51023013, 0.091…\n$ X41  <dbl> 0.52838964, 0.64638788, 0.83404903, 0.34576255, 0.62173293, 0.663…\n$ X42  <dbl> 0.53637297, 0.02224803, 0.97147909, 0.60075658, 0.41735487, 0.355…\n$ X43  <dbl> 0.003498503, 0.470631273, 0.447381378, 0.418609717, 0.865590246, …\n$ X44  <dbl> 0.031088332, 0.371195921, 0.289065880, 0.142796479, 0.645574720, …\n$ X45  <dbl> 0.78957600, 0.60768116, 0.98599694, 0.65056791, 0.38907707, 0.751…\n$ X46  <dbl> 0.90801477, 0.22839369, 0.03609499, 0.75519239, 0.14964131, 0.158…\n$ X47  <dbl> 0.574356003, 0.347256795, 0.542842712, 0.270195707, 0.703264663, …\n$ X48  <dbl> 0.04658951, 0.81377534, 0.06971775, 0.45726551, 0.93253494, 0.562…\n$ X49  <dbl> 0.568608369, 0.217880581, 0.101515466, 0.698102254, 0.192725791, …\n$ X50  <dbl> 0.70674255, 0.93513637, 0.32386434, 0.42993684, 0.26389910, 0.063…\n$ X51  <dbl> 0.35659105, 0.20800169, 0.10062093, 0.13811304, 0.02372436, 0.389…\n$ X52  <dbl> 0.6176513, 0.3523196, 0.6447219, 0.2108743, 0.9677561, 0.9384980,…\n$ X53  <dbl> 0.89379587, 0.48063380, 0.16016976, 0.90606024, 0.74804671, 0.346…\n$ X54  <dbl> 0.09195006, 0.04368308, 0.03980983, 0.67766094, 0.32464831, 0.842…\n$ X55  <dbl> 0.40665568, 0.90273489, 0.18040390, 0.05992027, 0.37985999, 0.506…\n$ X56  <dbl> 0.82231507, 0.46761749, 0.88325679, 0.23977046, 0.08607674, 0.017…\n$ X57  <dbl> 0.92166222, 0.02544768, 0.71131622, 0.08098793, 0.83676312, 0.137…\n$ X58  <dbl> 0.70143425, 0.20914840, 0.30949109, 0.75071442, 0.83867712, 0.094…\n$ X59  <dbl> 0.57086475, 0.31707423, 0.00622546, 0.32235315, 0.76597286, 0.078…\n$ X60  <dbl> 0.22403629, 0.71769261, 0.23348081, 0.11093189, 0.01509131, 0.411…\n$ X61  <dbl> 0.61544117, 0.81500369, 0.34300935, 0.38827650, 0.01461812, 0.157…\n$ X62  <dbl> 0.39420984, 0.94813472, 0.75282056, 0.86577343, 0.37460957, 0.902…\n$ X63  <dbl> 0.88882277, 0.51720327, 0.34884470, 0.85602299, 0.13883586, 0.493…\n$ X64  <dbl> 0.609959334, 0.801461577, 0.524867217, 0.672061241, 0.290321075, …\n$ X65  <dbl> 0.47709234, 0.19922838, 0.40166670, 0.57517642, 0.06373411, 0.475…\n$ X66  <dbl> 0.55782963, 0.58179578, 0.35338641, 0.91979352, 0.14328077, 0.032…\n$ X67  <dbl> 0.69121938, 0.35959736, 0.51719022, 0.49845355, 0.12686001, 0.114…\n$ X68  <dbl> 0.79023679, 0.29431606, 0.32632441, 0.02167086, 0.47265368, 0.511…\n$ X69  <dbl> 0.53079266, 0.64474625, 0.13998155, 0.31667922, 0.87136319, 0.639…\n$ X70  <dbl> 0.61211085, 0.22469525, 0.44505162, 0.44177333, 0.81945392, 0.253…\n$ X71  <dbl> 0.992744554, 0.660086332, 0.990871294, 0.843593776, 0.931862731, …\n$ X72  <dbl> 0.66891022, 0.76956286, 0.04286123, 0.09322869, 0.37029750, 0.479…\n$ X73  <dbl> 0.1782290782, 0.5898728392, 0.3100116646, 0.9048300500, 0.0009339…\n$ X74  <dbl> 0.65168895, 0.09957865, 0.61739505, 0.37862555, 0.02331053, 0.842…\n$ X75  <dbl> 0.13139016, 0.20797646, 0.65724972, 0.05183997, 0.89112706, 0.971…\n$ X76  <dbl> 0.6016485, 0.5147675, 0.9524858, 0.6899449, 0.6909429, 0.3970206,…\n$ X77  <dbl> 0.80038216, 0.37053159, 0.43891339, 0.08944712, 0.16717954, 0.997…\n$ X78  <dbl> 0.03375497, 0.19464773, 0.64983446, 0.21965484, 0.85817933, 0.887…\n$ X79  <dbl> 0.61489699, 0.07567500, 0.55251763, 0.46364387, 0.93007098, 0.532…\n$ X80  <dbl> 0.550195466, 0.907458914, 0.782375696, 0.605479471, 0.914219666, …\n$ X81  <dbl> 0.87760735, 0.45543547, 0.42456263, 0.93879964, 0.38611630, 0.444…\n$ X82  <dbl> 0.87712898, 0.55860808, 0.68894556, 0.67370478, 0.18865783, 0.979…\n$ X83  <dbl> 0.45917438, 0.96913990, 0.79622297, 0.11110564, 0.43083634, 0.113…\n$ X84  <dbl> 2.265618e-02, 5.166253e-01, 1.737207e-01, 8.481156e-01, 4.830206e…\n$ X85  <dbl> 0.82100470, 0.09394557, 0.17385249, 0.08457514, 0.99570426, 0.252…\n$ X86  <dbl> 0.9451794, 0.6691676, 0.3524983, 0.2725157, 0.7055095, 0.1484418,…\n$ X87  <dbl> 0.40031711, 0.36259803, 0.93234951, 0.21494830, 0.18531663, 0.019…\n$ X88  <dbl> 0.5063815, 0.4020096, 0.1412987, 0.6899701, 0.1049531, 0.6162294,…\n$ X89  <dbl> 0.38419708, 0.38109557, 0.67869493, 0.75592458, 0.06213957, 0.897…\n$ X90  <dbl> 0.59784310, 0.34378391, 0.38737612, 0.82712741, 0.71611278, 0.178…\n$ X91  <dbl> 0.31784285, 0.95808926, 0.26911697, 0.60201218, 0.56594969, 0.933…\n$ X92  <dbl> 0.63577017, 0.18256200, 0.61096669, 0.09389158, 0.50872714, 0.154…\n$ X93  <dbl> 0.16898034, 0.16977626, 0.05505954, 0.65476919, 0.88375557, 0.210…\n$ X94  <dbl> 0.43631094, 0.50747459, 0.70454115, 0.66092330, 0.25017558, 0.971…\n$ X95  <dbl> 0.74558734, 0.88742323, 0.05273777, 0.12751347, 0.43159573, 0.024…\n$ X96  <dbl> 0.91218140, 0.74437113, 0.24672669, 0.74064849, 0.89100560, 0.083…\n$ X97  <dbl> 0.521450796, 0.002551967, 0.774404447, 0.037558054, 0.598648517, …\n$ X98  <dbl> 0.09177065, 0.72371277, 0.47358313, 0.06946549, 0.41871902, 0.628…\n$ X99  <dbl> 0.73411696, 0.20450219, 0.75417832, 0.30300187, 0.18783615, 0.472…\n$ X100 <dbl> 0.320770567, 0.593723377, 0.858523079, 0.757005788, 0.591086555, …\n$ X101 <dbl> 0.34108814, 0.07692370, 0.17643467, 0.43990862, 0.93757514, 0.653…\n$ X102 <dbl> 0.6124809, 0.1278179, 0.2325618, 0.2011980, 0.3795888, 0.9011956,…\n$ X103 <dbl> 0.0006371774, 0.9994430819, 0.3747437985, 0.0339846939, 0.3704907…\n$ X104 <dbl> 0.54743368, 0.47927159, 0.17748406, 0.63595546, 0.57832854, 0.499…\n$ X105 <dbl> 0.03589639, 0.96449950, 0.45762041, 0.68747009, 0.96663348, 0.794…\n$ X106 <dbl> 0.64268733, 0.34132692, 0.03583915, 0.19993296, 0.65268200, 0.101…\n$ X107 <dbl> 0.23045683, 0.25149597, 0.04275977, 0.98033429, 0.48489585, 0.931…\n$ X108 <dbl> 0.593971942, 0.528231378, 0.809968454, 0.588263725, 0.220807231, …\n$ X109 <dbl> 0.53344042, 0.03137963, 0.04959282, 0.23380904, 0.89631450, 0.981…\n$ X110 <dbl> 0.95277784, 0.65035223, 0.26233431, 0.96049400, 0.77337705, 0.717…\n$ X111 <dbl> 0.95001493, 0.80696333, 0.76912510, 0.74866022, 0.57319224, 0.360…\n$ X112 <dbl> 0.44486670, 0.34772122, 0.80746171, 0.03664129, 0.89283247, 0.802…\n$ X113 <dbl> 0.01083590, 0.12578299, 0.50185677, 0.18031296, 0.05301032, 0.062…\n$ X114 <dbl> 0.01484451, 0.17502226, 0.25231490, 0.99640743, 0.86648632, 0.436…\n$ X115 <dbl> 0.06289119, 0.89214340, 0.28707657, 0.64055932, 0.13174253, 0.435…\n$ X116 <dbl> 0.581997880, 0.665076771, 0.875653535, 0.070306693, 0.004420665, …\n$ X117 <dbl> 0.5924448, 0.8878863, 0.5235236, 0.3749164, 0.8752077, 0.7159711,…\n$ X118 <dbl> 0.46235305, 0.86934930, 0.22476541, 0.54021836, 0.61095944, 0.216…\n$ X119 <dbl> 0.450867994, 0.529698077, 0.158835076, 0.062714112, 0.449445076, …\n$ X120 <dbl> 0.194360079, 0.976134765, 0.987192112, 0.511937499, 0.198381412, …\n$ X121 <dbl> 0.15381438, 0.40933156, 0.22537445, 0.35218675, 0.11016184, 0.068…\n$ X122 <dbl> 0.982242217, 0.520649012, 0.445695450, 0.462261930, 0.002215227, …\n$ X123 <dbl> 0.29473281, 0.25111598, 0.80001735, 0.23422839, 0.10682602, 0.533…\n$ X124 <dbl> 0.110216588, 0.080252397, 0.625394831, 0.722216522, 0.076139339, …\n$ X125 <dbl> 0.40581025, 0.77477036, 0.36472709, 0.48756066, 0.76660301, 0.126…\n$ X126 <dbl> 0.5527448577, 0.8601254835, 0.7557375506, 0.4862461151, 0.9917928…\n$ X127 <dbl> 0.287887782, 0.130535906, 0.678490788, 0.731766421, 0.852517054, …\n$ X128 <dbl> 0.55946411, 0.21613476, 0.64567381, 0.05425676, 0.77481876, 0.881…\n$ X129 <dbl> 0.68992925, 0.65888045, 0.69797577, 0.28211569, 0.33643846, 0.812…\n$ X130 <dbl> 0.60577396, 0.12628377, 0.45778471, 0.31388965, 0.64821851, 0.206…\n$ X131 <dbl> 0.63405048, 0.91769299, 0.91924084, 0.71750403, 0.57506495, 0.025…\n$ X132 <dbl> 0.041380533, 0.404302723, 0.766801183, 0.005256724, 0.354915085, …\n$ X133 <dbl> 0.11652459, 0.03312483, 0.12827443, 0.82357734, 0.30659273, 0.935…\n$ X134 <dbl> 0.58257253, 0.56697654, 0.98460286, 0.52459081, 0.56029214, 0.836…\n$ X135 <dbl> 0.70794842, 0.48408234, 0.77778677, 0.02017853, 0.01777780, 0.370…\n$ X136 <dbl> 0.290923866, 0.461145974, 0.862764690, 0.664291186, 0.342283815, …\n$ X137 <dbl> 0.54379718, 0.79342000, 0.22947185, 0.35309806, 0.30479632, 0.505…\n$ X138 <dbl> 0.12864488, 0.23981618, 0.57799386, 0.61747643, 0.42131623, 0.644…\n$ X139 <dbl> 0.80948772, 0.82146921, 0.18526767, 0.25488536, 0.92072300, 0.742…\n$ X140 <dbl> 0.40163113, 0.79277151, 0.11738340, 0.36496598, 0.53668048, 0.486…\n$ X141 <dbl> 0.93672809, 0.93622742, 0.89760746, 0.45901700, 0.57605307, 0.733…\n$ X142 <dbl> 0.27464358, 0.29368103, 0.62729678, 0.44948535, 0.17790995, 0.661…\n$ X143 <dbl> 0.59995153, 0.16334854, 0.17710410, 0.26653590, 0.00149341, 0.774…\n$ X144 <dbl> 0.61420305, 0.70992172, 0.07593862, 0.77857178, 0.63019430, 0.303…\n$ X145 <dbl> 0.84734796, 0.31810196, 0.07364713, 0.02329525, 0.92182790, 0.742…\n$ X146 <dbl> 0.21923829, 0.15674629, 0.08922226, 0.74250158, 0.10475932, 0.155…\n$ X147 <dbl> 0.82867974, 0.97047839, 0.47023973, 0.93823417, 0.95659470, 0.041…\n$ X148 <dbl> 0.94290037, 0.64720576, 0.55771586, 0.39179048, 0.09407949, 0.514…\n$ X149 <dbl> 0.50831853, 0.71756154, 0.45590210, 0.62706908, 0.80086560, 0.355…\n$ X150 <dbl> 0.25527703, 0.03806863, 0.45961098, 0.29450119, 0.69764193, 0.012…\n$ X151 <dbl> 0.75268296, 0.89675927, 0.76857671, 0.22820199, 0.75203108, 0.572…\n$ X152 <dbl> 0.01497518, 0.04082960, 0.70849826, 0.07697517, 0.10761805, 0.317…\n$ X153 <dbl> 0.96331279, 0.80074165, 0.39650955, 0.63353348, 0.09724402, 0.399…\n$ X154 <dbl> 0.16493185, 0.83442190, 0.96948408, 0.69882495, 0.08477651, 0.896…\n$ X155 <dbl> 0.5734490, 0.7298989, 0.5114832, 0.9638506, 0.8876985, 0.6552185,…\n$ X156 <dbl> 0.61722732, 0.48946893, 0.98226532, 0.47115250, 0.22797774, 0.408…\n$ X157 <dbl> 0.01984267, 0.71974924, 0.13222445, 0.15887531, 0.68196120, 0.913…\n$ X158 <dbl> 0.99238742, 0.76420404, 0.12251792, 0.87889145, 0.91365401, 0.205…\n$ X159 <dbl> 0.8431326, 0.9155692, 0.2006651, 0.6495318, 0.5322480, 0.9216390,…\n$ X160 <dbl> 0.45162519, 0.37011191, 0.28511322, 0.72468087, 0.67125896, 0.717…\n$ X161 <dbl> 0.27610230, 0.30687340, 0.41455622, 0.91913345, 0.53340060, 0.034…\n$ X162 <dbl> 0.74179679, 0.30933747, 0.66539232, 0.06219363, 0.44950719, 0.859…\n$ X163 <dbl> 0.48524905, 0.36506517, 0.05123008, 0.49290181, 0.15271272, 0.129…\n$ X164 <dbl> 0.003358962, 0.837234325, 0.249701695, 0.994318883, 0.331355318, …\n$ X165 <dbl> 0.35415790, 0.13497580, 0.25971016, 0.60124062, 0.29420728, 0.084…\n$ X166 <dbl> 0.89672245, 0.46684672, 0.53437967, 0.77532677, 0.69481356, 0.182…\n$ X167 <dbl> 0.88342865, 0.52352974, 0.30868933, 0.79706734, 0.80763492, 0.309…\n$ X168 <dbl> 0.80612878, 0.62438562, 0.32505099, 0.45196535, 0.87144019, 0.639…\n$ X169 <dbl> 0.12920871, 0.65226440, 0.55483697, 0.41089107, 0.92764952, 0.656…\n$ X170 <dbl> 0.191168652, 0.932518969, 0.666639159, 0.996674388, 0.080400448, …\n$ X171 <dbl> 0.285561043, 0.198662249, 0.803086133, 0.394731248, 0.715471951, …\n$ X172 <dbl> 0.88923767, 0.11641914, 0.75219803, 0.70289791, 0.01533145, 0.562…\n$ X173 <dbl> 0.587049352, 0.133504347, 0.906179729, 0.392166968, 0.941810693, …\n$ X174 <dbl> 0.88877075, 0.85607289, 0.46824726, 0.32963398, 0.04961305, 0.408…\n$ X175 <dbl> 0.15143056, 0.42410270, 0.43306244, 0.83792064, 0.66134127, 0.426…\n$ X176 <dbl> 0.212245659, 0.516595498, 0.044004837, 0.018832981, 0.279196070, …\n$ X177 <dbl> 0.15721560, 0.88458393, 0.43112766, 0.94759465, 0.15020222, 0.236…\n$ X178 <dbl> 0.41750018, 0.15750317, 0.94900001, 0.77882266, 0.42591497, 0.513…\n$ X179 <dbl> 0.7225748, 0.0794626, 0.9359233, 0.7653506, 0.9541247, 0.5040790,…\n$ X180 <dbl> 0.75372096, 0.61866392, 0.22093972, 0.49391558, 0.31082164, 0.093…\n$ X181 <dbl> 0.39552157, 0.87280757, 0.16521581, 0.15224052, 0.98338642, 0.856…\n$ X182 <dbl> 0.4887184, 0.9823968, 0.8082559, 0.7771462, 0.5740921, 0.3805437,…\n$ X183 <dbl> 0.50930862, 0.39664574, 0.99125548, 0.34878537, 0.07616622, 0.277…\n$ X184 <dbl> 0.40526502, 0.04680688, 0.85048518, 0.88635905, 0.25642704, 0.245…\n$ X185 <dbl> 0.89972692, 0.41385540, 0.14096706, 0.76801954, 0.47034545, 0.233…\n$ X186 <dbl> 0.20133410, 0.02252797, 0.88720811, 0.64712794, 0.02694613, 0.304…\n$ X187 <dbl> 0.993279049, 0.551354672, 0.001778496, 0.927141098, 0.934355612, …\n$ X188 <dbl> 0.27672405, 0.80417281, 0.03994549, 0.17404809, 0.27263610, 0.036…\n$ X189 <dbl> 0.452414463, 0.758011176, 0.527843759, 0.890178879, 0.714881197, …\n$ X190 <dbl> 0.69119399, 0.78047338, 0.25094101, 0.52802851, 0.41050005, 0.316…\n$ X191 <dbl> 0.54065139, 0.14117820, 0.21067407, 0.82111615, 0.89305760, 0.169…\n$ X192 <dbl> 0.72225972, 0.13109110, 0.58957105, 0.59130608, 0.98799686, 0.154…\n$ X193 <dbl> 0.002576062, 0.411775569, 0.891389510, 0.767070756, 0.598619170, …\n$ X194 <dbl> 0.25223405, 0.52042257, 0.77904746, 0.08815411, 0.60512811, 0.088…\n$ X195 <dbl> 0.55681595, 0.49866879, 0.39123403, 0.82405905, 0.56659618, 0.664…\n$ X196 <dbl> 0.088039457, 0.676268845, 0.090208757, 0.414879716, 0.017012865, …\n$ X197 <dbl> 0.739964231, 0.972430318, 0.659945773, 0.333751146, 0.236852382, …\n$ X198 <dbl> 0.37386198, 0.83937505, 0.83710146, 0.55367959, 0.70161397, 0.945…\n$ X199 <dbl> 0.671563295, 0.746817349, 0.978584267, 0.704102835, 0.700080012, …\n$ X200 <dbl> 0.0001012264, 0.8653565315, 0.3703812116, 0.6651317959, 0.3351982…"
  },
  {
    "objectID": "datasets.html#voters",
    "href": "datasets.html#voters",
    "title": "1  Datasett",
    "section": "1.13 Voters",
    "text": "1.13 Voters\nData er hentet fra 2016 Views of the Electorate Research Survey gjennomført av Voter study group.\nAktuell problemstilling er å predikere hvilke velgere som støtter Clinton. En slik klassifisering kan brukes til f.eks. å målrette budskap. En relatert problemstilling er å klustre velgerne for å finne segmenter\n\n\nCode\nvoters <- read.csv(\"../data/voters.csv\")\nglimpse(voters)\n\n\nRows: 6,426\nColumns: 42\n$ RIGGED_SYSTEM_1_2016 <int> 3, 2, 2, 1, 3, 3, 3, 2, 4, 2, 3, 3, 4, 4, 3, 3, 2…\n$ RIGGED_SYSTEM_2_2016 <int> 4, 1, 4, 4, 1, 3, 4, 3, 4, 3, 2, 2, 3, 2, 4, 3, 2…\n$ RIGGED_SYSTEM_3_2016 <int> 1, 3, 1, 1, 3, 2, 1, 3, 1, 1, 1, 4, 1, 1, 1, 1, 3…\n$ RIGGED_SYSTEM_4_2016 <int> 4, 1, 4, 4, 1, 2, 1, 2, 3, 2, 4, 1, 3, 4, 2, 2, 1…\n$ RIGGED_SYSTEM_5_2016 <int> 3, 3, 1, 2, 3, 2, 2, 1, 3, 2, 2, 2, 3, 3, 2, 3, 2…\n$ RIGGED_SYSTEM_6_2016 <int> 2, 2, 1, 1, 2, 3, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2…\n$ track_2016           <int> 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 3, 2, 2, 2…\n$ persfinretro_2016    <int> 2, 3, 3, 1, 2, 2, 2, 3, 2, 1, 2, 3, 2, 2, 2, 2, 2…\n$ econtrend_2016       <int> 1, 3, 3, 1, 2, 2, 1, 3, 1, 1, 1, 3, 2, 1, 4, 3, 2…\n$ Americatrend_2016    <int> 1, 1, 1, 3, 3, 1, 2, 3, 2, 1, 3, 3, 2, 1, 1, 3, 1…\n$ futuretrend_2016     <int> 4, 1, 1, 3, 4, 3, 1, 3, 1, 1, 3, 1, 1, 4, 3, 4, 3…\n$ wealth_2016          <int> 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1…\n$ values_culture_2016  <int> 2, 3, 3, 3, 3, 2, 3, 3, 1, 3, 3, 2, 1, 1, 3, 8, 3…\n$ US_respect_2016      <int> 2, 3, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3…\n$ trustgovt_2016       <int> 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3…\n$ trust_people_2016    <int> 8, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 8, 8, 2, 2…\n$ helpful_people_2016  <int> 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 8, 1, 1…\n$ fair_people_2016     <int> 8, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 2, 8, 2, 1…\n$ imiss_a_2016         <int> 2, 1, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 2, 1, 2, 2, 2…\n$ imiss_b_2016         <int> 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1…\n$ imiss_c_2016         <int> 1, 2, 2, 3, 1, 2, 2, 1, 4, 2, 3, 1, 2, 2, 3, 1, 1…\n$ imiss_d_2016         <int> 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 3, 2, 1, 1, 1, 3…\n$ imiss_e_2016         <int> 1, 1, 3, 1, 1, 3, 1, 2, 1, 1, 2, 2, 4, 1, 4, 2, 1…\n$ imiss_f_2016         <int> 2, 1, 1, 2, 1, 2, 1, 3, 2, 1, 1, 1, 2, 1, 3, 2, 2…\n$ imiss_g_2016         <int> 1, 4, 3, 3, 3, 1, 3, 4, 2, 2, 1, 4, 1, 2, 1, 1, 4…\n$ imiss_h_2016         <int> 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 3…\n$ imiss_i_2016         <int> 2, 2, 4, 4, 2, 1, 1, 3, 2, 1, 1, 2, 1, 2, 2, 2, 3…\n$ imiss_j_2016         <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2…\n$ imiss_k_2016         <int> 1, 2, 1, 1, 2, 1, 1, 4, 2, 1, 1, 3, 1, 1, 1, 1, 1…\n$ imiss_l_2016         <int> 1, 4, 1, 2, 4, 1, 1, 3, 1, 1, 1, 4, 2, 1, 1, 1, 3…\n$ imiss_m_2016         <int> 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1…\n$ imiss_n_2016         <int> 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1…\n$ imiss_o_2016         <int> 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1…\n$ imiss_p_2016         <int> 2, 1, 2, 3, 1, 3, 1, 1, 4, 1, 1, 1, 2, 3, 2, 3, 1…\n$ imiss_q_2016         <int> 1, 1, 1, 2, 2, 1, 1, 4, 2, 1, 1, 3, 1, 1, 2, 2, 3…\n$ imiss_r_2016         <int> 2, 1, 1, 2, 1, 2, 1, 2, 4, 2, 2, 1, 3, 2, 2, 2, 1…\n$ imiss_s_2016         <int> 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 3…\n$ imiss_t_2016         <int> 1, 1, 3, 3, 1, 1, 3, 4, 1, 1, 1, 3, 1, 3, 1, 1, 3…\n$ imiss_u_2016         <int> 2, 2, 2, 2, 1, 3, 3, 1, 4, 2, 3, 2, 4, 3, 3, 3, 1…\n$ imiss_x_2016         <int> 1, 3, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 2, 3…\n$ imiss_y_2016         <int> 1, 4, 2, 3, 1, 1, 1, 3, 2, 1, 1, 3, 1, 1, 1, 2, 2…\n$ Clinton_supp         <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"Yes\", \"Yes\", \"No…"
  }
]